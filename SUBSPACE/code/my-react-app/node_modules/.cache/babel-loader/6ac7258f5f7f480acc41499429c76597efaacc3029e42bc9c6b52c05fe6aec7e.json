{"ast":null,"code":"var _jsxFileName = \"/home/bipasha/Desktop/research/Data_Viz_Beads/Subspace/code/my-react-app/src/JsonDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HierarchicalGraph = ({\n  jsonData,\n  labelsData,\n  setHoveredCoordinates,\n  ringVisibility\n}) => {\n  _s();\n  const graphRef = useRef(null);\n  useEffect(() => {\n    if (!jsonData || typeof jsonData !== \"object\" || Object.keys(jsonData).length === 0) {\n      console.error(\"Invalid or empty jsonData:\", jsonData);\n      return;\n    }\n    if (!labelsData || typeof labelsData !== \"object\") {\n      console.error(\"Invalid labelsData:\", labelsData);\n      return;\n    }\n    const svg = d3.select(graphRef.current);\n    svg.selectAll(\"*\").remove();\n    const width = 800;\n    const height = 800;\n    const margin = 20;\n    const maxRadius = Math.min(width, height) / 2 - margin;\n    const g = svg.attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"position\", \"absolute\").style(\"visibility\", \"hidden\").style(\"background-color\", \"rgba(0, 0, 0, 0.7)\").style(\"color\", \"white\").style(\"padding\", \"5px\").style(\"border-radius\", \"4px\").style(\"font-size\", \"12px\");\n    const getLabelColor = pointId => {\n      if (!labelsData || !labelsData.labels) return \"gray\";\n      for (const label of Object.keys(labelsData.labels)) {\n        const pointList = labelsData.labels[label];\n        if (Array.isArray(pointList) && pointList.includes(Number(pointId))) {\n          return colorScale(label);\n        }\n      }\n      return \"gray\";\n    };\n    const colorScale = d3.scaleOrdinal(d3.schemeCategory10).domain(Object.keys(labelsData.labels || {}));\n    const getRingColor = index => {\n      const totalRings = Object.keys(jsonData).length;\n      const colorScaleInd = d3.scaleSequential(d3.interpolatePlasma).domain([totalRings, 0]);\n      return d3.color(colorScaleInd(index));\n    };\n    const getSectorColor = (index, sectorIndex) => {\n      const baseColor = d3.hsl(getRingColor(index));\n      const isPositive = sectorIndex % 2 === 0;\n      return d3.hsl(baseColor.h, baseColor.s, isPositive ? 0.75 : 0.35).toString();\n    };\n    const subspaces = Object.keys(jsonData);\n    subspaces.sort((a, b) => a.length - b.length);\n    const pointsData = subspaces.map(key => ({\n      key,\n      points: jsonData[key],\n      dimensions: key.length,\n      subspaceId: key\n    }));\n    const ringLabels = subspaces.map((_, i) => String.fromCharCode(65 + i));\n    const pointPositions = {};\n    let highlightedElements = null;\n    subspaces.forEach((key, index) => {\n      if (!ringVisibility[key]) return;\n      const innerRadius = index / subspaces.length * maxRadius;\n      const outerRadius = (index + 1) / subspaces.length * maxRadius;\n      const sectors = 2 ** (index + 1);\n      const rotationOffset = Math.PI / 2;\n      for (let i = 0; i < sectors; i++) {\n        const startAngle = 2 * Math.PI * i / sectors + rotationOffset;\n        const endAngle = 2 * Math.PI * (i + 1) / sectors + rotationOffset;\n        g.append(\"path\").attr(\"d\", d3.arc().innerRadius(innerRadius).outerRadius(outerRadius).startAngle(startAngle).endAngle(endAngle)).attr(\"fill\", getSectorColor(index, i)).attr(\"fill-opacity\", 0.3).attr(\"stroke\", \"black\").attr(\"stroke-width\", 0.5).style(\"cursor\", \"pointer\");\n        g.append(\"text\").attr(\"x\", 0).attr(\"y\", -outerRadius - 5).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"16px\").attr(\"fill\", \"red\").attr(\"font-weight\", \"bold\").text(ringLabels[index]);\n        g.append(\"text\").attr(\"transform\", d => {\n          const midAngle = (startAngle + endAngle) / 2;\n          const textRadius = (innerRadius + outerRadius) / 2;\n          const x = textRadius * Math.cos(Math.PI / 2 - midAngle);\n          const y = textRadius * Math.sin(Math.PI / 2 - midAngle);\n          let angleDeg = (midAngle - Math.PI / 2) * 180 / Math.PI;\n          let rotation = angleDeg > 90 && angleDeg < 270 ? 0 : 0;\n          return `translate(${x}, ${y}) rotate(${rotation})`;\n        }).attr(\"text-anchor\", \"middle\").attr(\"alignment-baseline\", \"middle\").attr(\"font-size\", \"14px\").attr(\"fill\", \"black\").attr(\"font-weight\", \"normal\").text(i.toString(2).padStart(index + 1, \"0\").replace(/0/g, \"*\").replace(/1/g, \"0\").replace(/\\*/g, \"1\"));\n      }\n      for (let i = 0; i < sectors; i++) {\n        const angle = 2 * Math.PI * i / sectors;\n        const x1 = outerRadius * Math.cos(angle);\n        const y1 = outerRadius * Math.sin(angle);\n        const x2 = innerRadius * Math.cos(angle);\n        const y2 = innerRadius * Math.sin(angle);\n        g.append(\"line\").attr(\"x1\", x2).attr(\"y1\", y2).attr(\"x2\", x1).attr(\"y2\", y1).attr(\"stroke\", \"black\").attr(\"stroke-width\", 0.25).style(\"pointer-events\", \"none\");\n      }\n      pointsData[index].points.forEach((point, i) => {\n        const pointData = Object.entries(point).filter(([key]) => key !== \"Point_ID\");\n        const bitVector = pointData.map(([key, coord]) => coord >= 0 ? 1 : 0).join(\"\");\n        const minRadius = innerRadius;\n        const maxRadius = outerRadius;\n        const randomRadius = minRadius + Math.random() * (maxRadius - minRadius);\n        const bitVectorIndex = parseInt(bitVector, 2);\n        const angleStart = 2 * Math.PI * bitVectorIndex / sectors;\n        const angleEnd = 2 * Math.PI * (bitVectorIndex + 1) / sectors;\n        const centerAngle = (angleStart + angleEnd) / 2;\n        const totalPoints = pointsData[index].points.length;\n        const clusterFactor = 0.86;\n        const overlapRadius = innerRadius + clusterFactor * (outerRadius - innerRadius) * (i % totalPoints) / totalPoints;\n        const x = overlapRadius * Math.cos(centerAngle);\n        const y = overlapRadius * Math.sin(centerAngle);\n        point.Point_ID.forEach(id => {\n          if (!pointPositions[id]) {\n            pointPositions[id] = [];\n          }\n          pointPositions[id].push({\n            x,\n            y,\n            point,\n            subspaceId: key\n          });\n        });\n        g.append(\"circle\").attr(\"cx\", x).attr(\"cy\", y).attr(\"r\", 3).attr(\"fill\", \"black\").attr(\"stroke\", \"white\").attr(\"stroke-width\", 0.5).style(\"pointer-events\", \"visible\").on(\"mouseover\", event => {\n          const pointIds = point.Point_ID.join(\", \");\n          let associatedLabels = [];\n          if (labelsData && labelsData.labels) {\n            Object.entries(labelsData.labels).forEach(([label, pointList]) => {\n              if (point.Point_ID.some(id => pointList.includes(Number(id)))) {\n                associatedLabels.push(label);\n              }\n            });\n          }\n          const labelText = associatedLabels.length > 0 ? associatedLabels.join(\", \") : \"No Label\";\n          tooltip.style(\"visibility\", \"visible\").html(`Point_IDs: ${pointIds}<br>Coordinates: (${x.toFixed(2)}, ${y.toFixed(2)})<br>Subspace: ${key}<br>Label: ${labelText}`);\n          setHoveredCoordinates({\n            ...point,\n            label: labelText\n          });\n        }).on(\"mousemove\", event => {\n          tooltip.style(\"top\", event.pageY + 10 + \"px\").style(\"left\", event.pageX + 10 + \"px\");\n        }).on(\"mouseout\", () => {\n          tooltip.style(\"visibility\", \"hidden\");\n          setHoveredCoordinates(null);\n        });\n      });\n    });\n    Object.entries(pointPositions).forEach(([pointId, positions]) => {\n      if (positions.length > 1) {\n        for (let i = 0; i < positions.length - 1; i++) {\n          const line = g.append(\"line\").attr(\"x1\", positions[i].x).attr(\"y1\", positions[i].y).attr(\"x2\", positions[i + 1].x).attr(\"y2\", positions[i + 1].y).attr(\"stroke\", getLabelColor(pointId)).attr(\"stroke-width\", 1.5).attr(\"stroke-opacity\", 0.9).style(\"cursor\", \"pointer\").on(\"mouseover\", event => {\n            tooltip.style(\"visibility\", \"visible\").html(`Connection: Point_ID ${pointId}`);\n          }).on(\"mousemove\", event => {\n            tooltip.style(\"top\", event.pageY + 10 + \"px\").style(\"left\", event.pageX + 10 + \"px\");\n          }).on(\"mouseout\", () => {\n            tooltip.style(\"visibility\", \"hidden\");\n          }).on(\"click\", event => {\n            var _Object$entries$find;\n            const originalColor = getLabelColor(pointId);\n            line.attr(\"stroke-width\", 2).attr(\"stroke\", \"yellow\");\n            const circles = g.selectAll(\"circle\").filter(d => {\n              const circleX = parseFloat(this.getAttribute(\"cx\"));\n              const circleY = parseFloat(this.getAttribute(\"cy\"));\n              return Math.abs(circleX - positions[i].x) < 0.1 && Math.abs(circleY - positions[i].y) < 0.1 || Math.abs(circleX - positions[i + 1].x) < 0.1 && Math.abs(circleY - positions[i + 1].y) < 0.1;\n            }).attr(\"r\", 6).attr(\"fill\", \"yellow\");\n            highlightedElements = {\n              line,\n              circles,\n              originalColor\n            };\n            const point1 = positions[i].point;\n            const point2 = positions[i + 1].point;\n            const coords1 = Object.entries(point1).filter(([key]) => key !== \"Point_ID\").map(([key, value]) => `${key}: ${value}`).join(\", \");\n            const coords2 = Object.entries(point2).filter(([key]) => key !== \"Point_ID\").map(([key, value]) => `${key}: ${value}`).join(\", \");\n            const label1 = ((_Object$entries$find = Object.entries((labelsData === null || labelsData === void 0 ? void 0 : labelsData.labels) || {}).find(([_, ids]) => ids.includes(Number(pointId)))) === null || _Object$entries$find === void 0 ? void 0 : _Object$entries$find[0]) || \"No Label\";\n          });\n        }\n      }\n    });\n    const zoom = d3.zoom().on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n    });\n    svg.call(zoom);\n    return () => {\n      tooltip.remove();\n      svg.select(\".zoom-view\").remove();\n    };\n  }, [jsonData, labelsData, ringVisibility, setHoveredCoordinates]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: graphRef,\n      style: {\n        width: \"100%\",\n        height: \"800px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n};\n_s(HierarchicalGraph, \"XNG/roOlNWxTF7ymftfdirhS32A=\");\n_c = HierarchicalGraph;\nexport default HierarchicalGraph;\nvar _c;\n$RefreshReg$(_c, \"HierarchicalGraph\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","HierarchicalGraph","jsonData","labelsData","setHoveredCoordinates","ringVisibility","_s","graphRef","Object","keys","length","console","error","svg","select","current","selectAll","remove","width","height","margin","maxRadius","Math","min","g","attr","append","tooltip","style","getLabelColor","pointId","labels","label","pointList","Array","isArray","includes","Number","colorScale","scaleOrdinal","schemeCategory10","domain","getRingColor","index","totalRings","colorScaleInd","scaleSequential","interpolatePlasma","color","getSectorColor","sectorIndex","baseColor","hsl","isPositive","h","s","toString","subspaces","sort","a","b","pointsData","map","key","points","dimensions","subspaceId","ringLabels","_","i","String","fromCharCode","pointPositions","highlightedElements","forEach","innerRadius","outerRadius","sectors","rotationOffset","PI","startAngle","endAngle","arc","text","d","midAngle","textRadius","x","cos","y","sin","angleDeg","rotation","padStart","replace","angle","x1","y1","x2","y2","point","pointData","entries","filter","bitVector","coord","join","minRadius","randomRadius","random","bitVectorIndex","parseInt","angleStart","angleEnd","centerAngle","totalPoints","clusterFactor","overlapRadius","Point_ID","id","push","on","event","pointIds","associatedLabels","some","labelText","html","toFixed","pageY","pageX","positions","line","_Object$entries$find","originalColor","circles","circleX","parseFloat","getAttribute","circleY","abs","point1","point2","coords1","value","coords2","label1","find","ids","zoom","transform","call","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bipasha/Desktop/research/Data_Viz_Beads/Subspace/code/my-react-app/src/JsonDisplay.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\n\nconst HierarchicalGraph = ({ jsonData, labelsData, setHoveredCoordinates, ringVisibility }) => {\n  const graphRef = useRef(null);\n\n  useEffect(() => {\n    if (\n      !jsonData ||\n      typeof jsonData !== \"object\" ||\n      Object.keys(jsonData).length === 0\n    ) {\n      console.error(\"Invalid or empty jsonData:\", jsonData);\n      return;\n    }\n\n    if (!labelsData || typeof labelsData !== \"object\") {\n      console.error(\"Invalid labelsData:\", labelsData);\n      return;\n    }\n\n    const svg = d3.select(graphRef.current);\n    svg.selectAll(\"*\").remove();\n\n    const width = 800;\n    const height = 800;\n    const margin = 20;\n    const maxRadius = Math.min(width, height) / 2 - margin;\n\n    const g = svg\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n\n    const tooltip = d3\n      .select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"position\", \"absolute\")\n      .style(\"visibility\", \"hidden\")\n      .style(\"background-color\", \"rgba(0, 0, 0, 0.7)\")\n      .style(\"color\", \"white\")\n      .style(\"padding\", \"5px\")\n      .style(\"border-radius\", \"4px\")\n      .style(\"font-size\", \"12px\");\n\n    const getLabelColor = (pointId) => {\n      if (!labelsData || !labelsData.labels) return \"gray\";\n      for (const label of Object.keys(labelsData.labels)) {\n        const pointList = labelsData.labels[label];\n        if (Array.isArray(pointList) && pointList.includes(Number(pointId))) {\n          return colorScale(label);\n        }\n      }\n      return \"gray\";\n    };\n\n    const colorScale = d3\n      .scaleOrdinal(d3.schemeCategory10)\n      .domain(Object.keys(labelsData.labels || {}));\n\n    const getRingColor = (index) => {\n      const totalRings = Object.keys(jsonData).length;\n      const colorScaleInd = d3.scaleSequential(d3.interpolatePlasma).domain([totalRings, 0]);\n      return d3.color(colorScaleInd(index));\n    };\n\n    const getSectorColor = (index, sectorIndex) => {\n      const baseColor = d3.hsl(getRingColor(index));\n      const isPositive = sectorIndex % 2 === 0;\n      return d3.hsl(baseColor.h, baseColor.s, isPositive ? 0.75 : 0.35).toString();\n    };\n\n    const subspaces = Object.keys(jsonData);\n    subspaces.sort((a, b) => a.length - b.length);\n\n    const pointsData = subspaces.map((key) => ({\n      key,\n      points: jsonData[key],\n      dimensions: key.length,\n      subspaceId: key,\n    }));\n    const ringLabels = subspaces.map((_, i) => String.fromCharCode(65 + i));\n\n    const pointPositions = {};\n    let highlightedElements = null;\n\n\n    subspaces.forEach((key, index) => {\n      if (!ringVisibility[key]) return;\n\n      const innerRadius = (index / subspaces.length) * maxRadius;\n      const outerRadius = ((index + 1) / subspaces.length) * maxRadius;\n      const sectors = 2 ** (index + 1);\n      const rotationOffset = Math.PI / 2;\n\n      for (let i = 0; i < sectors; i++) {\n        const startAngle = (2 * Math.PI * i) / sectors + rotationOffset;\n        const endAngle = (2 * Math.PI * (i + 1)) / sectors + rotationOffset;\n\n        g.append(\"path\")\n          .attr(\"d\", d3.arc()\n            .innerRadius(innerRadius)\n            .outerRadius(outerRadius)\n            .startAngle(startAngle)\n            .endAngle(endAngle)\n          )\n          .attr(\"fill\", getSectorColor(index, i))\n          .attr(\"fill-opacity\", 0.3)\n          .attr(\"stroke\", \"black\")\n          .attr(\"stroke-width\", 0.5)\n          .style(\"cursor\", \"pointer\");\n\n        g.append(\"text\")\n          .attr(\"x\", 0)\n          .attr(\"y\", -outerRadius - 5)\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"font-size\", \"16px\")\n          .attr(\"fill\", \"red\")\n          .attr(\"font-weight\", \"bold\")\n          .text(ringLabels[index]);\n\n        g.append(\"text\")\n          .attr(\"transform\", (d) => {\n            const midAngle = (startAngle + endAngle) / 2;\n            const textRadius = (innerRadius + outerRadius) / 2;\n            const x = textRadius * Math.cos(Math.PI / 2 - midAngle);\n            const y = textRadius * Math.sin(Math.PI / 2 - midAngle);\n            let angleDeg = ((midAngle - Math.PI / 2) * 180) / Math.PI;\n            let rotation = (angleDeg > 90 && angleDeg < 270) ? 0 : 0;\n            return `translate(${x}, ${y}) rotate(${rotation})`;\n          })\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"alignment-baseline\", \"middle\")\n          .attr(\"font-size\", \"14px\")\n          .attr(\"fill\", \"black\")\n          .attr(\"font-weight\", \"normal\")\n          .text(\n            i\n              .toString(2)\n              .padStart(index + 1, \"0\")\n              .replace(/0/g, \"*\") \n              .replace(/1/g, \"0\") \n              .replace(/\\*/g, \"1\") \n          );\n      }\n      for (let i = 0; i < sectors; i++) {\n        const angle = (2 * Math.PI * i) / sectors;\n        const x1 = outerRadius * Math.cos(angle);\n        const y1 = outerRadius * Math.sin(angle);\n        const x2 = innerRadius * Math.cos(angle);\n        const y2 = innerRadius * Math.sin(angle);\n        g.append(\"line\")\n          .attr(\"x1\", x2)\n          .attr(\"y1\", y2)\n          .attr(\"x2\", x1)\n          .attr(\"y2\", y1)\n          .attr(\"stroke\", \"black\")\n          .attr(\"stroke-width\", 0.25)\n          .style(\"pointer-events\", \"none\");\n      }\n      pointsData[index].points.forEach((point, i) => {\n        const pointData = Object.entries(point).filter(\n          ([key]) => key !== \"Point_ID\"\n        );\n        const bitVector = pointData\n          .map(([key, coord]) => (coord >= 0 ? 1 : 0))\n          .join(\"\");\n\n        const minRadius = innerRadius;\n        const maxRadius = outerRadius;\n        const randomRadius =\n          minRadius + Math.random() * (maxRadius - minRadius);\n        const bitVectorIndex = parseInt(bitVector, 2);\n        const angleStart = (2 * Math.PI * bitVectorIndex) / sectors;\n        const angleEnd = (2 * Math.PI * (bitVectorIndex + 1)) / sectors;\n        const centerAngle = (angleStart + angleEnd) / 2;\n        const totalPoints = pointsData[index].points.length;\n        const clusterFactor = 0.86;\n        const overlapRadius =\n          innerRadius +\n          (clusterFactor * (outerRadius - innerRadius) * (i % totalPoints)) /\n          totalPoints;\n        const x = overlapRadius * Math.cos(centerAngle);\n        const y = overlapRadius * Math.sin(centerAngle);\n        point.Point_ID.forEach((id) => {\n          if (!pointPositions[id]) {\n            pointPositions[id] = [];\n          }\n          pointPositions[id].push({ x, y, point, subspaceId: key });\n        });\n\n        g.append(\"circle\")\n          .attr(\"cx\", x)\n          .attr(\"cy\", y)\n          .attr(\"r\", 3)\n          .attr(\"fill\", \"black\")\n          .attr(\"stroke\", \"white\")\n          .attr(\"stroke-width\", 0.5)\n          .style(\"pointer-events\", \"visible\")\n          .on(\"mouseover\", (event) => {\n            const pointIds = point.Point_ID.join(\", \");\n            let associatedLabels = [];\n            if (labelsData && labelsData.labels) {\n              Object.entries(labelsData.labels).forEach(([label, pointList]) => {\n                if (point.Point_ID.some(id => pointList.includes(Number(id)))) {\n                  associatedLabels.push(label);\n                }\n              });\n            }\n            const labelText = associatedLabels.length > 0 ? associatedLabels.join(\", \") : \"No Label\";\n\n            tooltip\n              .style(\"visibility\", \"visible\")\n              .html(\n                `Point_IDs: ${pointIds}<br>Coordinates: (${x.toFixed(2)}, ${y.toFixed(2)})<br>Subspace: ${key}<br>Label: ${labelText}`\n              );\n            setHoveredCoordinates({ ...point, label: labelText });\n          })\n          .on(\"mousemove\", (event) => {\n            tooltip\n              .style(\"top\", event.pageY + 10 + \"px\")\n              .style(\"left\", event.pageX + 10 + \"px\");\n          })\n          .on(\"mouseout\", () => {\n            tooltip.style(\"visibility\", \"hidden\");\n            setHoveredCoordinates(null);\n          });\n      });\n    });\n\n    Object.entries(pointPositions).forEach(([pointId, positions]) => {\n      if (positions.length > 1) {\n        for (let i = 0; i < positions.length - 1; i++) {\n          const line = g.append(\"line\")\n            .attr(\"x1\", positions[i].x)\n            .attr(\"y1\", positions[i].y)\n            .attr(\"x2\", positions[i + 1].x)\n            .attr(\"y2\", positions[i + 1].y)\n            .attr(\"stroke\", getLabelColor(pointId))\n            .attr(\"stroke-width\", 1.5)\n            .attr(\"stroke-opacity\", 0.9) \n            .style(\"cursor\", \"pointer\")\n            .on(\"mouseover\", (event) => {\n              tooltip\n                .style(\"visibility\", \"visible\")\n                .html(`Connection: Point_ID ${pointId}`);\n            })\n            .on(\"mousemove\", (event) => {\n              tooltip\n                .style(\"top\", event.pageY + 10 + \"px\")\n                .style(\"left\", event.pageX + 10 + \"px\");\n            })\n            .on(\"mouseout\", () => {\n              tooltip.style(\"visibility\", \"hidden\");\n            })\n            .on(\"click\", (event) => {\n              const originalColor = getLabelColor(pointId);\n              line.attr(\"stroke-width\", 2).attr(\"stroke\", \"yellow\");\n              const circles = g.selectAll(\"circle\")\n                .filter(d => {\n                  const circleX = parseFloat(this.getAttribute(\"cx\"));\n                  const circleY = parseFloat(this.getAttribute(\"cy\"));\n                  return (\n                    (Math.abs(circleX - positions[i].x) < 0.1 && Math.abs(circleY - positions[i].y) < 0.1) ||\n                    (Math.abs(circleX - positions[i + 1].x) < 0.1 && Math.abs(circleY - positions[i + 1].y) < 0.1)\n                  )\n                })\n                .attr(\"r\", 6)\n                .attr(\"fill\", \"yellow\");\n              highlightedElements = { line, circles, originalColor };\n              const point1 = positions[i].point;\n              const point2 = positions[i + 1].point;\n              const coords1 = Object.entries(point1)\n                .filter(([key]) => key !== \"Point_ID\")\n                .map(([key, value]) => `${key}: ${value}`)\n                .join(\", \");\n              const coords2 = Object.entries(point2)\n                .filter(([key]) => key !== \"Point_ID\")\n                .map(([key, value]) => `${key}: ${value}`)\n                .join(\", \");\n              const label1 = Object.entries(labelsData?.labels || {})\n                .find(([_, ids]) => ids.includes(Number(pointId)))?.[0] || \"No Label\";\n            });\n        }\n      }\n    });\n    const zoom = d3.zoom().on(\"zoom\", (event) => {\n      g.attr(\"transform\", event.transform);\n    });\n    svg.call(zoom);\n    return () => {\n      tooltip.remove();\n      svg.select(\".zoom-view\").remove();\n    };\n  }, [jsonData, labelsData, ringVisibility, setHoveredCoordinates]);\n\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <svg ref={graphRef} style={{ width: \"100%\", height: \"800px\" }}></svg>\n    </div>\n  );\n};\n\nexport default HierarchicalGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}