{"ast":null,"code":"var _jsxFileName = \"/home/divyansh/misc/GRAPH/code/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport JsonDisplay from \"./JsonDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [jsonFilename, setJsonFilename] = useState(null);\n  const [error, setError] = useState(null);\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) {\n      setError(\"No file selected\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(\"File upload failed\");\n      }\n      const result = await response.json();\n      setJsonFilename(result.json_filename); // Pass JSON filename to JsonDisplay\n      console.log(result.json_filename);\n      console.log(\"Uploaded and processed:\", result.json_filename);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error:\", err);\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-6 text-blue-800\",\n      children: \"File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        onChange: handleFileUpload,\n        className: \"mb-4 border p-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), jsonFilename && /*#__PURE__*/_jsxDEV(JsonDisplay, {\n      jsonFilename: jsonFilename\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mhkVhZFPBfbQVh4vbDTIEZFJU2M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","JsonDisplay","jsxDEV","_jsxDEV","App","_s","jsonFilename","setJsonFilename","error","setError","handleFileUpload","event","file","target","files","formData","FormData","append","response","fetch","method","body","ok","Error","result","json","json_filename","console","log","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","_c","$RefreshReg$"],"sources":["/home/divyansh/misc/GRAPH/code/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport JsonDisplay from \"./JsonDisplay\";\n\nconst App = () => {\n  const [jsonFilename, setJsonFilename] = useState(null);\n  const [error, setError] = useState(null);\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    if (!file) {\n      setError(\"No file selected\");\n      return;\n    }\n    \n    const formData = new FormData();\n    formData.append(\"file\", file);\n    \n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n      \n      if (!response.ok) {\n        throw new Error(\"File upload failed\");\n      }\n      \n      const result = await response.json();\n      setJsonFilename(result.json_filename); // Pass JSON filename to JsonDisplay\n      console.log(result.json_filename);\n      console.log(\"Uploaded and processed:\", result.json_filename);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error:\", err);\n      setError(err.message);\n    }\n  };\n  \n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-6\">\n      <h1 className=\"text-4xl font-bold mb-6 text-blue-800\">File Upload</h1>\n      <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n        <input\n          type=\"file\"\n          accept=\".csv\"\n          onChange={handleFileUpload}\n          className=\"mb-4 border p-2 rounded\"\n        />\n        {error && <p className=\"text-red-500\">{error}</p>}\n      </div>\n      {jsonFilename && <JsonDisplay jsonFilename={jsonFilename} />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMU,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;MACTH,QAAQ,CAAC,kBAAkB,CAAC;MAC5B;IACF;IAEA,MAAMM,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MACvC;MAEA,MAAMC,MAAM,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MACpClB,eAAe,CAACiB,MAAM,CAACE,aAAa,CAAC,CAAC,CAAC;MACvCC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAACE,aAAa,CAAC;MACjCC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEJ,MAAM,CAACE,aAAa,CAAC;MAC5DjB,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOoB,GAAG,EAAE;MACZF,OAAO,CAACnB,KAAK,CAAC,QAAQ,EAAEqB,GAAG,CAAC;MAC5BpB,QAAQ,CAACoB,GAAG,CAACC,OAAO,CAAC;IACvB;EACF,CAAC;EAGD,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,wEAAwE;IAAAC,QAAA,gBACrF7B,OAAA;MAAI4B,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtEjC,OAAA;MAAK4B,SAAS,EAAC,mCAAmC;MAAAC,QAAA,gBAChD7B,OAAA;QACEkC,IAAI,EAAC,MAAM;QACXC,MAAM,EAAC,MAAM;QACbC,QAAQ,EAAE7B,gBAAiB;QAC3BqB,SAAS,EAAC;MAAyB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,EACD5B,KAAK,iBAAIL,OAAA;QAAG4B,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAExB;MAAK;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,EACL9B,YAAY,iBAAIH,OAAA,CAACF,WAAW;MAACK,YAAY,EAAEA;IAAa;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAlDID,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAoDT,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}