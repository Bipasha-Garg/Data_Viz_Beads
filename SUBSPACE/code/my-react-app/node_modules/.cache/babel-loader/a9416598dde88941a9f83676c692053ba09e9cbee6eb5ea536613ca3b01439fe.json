{"ast":null,"code":"var _jsxFileName = \"/home/bipasha/Desktop/research/Data_Viz_Beads/Subspace/code/my-react-app/src/JsonDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HierarchicalGraph = ({\n  jsonData,\n  labelsData,\n  setHoveredCoordinates,\n  ringVisibility\n}) => {\n  _s();\n  const graphRef = useRef(null);\n  useEffect(() => {\n    if (!jsonData || typeof jsonData !== \"object\" || Object.keys(jsonData).length === 0) {\n      console.error(\"Invalid or empty jsonData:\", jsonData);\n      return;\n    }\n    if (!labelsData || typeof labelsData !== \"object\") {\n      console.error(\"Invalid labelsData:\", labelsData);\n      return;\n    }\n    const svg = d3.select(graphRef.current);\n    svg.selectAll(\"*\").remove();\n    const width = 800;\n    const height = 800;\n    const margin = 20;\n    const maxRadius = Math.min(width, height) / 2 - margin;\n    const g = svg.attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"position\", \"absolute\").style(\"visibility\", \"hidden\").style(\"background-color\", \"rgba(0, 0, 0, 0.7)\").style(\"color\", \"white\").style(\"padding\", \"5px\").style(\"border-radius\", \"4px\").style(\"font-size\", \"12px\");\n    const edgePopup = d3.select(\"body\").append(\"div\").attr(\"class\", \"edge-popup\").style(\"position\", \"absolute\").style(\"visibility\", \"hidden\").style(\"background-color\", \"rgba(255, 255, 255, 0.9)\").style(\"color\", \"black\").style(\"padding\", \"10px\").style(\"border-radius\", \"4px\").style(\"font-size\", \"12px\").style(\"box-shadow\", \"0 2px 4px rgba(0,0,0,0.2)\").style(\"max-width\", \"300px\");\n    const getLabelColor = pointId => {\n      if (!labelsData || !labelsData.labels) return \"gray\";\n      for (const label of Object.keys(labelsData.labels)) {\n        const pointList = labelsData.labels[label];\n        if (Array.isArray(pointList) && pointList.includes(Number(pointId))) {\n          return colorScale(label);\n        }\n      }\n      return \"gray\";\n    };\n    const colorScale = d3.scaleOrdinal(d3.schemeCategory10).domain(Object.keys(labelsData.labels || {}));\n    const getSectorColor = (index, sectorIndex) => {\n      return d3.hsl(sectorIndex % 2 === 0 ? 0 : 220, 0.9, 0.6);\n    };\n    const subspaces = Object.keys(jsonData);\n    subspaces.sort((a, b) => a.length - b.length);\n    const pointsData = subspaces.map(key => ({\n      key,\n      points: jsonData[key],\n      dimensions: key.length,\n      subspaceId: key\n    }));\n    const pointPositions = {};\n    let highlightedElements = null;\n\n    // Function to clear highlights\n    const clearHighlights = () => {\n      if (highlightedElements) {\n        highlightedElements.line.attr(\"stroke-width\", 0.3).attr(\"stroke\", highlightedElements.originalColor);\n        highlightedElements.circles.forEach(circle => circle.attr(\"r\", 3).attr(\"fill\", \"black\"));\n        highlightedElements = null;\n      }\n    };\n\n    // Function to show zoomed sector view\n    const showZoomedSector = (subspaceKey, sectorIndex, innerRadius, outerRadius, startAngle, endAngle) => {\n      // Clear existing zoom view\n      svg.select(\".zoom-view\").remove();\n      const zoomGroup = svg.append(\"g\").attr(\"class\", \"zoom-view\").attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n      const sectorPoints = pointsData.find(d => d.key === subspaceKey).points.filter(point => {\n        const bitVector = Object.entries(point).filter(([k]) => k !== \"Point_ID\").map(([_, v]) => v >= 0 ? 1 : 0).join(\"\");\n        const bitIndex = parseInt(bitVector, 2);\n        const sectors = 2 ** (subspaces.indexOf(subspaceKey) + 1);\n        return bitIndex === sectorIndex;\n      });\n      const zoomWidth = width * 0.8;\n      const zoomHeight = height * 0.8;\n      const arcCount = sectorPoints.length;\n\n      // Draw zoomed sector background\n      zoomGroup.append(\"rect\").attr(\"x\", -zoomWidth / 2).attr(\"y\", -zoomHeight / 2).attr(\"width\", zoomWidth).attr(\"height\", zoomHeight).attr(\"fill\", \"white\").attr(\"stroke\", \"black\");\n\n      // Draw arcs and points\n      sectorPoints.forEach((point, i) => {\n        const value = Object.values(point).filter(v => typeof v === \"number\")[0];\n        const maxValue = Math.max(...sectorPoints.map(p => Math.abs(Object.values(p).filter(v => typeof v === \"number\")[0])));\n        const arcRadius = zoomHeight * 0.4 * (i + 1) / arcCount;\n        const arc = d3.arc().innerRadius(arcRadius - 5).outerRadius(arcRadius).startAngle(-Math.PI / 2).endAngle(Math.PI / 2);\n        zoomGroup.append(\"path\").attr(\"d\", arc).attr(\"fill\", \"lightblue\").attr(\"opacity\", 0.5);\n        const angle = value / maxValue * Math.PI - Math.PI / 2;\n        const x = arcRadius * Math.cos(angle);\n        const y = arcRadius * Math.sin(angle);\n        zoomGroup.append(\"circle\").attr(\"cx\", x).attr(\"cy\", y).attr(\"r\", 4).attr(\"fill\", getLabelColor(point.Point_ID[0]));\n      });\n\n      // Add close button\n      zoomGroup.append(\"text\").attr(\"x\", zoomWidth / 2 - 20).attr(\"y\", -zoomHeight / 2 + 20).text(\"Ã—\").attr(\"font-size\", \"20px\").style(\"cursor\", \"pointer\").on(\"click\", () => zoomGroup.remove());\n    };\n    subspaces.forEach((key, index) => {\n      if (!ringVisibility[key]) return;\n      const innerRadius = index / subspaces.length * maxRadius;\n      const outerRadius = (index + 1) / subspaces.length * maxRadius;\n      const sectors = 2 ** (index + 1);\n      const rotationOffset = Math.PI / 2;\n      for (let i = 0; i < sectors; i++) {\n        const startAngle = 2 * Math.PI * i / sectors + rotationOffset;\n        const endAngle = 2 * Math.PI * (i + 1) / sectors + rotationOffset;\n        g.append(\"path\").attr(\"d\", d3.arc().innerRadius(innerRadius).outerRadius(outerRadius).startAngle(startAngle).endAngle(endAngle)).attr(\"fill\", getSectorColor(index, i)).attr(\"fill-opacity\", 0.3).attr(\"stroke\", \"black\").attr(\"stroke-width\", 0.5).style(\"cursor\", \"pointer\").on(\"click\", () => {\n          clearHighlights();\n          showZoomedSector(key, i, innerRadius, outerRadius, startAngle, endAngle);\n        });\n        g.append(\"text\").attr(\"x\", 0).attr(\"y\", -outerRadius - 5).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"12px\").attr(\"font-weight\", \"bold\").text(key);\n      }\n      for (let i = 0; i < sectors; i++) {\n        const angle = 2 * Math.PI * i / sectors;\n        const x1 = outerRadius * Math.cos(angle);\n        const y1 = outerRadius * Math.sin(angle);\n        const x2 = innerRadius * Math.cos(angle);\n        const y2 = innerRadius * Math.sin(angle);\n        g.append(\"line\").attr(\"x1\", x2).attr(\"y1\", y2).attr(\"x2\", x1).attr(\"y2\", y1).attr(\"stroke\", \"black\").attr(\"stroke-width\", 0.25).style(\"pointer-events\", \"none\");\n      }\n      pointsData[index].points.forEach((point, i) => {\n        const pointData = Object.entries(point).filter(([key]) => key !== \"Point_ID\");\n        const bitVector = pointData.map(([key, coord]) => coord >= 0 ? 1 : 0).join(\"\");\n        const minRadius = innerRadius;\n        const maxRadius = outerRadius;\n        const randomRadius = minRadius + Math.random() * (maxRadius - minRadius);\n        const bitVectorIndex = parseInt(bitVector, 2);\n        const angleStart = 2 * Math.PI * bitVectorIndex / sectors;\n        const angleEnd = 2 * Math.PI * (bitVectorIndex + 1) / sectors;\n        const centerAngle = (angleStart + angleEnd) / 2;\n        const totalPoints = pointsData[index].points.length;\n        const clusterFactor = 0.86;\n        const overlapRadius = innerRadius + clusterFactor * (outerRadius - innerRadius) * (i % totalPoints) / totalPoints;\n        const x = overlapRadius * Math.cos(centerAngle);\n        const y = overlapRadius * Math.sin(centerAngle);\n        point.Point_ID.forEach(id => {\n          if (!pointPositions[id]) {\n            pointPositions[id] = [];\n          }\n          pointPositions[id].push({\n            x,\n            y,\n            point,\n            subspaceId: key\n          });\n        });\n        g.append(\"circle\").attr(\"cx\", x).attr(\"cy\", y).attr(\"r\", 3).attr(\"fill\", \"black\").attr(\"stroke\", \"white\").attr(\"stroke-width\", 0.5).style(\"pointer-events\", \"visible\").on(\"mouseover\", event => {\n          const pointIds = point.Point_ID.join(\", \");\n          let associatedLabels = [];\n          if (labelsData && labelsData.labels) {\n            Object.entries(labelsData.labels).forEach(([label, pointList]) => {\n              if (point.Point_ID.some(id => pointList.includes(Number(id)))) {\n                associatedLabels.push(label);\n              }\n            });\n          }\n          const labelText = associatedLabels.length > 0 ? associatedLabels.join(\", \") : \"No Label\";\n          tooltip.style(\"visibility\", \"visible\").html(`Point_IDs: ${pointIds}<br>Coordinates: (${x.toFixed(2)}, ${y.toFixed(2)})<br>Subspace: ${key}<br>Label: ${labelText}`);\n          setHoveredCoordinates({\n            ...point,\n            label: labelText\n          });\n        }).on(\"mousemove\", event => {\n          tooltip.style(\"top\", event.pageY + 10 + \"px\").style(\"left\", event.pageX + 10 + \"px\");\n        }).on(\"mouseout\", () => {\n          tooltip.style(\"visibility\", \"hidden\");\n          setHoveredCoordinates(null);\n        });\n      });\n    });\n    Object.entries(pointPositions).forEach(([pointId, positions]) => {\n      if (positions.length > 1) {\n        for (let i = 0; i < positions.length - 1; i++) {\n          const line = g.append(\"line\").attr(\"x1\", positions[i].x).attr(\"y1\", positions[i].y).attr(\"x2\", positions[i + 1].x).attr(\"y2\", positions[i + 1].y).attr(\"stroke\", getLabelColor(pointId)).attr(\"stroke-width\", 0.3).style(\"cursor\", \"pointer\").on(\"mouseover\", event => {\n            tooltip.style(\"visibility\", \"visible\").html(`Connection: Point_ID ${pointId}`);\n          }).on(\"mousemove\", event => {\n            tooltip.style(\"top\", event.pageY + 10 + \"px\").style(\"left\", event.pageX + 10 + \"px\");\n          }).on(\"mouseout\", () => {\n            tooltip.style(\"visibility\", \"hidden\");\n          }).on(\"click\", event => {\n            var _Object$entries$find;\n            // Clear previous highlights\n            clearHighlights();\n\n            // Highlight the clicked edge\n            const originalColor = getLabelColor(pointId);\n            line.attr(\"stroke-width\", 2).attr(\"stroke\", \"yellow\");\n\n            // Highlight connected points\n            const circles = g.selectAll(\"circle\").filter(d => {\n              const circleX = parseFloat(this.getAttribute(\"cx\"));\n              const circleY = parseFloat(this.getAttribute(\"cy\"));\n              return Math.abs(circleX - positions[i].x) < 0.1 && Math.abs(circleY - positions[i].y) < 0.1 || Math.abs(circleX - positions[i + 1].x) < 0.1 && Math.abs(circleY - positions[i + 1].y) < 0.1;\n            }).attr(\"r\", 6).attr(\"fill\", \"yellow\");\n            highlightedElements = {\n              line,\n              circles,\n              originalColor\n            };\n\n            // Show popup\n            const point1 = positions[i].point;\n            const point2 = positions[i + 1].point;\n            const coords1 = Object.entries(point1).filter(([key]) => key !== \"Point_ID\").map(([key, value]) => `${key}: ${value}`).join(\", \");\n            const coords2 = Object.entries(point2).filter(([key]) => key !== \"Point_ID\").map(([key, value]) => `${key}: ${value}`).join(\", \");\n            const label1 = ((_Object$entries$find = Object.entries((labelsData === null || labelsData === void 0 ? void 0 : labelsData.labels) || {}).find(([_, ids]) => ids.includes(Number(pointId)))) === null || _Object$entries$find === void 0 ? void 0 : _Object$entries$find[0]) || \"No Label\";\n            edgePopup.style(\"visibility\", \"visible\").html(`\n                  <strong>Connected Points (ID: ${pointId})</strong><br><br>\n                  <strong>Point 1</strong><br>\n                  Subspace: ${positions[i].subspaceId}<br>\n                  Coordinates: ${coords1}<br>\n                  Label: ${label1}<br><br>\n                  <strong>Point 2</strong><br>\n                  Subspace: ${positions[i + 1].subspaceId}<br>\n                  Coordinates: ${coords2}<br>\n                  Label: ${label1}\n                `).style(\"top\", event.pageY + 15 + \"px\").style(\"left\", event.pageX + 15 + \"px\");\n            d3.select(\"body\").on(\"click.edgePopup\", e => {\n              if (!edgePopup.node().contains(e.target)) {\n                edgePopup.style(\"visibility\", \"hidden\");\n                clearHighlights();\n                d3.select(\"body\").on(\"click.edgePopup\", null);\n              }\n            });\n          });\n        }\n      }\n    });\n    const zoom = d3.zoom().on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n    });\n    svg.call(zoom);\n    const legendData = [{\n      color: d3.hsl(11, 0.9, 0.7),\n      label: \"Negative Bit Sector\"\n    }, {\n      color: d3.hsl(220, 0.9, 0.7),\n      label: \"Positive Bit Sector\"\n    }];\n    const legend = svg.append(\"g\").attr(\"transform\", `translate(${width - 200}, ${height - 70})`);\n    legend.selectAll(\"rect\").data(legendData).enter().append(\"rect\").attr(\"x\", 0).attr(\"y\", (d, i) => i * 30).attr(\"width\", 20).attr(\"height\", 20).attr(\"fill\", d => d.color);\n    legend.selectAll(\"text\").data(legendData).enter().append(\"text\").attr(\"x\", 25).attr(\"y\", (d, i) => i * 30 + 15).text(d => d.label).attr(\"font-size\", \"12px\").attr(\"alignment-baseline\", \"middle\");\n    return () => {\n      tooltip.remove();\n      edgePopup.remove();\n      svg.select(\".zoom-view\").remove();\n    };\n  }, [jsonData, labelsData, ringVisibility, setHoveredCoordinates]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: graphRef,\n      style: {\n        width: \"100%\",\n        height: \"800px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 437,\n    columnNumber: 5\n  }, this);\n};\n_s(HierarchicalGraph, \"XNG/roOlNWxTF7ymftfdirhS32A=\");\n_c = HierarchicalGraph;\nexport default HierarchicalGraph;\nvar _c;\n$RefreshReg$(_c, \"HierarchicalGraph\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","HierarchicalGraph","jsonData","labelsData","setHoveredCoordinates","ringVisibility","_s","graphRef","Object","keys","length","console","error","svg","select","current","selectAll","remove","width","height","margin","maxRadius","Math","min","g","attr","append","tooltip","style","edgePopup","getLabelColor","pointId","labels","label","pointList","Array","isArray","includes","Number","colorScale","scaleOrdinal","schemeCategory10","domain","getSectorColor","index","sectorIndex","hsl","subspaces","sort","a","b","pointsData","map","key","points","dimensions","subspaceId","pointPositions","highlightedElements","clearHighlights","line","originalColor","circles","forEach","circle","showZoomedSector","subspaceKey","innerRadius","outerRadius","startAngle","endAngle","zoomGroup","sectorPoints","find","d","filter","point","bitVector","entries","k","_","v","join","bitIndex","parseInt","sectors","indexOf","zoomWidth","zoomHeight","arcCount","i","value","values","maxValue","max","p","abs","arcRadius","arc","PI","angle","x","cos","y","sin","Point_ID","text","on","rotationOffset","x1","y1","x2","y2","pointData","coord","minRadius","randomRadius","random","bitVectorIndex","angleStart","angleEnd","centerAngle","totalPoints","clusterFactor","overlapRadius","id","push","event","pointIds","associatedLabels","some","labelText","html","toFixed","pageY","pageX","positions","_Object$entries$find","circleX","parseFloat","getAttribute","circleY","point1","point2","coords1","coords2","label1","ids","e","node","contains","target","zoom","transform","call","legendData","color","legend","data","enter","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bipasha/Desktop/research/Data_Viz_Beads/Subspace/code/my-react-app/src/JsonDisplay.js"],"sourcesContent":["\nimport React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\n\nconst HierarchicalGraph = ({ jsonData, labelsData, setHoveredCoordinates, ringVisibility }) => {\n  const graphRef = useRef(null);\n\n  useEffect(() => {\n    if (\n      !jsonData ||\n      typeof jsonData !== \"object\" ||\n      Object.keys(jsonData).length === 0\n    ) {\n      console.error(\"Invalid or empty jsonData:\", jsonData);\n      return;\n    }\n\n    if (!labelsData || typeof labelsData !== \"object\") {\n      console.error(\"Invalid labelsData:\", labelsData);\n      return;\n    }\n\n    const svg = d3.select(graphRef.current);\n    svg.selectAll(\"*\").remove();\n\n    const width = 800;\n    const height = 800;\n    const margin = 20;\n    const maxRadius = Math.min(width, height) / 2 - margin;\n\n    const g = svg\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n\n    const tooltip = d3\n      .select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"position\", \"absolute\")\n      .style(\"visibility\", \"hidden\")\n      .style(\"background-color\", \"rgba(0, 0, 0, 0.7)\")\n      .style(\"color\", \"white\")\n      .style(\"padding\", \"5px\")\n      .style(\"border-radius\", \"4px\")\n      .style(\"font-size\", \"12px\");\n\n    const edgePopup = d3\n      .select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"edge-popup\")\n      .style(\"position\", \"absolute\")\n      .style(\"visibility\", \"hidden\")\n      .style(\"background-color\", \"rgba(255, 255, 255, 0.9)\")\n      .style(\"color\", \"black\")\n      .style(\"padding\", \"10px\")\n      .style(\"border-radius\", \"4px\")\n      .style(\"font-size\", \"12px\")\n      .style(\"box-shadow\", \"0 2px 4px rgba(0,0,0,0.2)\")\n      .style(\"max-width\", \"300px\");\n\n    const getLabelColor = (pointId) => {\n      if (!labelsData || !labelsData.labels) return \"gray\";\n      for (const label of Object.keys(labelsData.labels)) {\n        const pointList = labelsData.labels[label];\n        if (Array.isArray(pointList) && pointList.includes(Number(pointId))) {\n          return colorScale(label);\n        }\n      }\n      return \"gray\";\n    };\n\n    const colorScale = d3\n      .scaleOrdinal(d3.schemeCategory10)\n      .domain(Object.keys(labelsData.labels || {}));\n\n    const getSectorColor = (index, sectorIndex) => {\n      return d3.hsl(sectorIndex % 2 === 0 ? 0 : 220, 0.9, 0.6);\n    };\n\n    const subspaces = Object.keys(jsonData);\n    subspaces.sort((a, b) => a.length - b.length);\n\n    const pointsData = subspaces.map((key) => ({\n      key,\n      points: jsonData[key],\n      dimensions: key.length,\n      subspaceId: key,\n    }));\n\n    const pointPositions = {};\n    let highlightedElements = null;\n\n    // Function to clear highlights\n    const clearHighlights = () => {\n      if (highlightedElements) {\n        highlightedElements.line.attr(\"stroke-width\", 0.3).attr(\"stroke\", highlightedElements.originalColor);\n        highlightedElements.circles.forEach(circle =>\n          circle.attr(\"r\", 3).attr(\"fill\", \"black\")\n        );\n        highlightedElements = null;\n      }\n    };\n\n    // Function to show zoomed sector view\n    const showZoomedSector = (subspaceKey, sectorIndex, innerRadius, outerRadius, startAngle, endAngle) => {\n      // Clear existing zoom view\n      svg.select(\".zoom-view\").remove();\n\n      const zoomGroup = svg.append(\"g\")\n        .attr(\"class\", \"zoom-view\")\n        .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n\n      const sectorPoints = pointsData.find(d => d.key === subspaceKey).points\n        .filter(point => {\n          const bitVector = Object.entries(point)\n            .filter(([k]) => k !== \"Point_ID\")\n            .map(([_, v]) => v >= 0 ? 1 : 0)\n            .join(\"\");\n          const bitIndex = parseInt(bitVector, 2);\n          const sectors = 2 ** (subspaces.indexOf(subspaceKey) + 1);\n          return bitIndex === sectorIndex;\n        });\n\n      const zoomWidth = width * 0.8;\n      const zoomHeight = height * 0.8;\n      const arcCount = sectorPoints.length;\n\n      // Draw zoomed sector background\n      zoomGroup.append(\"rect\")\n        .attr(\"x\", -zoomWidth / 2)\n        .attr(\"y\", -zoomHeight / 2)\n        .attr(\"width\", zoomWidth)\n        .attr(\"height\", zoomHeight)\n        .attr(\"fill\", \"white\")\n        .attr(\"stroke\", \"black\");\n\n      // Draw arcs and points\n      sectorPoints.forEach((point, i) => {\n        const value = Object.values(point).filter(v => typeof v === \"number\")[0];\n        const maxValue = Math.max(...sectorPoints.map(p =>\n          Math.abs(Object.values(p).filter(v => typeof v === \"number\")[0])));\n\n        const arcRadius = (zoomHeight * 0.4 * (i + 1)) / arcCount;\n        const arc = d3.arc()\n          .innerRadius(arcRadius - 5)\n          .outerRadius(arcRadius)\n          .startAngle(-Math.PI / 2)\n          .endAngle(Math.PI / 2);\n\n        zoomGroup.append(\"path\")\n          .attr(\"d\", arc)\n          .attr(\"fill\", \"lightblue\")\n          .attr(\"opacity\", 0.5);\n\n        const angle = (value / maxValue) * Math.PI - Math.PI / 2;\n        const x = arcRadius * Math.cos(angle);\n        const y = arcRadius * Math.sin(angle);\n\n        zoomGroup.append(\"circle\")\n          .attr(\"cx\", x)\n          .attr(\"cy\", y)\n          .attr(\"r\", 4)\n          .attr(\"fill\", getLabelColor(point.Point_ID[0]));\n      });\n\n      // Add close button\n      zoomGroup.append(\"text\")\n        .attr(\"x\", zoomWidth / 2 - 20)\n        .attr(\"y\", -zoomHeight / 2 + 20)\n        .text(\"Ã—\")\n        .attr(\"font-size\", \"20px\")\n        .style(\"cursor\", \"pointer\")\n        .on(\"click\", () => zoomGroup.remove());\n    };\n\n    subspaces.forEach((key, index) => {\n      if (!ringVisibility[key]) return;\n\n      const innerRadius = (index / subspaces.length) * maxRadius;\n      const outerRadius = ((index + 1) / subspaces.length) * maxRadius;\n      const sectors = 2 ** (index + 1);\n      const rotationOffset = Math.PI / 2;\n\n      for (let i = 0; i < sectors; i++) {\n        const startAngle = (2 * Math.PI * i) / sectors + rotationOffset;\n        const endAngle = (2 * Math.PI * (i + 1)) / sectors + rotationOffset;\n\n        g.append(\"path\")\n          .attr(\"d\", d3.arc()\n            .innerRadius(innerRadius)\n            .outerRadius(outerRadius)\n            .startAngle(startAngle)\n            .endAngle(endAngle)\n          )\n          .attr(\"fill\", getSectorColor(index, i))\n          .attr(\"fill-opacity\", 0.3)\n          .attr(\"stroke\", \"black\")\n          .attr(\"stroke-width\", 0.5)\n          .style(\"cursor\", \"pointer\")\n          .on(\"click\", () => {\n            clearHighlights();\n            showZoomedSector(key, i, innerRadius, outerRadius, startAngle, endAngle);\n          });\n\n        g.append(\"text\")\n          .attr(\"x\", 0)\n          .attr(\"y\", -outerRadius - 5)\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"font-size\", \"12px\")\n          .attr(\"font-weight\", \"bold\")\n          .text(key);\n      }\n\n      for (let i = 0; i < sectors; i++) {\n        const angle = (2 * Math.PI * i) / sectors;\n        const x1 = outerRadius * Math.cos(angle);\n        const y1 = outerRadius * Math.sin(angle);\n        const x2 = innerRadius * Math.cos(angle);\n        const y2 = innerRadius * Math.sin(angle);\n        g.append(\"line\")\n          .attr(\"x1\", x2)\n          .attr(\"y1\", y2)\n          .attr(\"x2\", x1)\n          .attr(\"y2\", y1)\n          .attr(\"stroke\", \"black\")\n          .attr(\"stroke-width\", 0.25)\n          .style(\"pointer-events\", \"none\");\n      }\n\n      pointsData[index].points.forEach((point, i) => {\n        const pointData = Object.entries(point).filter(\n          ([key]) => key !== \"Point_ID\"\n        );\n        const bitVector = pointData\n          .map(([key, coord]) => (coord >= 0 ? 1 : 0))\n          .join(\"\");\n\n        const minRadius = innerRadius;\n        const maxRadius = outerRadius;\n        const randomRadius =\n          minRadius + Math.random() * (maxRadius - minRadius);\n\n        const bitVectorIndex = parseInt(bitVector, 2);\n        const angleStart = (2 * Math.PI * bitVectorIndex) / sectors;\n        const angleEnd = (2 * Math.PI * (bitVectorIndex + 1)) / sectors;\n        const centerAngle = (angleStart + angleEnd) / 2;\n\n        const totalPoints = pointsData[index].points.length;\n        const clusterFactor = 0.86;\n        const overlapRadius =\n          innerRadius +\n          (clusterFactor * (outerRadius - innerRadius) * (i % totalPoints)) /\n          totalPoints;\n\n        const x = overlapRadius * Math.cos(centerAngle);\n        const y = overlapRadius * Math.sin(centerAngle);\n        point.Point_ID.forEach((id) => {\n          if (!pointPositions[id]) {\n            pointPositions[id] = [];\n          }\n          pointPositions[id].push({ x, y, point, subspaceId: key });\n        });\n\n        g.append(\"circle\")\n          .attr(\"cx\", x)\n          .attr(\"cy\", y)\n          .attr(\"r\", 3)\n          .attr(\"fill\", \"black\")\n          .attr(\"stroke\", \"white\")\n          .attr(\"stroke-width\", 0.5)\n          .style(\"pointer-events\", \"visible\")\n          .on(\"mouseover\", (event) => {\n            const pointIds = point.Point_ID.join(\", \");\n            let associatedLabels = [];\n            if (labelsData && labelsData.labels) {\n              Object.entries(labelsData.labels).forEach(([label, pointList]) => {\n                if (point.Point_ID.some(id => pointList.includes(Number(id)))) {\n                  associatedLabels.push(label);\n                }\n              });\n            }\n            const labelText = associatedLabels.length > 0 ? associatedLabels.join(\", \") : \"No Label\";\n\n            tooltip\n              .style(\"visibility\", \"visible\")\n              .html(\n                `Point_IDs: ${pointIds}<br>Coordinates: (${x.toFixed(2)}, ${y.toFixed(2)})<br>Subspace: ${key}<br>Label: ${labelText}`\n              );\n            setHoveredCoordinates({ ...point, label: labelText });\n          })\n          .on(\"mousemove\", (event) => {\n            tooltip\n              .style(\"top\", event.pageY + 10 + \"px\")\n              .style(\"left\", event.pageX + 10 + \"px\");\n          })\n          .on(\"mouseout\", () => {\n            tooltip.style(\"visibility\", \"hidden\");\n            setHoveredCoordinates(null);\n          });\n      });\n    });\n\n    Object.entries(pointPositions).forEach(([pointId, positions]) => {\n      if (positions.length > 1) {\n        for (let i = 0; i < positions.length - 1; i++) {\n          const line = g.append(\"line\")\n            .attr(\"x1\", positions[i].x)\n            .attr(\"y1\", positions[i].y)\n            .attr(\"x2\", positions[i + 1].x)\n            .attr(\"y2\", positions[i + 1].y)\n            .attr(\"stroke\", getLabelColor(pointId))\n            .attr(\"stroke-width\", 0.3)\n            .style(\"cursor\", \"pointer\")\n            .on(\"mouseover\", (event) => {\n              tooltip\n                .style(\"visibility\", \"visible\")\n                .html(`Connection: Point_ID ${pointId}`);\n            })\n            .on(\"mousemove\", (event) => {\n              tooltip\n                .style(\"top\", event.pageY + 10 + \"px\")\n                .style(\"left\", event.pageX + 10 + \"px\");\n            })\n            .on(\"mouseout\", () => {\n              tooltip.style(\"visibility\", \"hidden\");\n            })\n            .on(\"click\", (event) => {\n              // Clear previous highlights\n              clearHighlights();\n\n              // Highlight the clicked edge\n              const originalColor = getLabelColor(pointId);\n              line.attr(\"stroke-width\", 2).attr(\"stroke\", \"yellow\");\n\n              // Highlight connected points\n              const circles = g.selectAll(\"circle\")\n                .filter(d => {\n                  const circleX = parseFloat(this.getAttribute(\"cx\"));\n                  const circleY = parseFloat(this.getAttribute(\"cy\"));\n                  return (\n                    (Math.abs(circleX - positions[i].x) < 0.1 && Math.abs(circleY - positions[i].y) < 0.1) ||\n                    (Math.abs(circleX - positions[i + 1].x) < 0.1 && Math.abs(circleY - positions[i + 1].y) < 0.1)\n                )})\n                .attr(\"r\", 6)\n                .attr(\"fill\", \"yellow\");\n\n              highlightedElements = { line, circles, originalColor };\n\n              // Show popup\n              const point1 = positions[i].point;\n              const point2 = positions[i + 1].point;\n\n              const coords1 = Object.entries(point1)\n                .filter(([key]) => key !== \"Point_ID\")\n                .map(([key, value]) => `${key}: ${value}`)\n                .join(\", \");\n              const coords2 = Object.entries(point2)\n                .filter(([key]) => key !== \"Point_ID\")\n                .map(([key, value]) => `${key}: ${value}`)\n                .join(\", \");\n\n              const label1 = Object.entries(labelsData?.labels || {})\n                .find(([_, ids]) => ids.includes(Number(pointId)))?.[0] || \"No Label\";\n\n              edgePopup\n                .style(\"visibility\", \"visible\")\n                .html(`\n                  <strong>Connected Points (ID: ${pointId})</strong><br><br>\n                  <strong>Point 1</strong><br>\n                  Subspace: ${positions[i].subspaceId}<br>\n                  Coordinates: ${coords1}<br>\n                  Label: ${label1}<br><br>\n                  <strong>Point 2</strong><br>\n                  Subspace: ${positions[i + 1].subspaceId}<br>\n                  Coordinates: ${coords2}<br>\n                  Label: ${label1}\n                `)\n                .style(\"top\", event.pageY + 15 + \"px\")\n                .style(\"left\", event.pageX + 15 + \"px\");\n\n              d3.select(\"body\").on(\"click.edgePopup\", (e) => {\n                if (!edgePopup.node().contains(e.target)) {\n                  edgePopup.style(\"visibility\", \"hidden\");\n                  clearHighlights();\n                  d3.select(\"body\").on(\"click.edgePopup\", null);\n                }\n              });\n            });\n        }\n      }\n    });\n\n    const zoom = d3.zoom().on(\"zoom\", (event) => {\n      g.attr(\"transform\", event.transform);\n    });\n\n    svg.call(zoom);\n\n    const legendData = [\n      { color: d3.hsl(11, 0.9, 0.7), label: \"Negative Bit Sector\" },\n      { color: d3.hsl(220, 0.9, 0.7), label: \"Positive Bit Sector\" }\n    ];\n\n    const legend = svg.append(\"g\")\n      .attr(\"transform\", `translate(${width - 200}, ${height - 70})`);\n\n    legend.selectAll(\"rect\")\n      .data(legendData)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", 0)\n      .attr(\"y\", (d, i) => i * 30)\n      .attr(\"width\", 20)\n      .attr(\"height\", 20)\n      .attr(\"fill\", d => d.color);\n\n    legend.selectAll(\"text\")\n      .data(legendData)\n      .enter()\n      .append(\"text\")\n      .attr(\"x\", 25)\n      .attr(\"y\", (d, i) => i * 30 + 15)\n      .text(d => d.label)\n      .attr(\"font-size\", \"12px\")\n      .attr(\"alignment-baseline\", \"middle\");\n\n    return () => {\n      tooltip.remove();\n      edgePopup.remove();\n      svg.select(\".zoom-view\").remove();\n    };\n  }, [jsonData, labelsData, ringVisibility, setHoveredCoordinates]);\n\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <svg ref={graphRef} style={{ width: \"100%\", height: \"800px\" }}></svg>\n    </div>\n  );\n};\n\nexport default HierarchicalGraph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}