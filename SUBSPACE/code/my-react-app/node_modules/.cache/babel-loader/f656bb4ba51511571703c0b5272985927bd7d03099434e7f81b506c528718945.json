{"ast":null,"code":"var _jsxFileName = \"/home/bipasha/Desktop/research/Data_Viz_Beads/Subspace/code/my-react-app/src/JsonDisplay.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HierarchicalGraph = ({\n  jsonData,\n  labelsData,\n  setHoveredCoordinates,\n  ringVisibility\n}) => {\n  _s();\n  const graphRef = useRef(null);\n  const [isProportionalView, setIsProportionalView] = useState(false);\n  useEffect(() => {\n    if (!jsonData || typeof jsonData !== \"object\" || Object.keys(jsonData).length === 0) {\n      console.error(\"Invalid or empty jsonData:\", jsonData);\n      return;\n    }\n    if (!labelsData || typeof labelsData !== \"object\") {\n      console.error(\"Invalid labelsData:\", labelsData);\n      return;\n    }\n    const svg = d3.select(graphRef.current);\n    svg.selectAll(\"*\").remove();\n    const width = 800;\n    const height = 800;\n    const margin = 20;\n    const maxRadius = Math.min(width, height) / 2 - margin;\n    const g = svg.attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"position\", \"absolute\").style(\"visibility\", \"hidden\").style(\"background-color\", \"rgba(0, 0, 0, 0.7)\").style(\"color\", \"white\").style(\"padding\", \"5px\").style(\"border-radius\", \"4px\").style(\"font-size\", \"12px\");\n    const getLabelColor = pointId => {\n      if (!labelsData || !labelsData.labels) return \"gray\";\n      for (const label of Object.keys(labelsData.labels)) {\n        const pointList = labelsData.labels[label];\n        if (Array.isArray(pointList) && pointList.includes(Number(pointId))) {\n          return colorScale(label);\n        }\n      }\n      return \"gray\";\n    };\n    const colorScale = d3.scaleOrdinal(d3.schemeCategory10).domain(Object.keys(labelsData.labels || {}));\n    const getSectorColor = (index, sectorIndex) => {\n      return d3.hsl(sectorIndex % 2 === 0 ? 0 : 220, 0.9, 0.6);\n    };\n    const subspaces = Object.keys(jsonData);\n    subspaces.sort((a, b) => a.length - b.length);\n    const pointsData = subspaces.map(key => ({\n      key,\n      points: jsonData[key],\n      dimensions: key.length,\n      subspaceId: key\n    }));\n    const ringLabels = subspaces.map((_, i) => String.fromCharCode(65 + i));\n    const pointPositions = {};\n    let highlightedElements = null;\n    const clearHighlights = () => {\n      if (highlightedElements) {\n        highlightedElements.line.attr(\"stroke-width\", 0.3).attr(\"stroke\", highlightedElements.originalColor);\n        highlightedElements.circles.forEach(circle => circle.attr(\"r\", 3).attr(\"fill\", \"black\"));\n        highlightedElements = null;\n      }\n    };\n    const calculateSectorAngles = (points, sectors) => {\n      const sectorCounts = new Array(sectors).fill(0);\n      points.forEach(point => {\n        const bitVector = Object.entries(point).filter(([key]) => key !== \"Point_ID\").map(([key, coord]) => coord >= 0 ? 1 : 0).join(\"\");\n        const bitVectorIndex = parseInt(bitVector, 2);\n        sectorCounts[bitVectorIndex]++;\n      });\n      const totalPoints = sectorCounts.reduce((a, b) => a + b, 0);\n      const usedAngle = 2 * Math.PI * 0.9 / totalPoints;\n      const remainingAngle = 2 * Math.PI - usedAngle * totalPoints;\n      const emptySectors = sectorCounts.filter(count => count === 0).length;\n      const emptySectorAngle = remainingAngle / emptySectors;\n      const sectorAngles = sectorCounts.map(count => count > 0 ? usedAngle * count : emptySectorAngle);\n      const startAngles = [];\n      let currentAngle = 0;\n      sectorAngles.forEach(angle => {\n        startAngles.push(currentAngle);\n        currentAngle += angle;\n      });\n      return {\n        sectorAngles,\n        startAngles\n      };\n    };\n    subspaces.forEach((key, index) => {\n      if (!ringVisibility[key]) return;\n      const innerRadius = index / subspaces.length * maxRadius;\n      const outerRadius = (index + 1) / subspaces.length * maxRadius;\n      const sectors = 2 ** (index + 1);\n      const rotationOffset = Math.PI / 2;\n      let sectorAngles, startAngles;\n      if (isProportionalView && index === subspaces.length - 1) {\n        const result = calculateSectorAngles(pointsData[index].points, sectors);\n        sectorAngles = result.sectorAngles;\n        startAngles = result.startAngles;\n      } else {\n        sectorAngles = new Array(sectors).fill(2 * Math.PI / sectors);\n        startAngles = new Array(sectors).fill(0).map((_, i) => 2 * Math.PI * i / sectors);\n      }\n      for (let i = 0; i < sectors; i++) {\n        const startAngle = startAngles[i] + rotationOffset;\n        const endAngle = startAngle + sectorAngles[i];\n        g.append(\"path\").attr(\"d\", d3.arc().innerRadius(innerRadius).outerRadius(outerRadius).startAngle(startAngle).endAngle(endAngle)).attr(\"fill\", getSectorColor(index, i)).attr(\"fill-opacity\", 0.3).attr(\"stroke\", \"black\").attr(\"stroke-width\", 0.1).style(\"cursor\", \"pointer\");\n        g.append(\"text\").attr(\"x\", 0).attr(\"y\", -outerRadius - 5).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"16px\").attr(\"fill\", \"red\").attr(\"font-weight\", \"bold\").text(ringLabels[index]);\n      }\n      for (let i = 0; i < sectors; i++) {\n        const angle = startAngles[i] + rotationOffset;\n        const x1 = outerRadius * Math.cos(angle);\n        const y1 = outerRadius * Math.sin(angle);\n        const x2 = innerRadius * Math.cos(angle);\n        const y2 = innerRadius * Math.sin(angle);\n        g.append(\"line\").attr(\"x1\", x2).attr(\"y1\", y2).attr(\"x2\", x1).attr(\"y2\", y1).attr(\"stroke\", \"black\").attr(\"stroke-width\", 0.25).style(\"pointer-events\", \"none\");\n      }\n      pointsData[index].points.forEach((point, i) => {\n        const pointData = Object.entries(point).filter(([key]) => key !== \"Point_ID\");\n        const bitVector = pointData.map(([key, coord]) => coord >= 0 ? 1 : 0).join(\"\");\n        const minRadius = innerRadius;\n        const maxRadius = outerRadius;\n        const randomRadius = minRadius + Math.random() * (maxRadius - minRadius);\n        const bitVectorIndex = parseInt(bitVector, 2);\n        const angleStart = startAngles[bitVectorIndex] + rotationOffset;\n        const angleEnd = angleStart + sectorAngles[bitVectorIndex];\n        const centerAngle = (angleStart + angleEnd) / 2;\n        const totalPoints = pointsData[index].points.length;\n        const clusterFactor = 0.86;\n        const overlapRadius = innerRadius + clusterFactor * (outerRadius - innerRadius) * (i % totalPoints) / totalPoints;\n        const x = overlapRadius * Math.cos(centerAngle);\n        const y = overlapRadius * Math.sin(centerAngle);\n        point.Point_ID.forEach(id => {\n          if (!pointPositions[id]) {\n            pointPositions[id] = [];\n          }\n          pointPositions[id].push({\n            x,\n            y,\n            point,\n            subspaceId: key\n          });\n        });\n        g.append(\"circle\").attr(\"cx\", x).attr(\"cy\", y).attr(\"r\", 3).attr(\"fill\", \"black\").attr(\"stroke\", \"white\").attr(\"stroke-width\", 0.5).style(\"pointer-events\", \"visible\").on(\"mouseover\", event => {\n          const pointIds = point.Point_ID.join(\", \");\n          let associatedLabels = [];\n          if (labelsData && labelsData.labels) {\n            Object.entries(labelsData.labels).forEach(([label, pointList]) => {\n              if (point.Point_ID.some(id => pointList.includes(Number(id)))) {\n                associatedLabels.push(label);\n              }\n            });\n          }\n          const labelText = associatedLabels.length > 0 ? associatedLabels.join(\", \") : \"No Label\";\n          tooltip.style(\"visibility\", \"visible\").html(`Point_IDs: ${pointIds}<br>Coordinates: (${x.toFixed(2)}, ${y.toFixed(2)})<br>Subspace: ${key}<br>Label: ${labelText}`);\n          setHoveredCoordinates({\n            ...point,\n            label: labelText\n          });\n        }).on(\"mousemove\", event => {\n          tooltip.style(\"top\", event.pageY + 10 + \"px\").style(\"left\", event.pageX + 10 + \"px\");\n        }).on(\"mouseout\", () => {\n          tooltip.style(\"visibility\", \"hidden\");\n          setHoveredCoordinates(null);\n        });\n      });\n    });\n    Object.entries(pointPositions).forEach(([pointId, positions]) => {\n      if (positions.length > 1) {\n        for (let i = 0; i < positions.length - 1; i++) {\n          const line = g.append(\"line\").attr(\"x1\", positions[i].x).attr(\"y1\", positions[i].y).attr(\"x2\", positions[i + 1].x).attr(\"y2\", positions[i + 1].y).attr(\"stroke\", getLabelColor(pointId)).attr(\"stroke-width\", 0.3).style(\"cursor\", \"pointer\").on(\"mouseover\", event => {\n            tooltip.style(\"visibility\", \"visible\").html(`Connection: Point_ID ${pointId}`);\n          }).on(\"mousemove\", event => {\n            tooltip.style(\"top\", event.pageY + 10 + \"px\").style(\"left\", event.pageX + 10 + \"px\");\n          }).on(\"mouseout\", () => {\n            tooltip.style(\"visibility\", \"hidden\");\n          }).on(\"click\", event => {\n            var _Object$entries$find;\n            clearHighlights();\n            const originalColor = getLabelColor(pointId);\n            line.attr(\"stroke-width\", 2).attr(\"stroke\", \"yellow\");\n            const circles = g.selectAll(\"circle\").filter(d => {\n              const circleX = parseFloat(this.getAttribute(\"cx\"));\n              const circleY = parseFloat(this.getAttribute(\"cy\"));\n              return Math.abs(circleX - positions[i].x) < 0.1 && Math.abs(circleY - positions[i].y) < 0.1 || Math.abs(circleX - positions[i + 1].x) < 0.1 && Math.abs(circleY - positions[i + 1].y) < 0.1;\n            }).attr(\"r\", 6).attr(\"fill\", \"yellow\");\n            highlightedElements = {\n              line,\n              circles,\n              originalColor\n            };\n            const point1 = positions[i].point;\n            const point2 = positions[i + 1].point;\n            const coords1 = Object.entries(point1).filter(([key]) => key !== \"Point_ID\").map(([key, value]) => `${key}: ${value}`).join(\", \");\n            const coords2 = Object.entries(point2).filter(([key]) => key !== \"Point_ID\").map(([key, value]) => `${key}: ${value}`).join(\", \");\n            const label1 = ((_Object$entries$find = Object.entries((labelsData === null || labelsData === void 0 ? void 0 : labelsData.labels) || {}).find(([_, ids]) => ids.includes(Number(pointId)))) === null || _Object$entries$find === void 0 ? void 0 : _Object$entries$find[0]) || \"No Label\";\n          });\n        }\n      }\n    });\n    const zoom = d3.zoom().on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n    });\n    svg.call(zoom);\n    return () => {\n      tooltip.remove();\n      svg.select(\".zoom-view\").remove();\n    };\n  }, [jsonData, labelsData, ringVisibility, setHoveredCoordinates, isProportionalView]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsProportionalView(!isProportionalView),\n      children: isProportionalView ? \"Normal View\" : \"Proportional View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: graphRef,\n      style: {\n        width: \"100%\",\n        height: \"800px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, this);\n};\n_s(HierarchicalGraph, \"9s6zjkFI7sGGsI16SRKRmv9lgWY=\");\n_c = HierarchicalGraph;\nexport default HierarchicalGraph;\nvar _c;\n$RefreshReg$(_c, \"HierarchicalGraph\");","map":{"version":3,"names":["d3","jsxDEV","_jsxDEV","HierarchicalGraph","jsonData","labelsData","setHoveredCoordinates","ringVisibility","_s","graphRef","useRef","isProportionalView","setIsProportionalView","useState","useEffect","Object","keys","length","console","error","svg","select","current","selectAll","remove","width","height","margin","maxRadius","Math","min","g","attr","append","tooltip","style","getLabelColor","pointId","labels","label","pointList","Array","isArray","includes","Number","colorScale","scaleOrdinal","schemeCategory10","domain","getSectorColor","index","sectorIndex","hsl","subspaces","sort","a","b","pointsData","map","key","points","dimensions","subspaceId","ringLabels","_","i","String","fromCharCode","pointPositions","highlightedElements","clearHighlights","line","originalColor","circles","forEach","circle","calculateSectorAngles","sectors","sectorCounts","fill","point","bitVector","entries","filter","coord","join","bitVectorIndex","parseInt","totalPoints","reduce","usedAngle","PI","remainingAngle","emptySectors","count","emptySectorAngle","sectorAngles","startAngles","currentAngle","angle","push","innerRadius","outerRadius","rotationOffset","result","startAngle","endAngle","arc","text","x1","cos","y1","sin","x2","y2","pointData","minRadius","randomRadius","random","angleStart","angleEnd","centerAngle","clusterFactor","overlapRadius","x","y","Point_ID","id","on","event","pointIds","associatedLabels","some","labelText","html","toFixed","pageY","pageX","positions","_Object$entries$find","d","circleX","parseFloat","getAttribute","circleY","abs","point1","point2","coords1","value","coords2","label1","find","ids","zoom","transform","call","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/home/bipasha/Desktop/research/Data_Viz_Beads/Subspace/code/my-react-app/src/JsonDisplay.js"],"sourcesContent":["// import React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\n\nconst HierarchicalGraph = ({ jsonData, labelsData, setHoveredCoordinates, ringVisibility }) => {\n  const graphRef = useRef(null);\n  const [isProportionalView, setIsProportionalView] = useState(false);\n\n  useEffect(() => {\n    if (\n      !jsonData ||\n      typeof jsonData !== \"object\" ||\n      Object.keys(jsonData).length === 0\n    ) {\n      console.error(\"Invalid or empty jsonData:\", jsonData);\n      return;\n    }\n\n    if (!labelsData || typeof labelsData !== \"object\") {\n      console.error(\"Invalid labelsData:\", labelsData);\n      return;\n    }\n\n    const svg = d3.select(graphRef.current);\n    svg.selectAll(\"*\").remove();\n\n    const width = 800;\n    const height = 800;\n    const margin = 20;\n    const maxRadius = Math.min(width, height) / 2 - margin;\n\n    const g = svg\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n\n    const tooltip = d3\n      .select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"position\", \"absolute\")\n      .style(\"visibility\", \"hidden\")\n      .style(\"background-color\", \"rgba(0, 0, 0, 0.7)\")\n      .style(\"color\", \"white\")\n      .style(\"padding\", \"5px\")\n      .style(\"border-radius\", \"4px\")\n      .style(\"font-size\", \"12px\");\n\n    const getLabelColor = (pointId) => {\n      if (!labelsData || !labelsData.labels) return \"gray\";\n      for (const label of Object.keys(labelsData.labels)) {\n        const pointList = labelsData.labels[label];\n        if (Array.isArray(pointList) && pointList.includes(Number(pointId))) {\n          return colorScale(label);\n        }\n      }\n      return \"gray\";\n    };\n\n    const colorScale = d3\n      .scaleOrdinal(d3.schemeCategory10)\n      .domain(Object.keys(labelsData.labels || {}));\n\n    const getSectorColor = (index, sectorIndex) => {\n      return d3.hsl(sectorIndex % 2 === 0 ? 0 : 220, 0.9, 0.6);\n    };\n\n    const subspaces = Object.keys(jsonData);\n    subspaces.sort((a, b) => a.length - b.length);\n\n    const pointsData = subspaces.map((key) => ({\n      key,\n      points: jsonData[key],\n      dimensions: key.length,\n      subspaceId: key,\n    }));\n    const ringLabels = subspaces.map((_, i) => String.fromCharCode(65 + i));\n\n    const pointPositions = {};\n    let highlightedElements = null;\n\n    const clearHighlights = () => {\n      if (highlightedElements) {\n        highlightedElements.line.attr(\"stroke-width\", 0.3).attr(\"stroke\", highlightedElements.originalColor);\n        highlightedElements.circles.forEach(circle =>\n          circle.attr(\"r\", 3).attr(\"fill\", \"black\")\n        );\n        highlightedElements = null;\n      }\n    };\n\n    const calculateSectorAngles = (points, sectors) => {\n      const sectorCounts = new Array(sectors).fill(0);\n      points.forEach(point => {\n        const bitVector = Object.entries(point)\n          .filter(([key]) => key !== \"Point_ID\")\n          .map(([key, coord]) => (coord >= 0 ? 1 : 0))\n          .join(\"\");\n        const bitVectorIndex = parseInt(bitVector, 2);\n        sectorCounts[bitVectorIndex]++;\n      });\n\n      const totalPoints = sectorCounts.reduce((a, b) => a + b, 0);\n      const usedAngle = (2 * Math.PI * 0.9) / totalPoints;\n      const remainingAngle = 2 * Math.PI - (usedAngle * totalPoints);\n      const emptySectors = sectorCounts.filter(count => count === 0).length;\n      const emptySectorAngle = remainingAngle / emptySectors;\n\n      const sectorAngles = sectorCounts.map(count =>\n        count > 0 ? usedAngle * count : emptySectorAngle\n      );\n\n      const startAngles = [];\n      let currentAngle = 0;\n      sectorAngles.forEach(angle => {\n        startAngles.push(currentAngle);\n        currentAngle += angle;\n      });\n\n      return { sectorAngles, startAngles };\n    };\n\n    subspaces.forEach((key, index) => {\n      if (!ringVisibility[key]) return;\n\n      const innerRadius = (index / subspaces.length) * maxRadius;\n      const outerRadius = ((index + 1) / subspaces.length) * maxRadius;\n      const sectors = 2 ** (index + 1);\n      const rotationOffset = Math.PI / 2;\n\n      let sectorAngles, startAngles;\n      if (isProportionalView && index === subspaces.length - 1) {\n        const result = calculateSectorAngles(pointsData[index].points, sectors);\n        sectorAngles = result.sectorAngles;\n        startAngles = result.startAngles;\n      } else {\n        sectorAngles = new Array(sectors).fill((2 * Math.PI) / sectors);\n        startAngles = new Array(sectors).fill(0).map((_, i) => (2 * Math.PI * i) / sectors);\n      }\n\n      for (let i = 0; i < sectors; i++) {\n        const startAngle = startAngles[i] + rotationOffset;\n        const endAngle = startAngle + sectorAngles[i];\n\n        g.append(\"path\")\n          .attr(\"d\", d3.arc()\n            .innerRadius(innerRadius)\n            .outerRadius(outerRadius)\n            .startAngle(startAngle)\n            .endAngle(endAngle)\n          )\n          .attr(\"fill\", getSectorColor(index, i))\n          .attr(\"fill-opacity\", 0.3)\n          .attr(\"stroke\", \"black\")\n          .attr(\"stroke-width\", 0.1)\n          .style(\"cursor\", \"pointer\");\n\n        g.append(\"text\")\n          .attr(\"x\", 0)\n          .attr(\"y\", -outerRadius - 5)\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"font-size\", \"16px\")\n          .attr(\"fill\", \"red\")\n          .attr(\"font-weight\", \"bold\")\n          .text(ringLabels[index]);\n      }\n\n      for (let i = 0; i < sectors; i++) {\n        const angle = startAngles[i] + rotationOffset;\n        const x1 = outerRadius * Math.cos(angle);\n        const y1 = outerRadius * Math.sin(angle);\n        const x2 = innerRadius * Math.cos(angle);\n        const y2 = innerRadius * Math.sin(angle);\n        g.append(\"line\")\n          .attr(\"x1\", x2)\n          .attr(\"y1\", y2)\n          .attr(\"x2\", x1)\n          .attr(\"y2\", y1)\n          .attr(\"stroke\", \"black\")\n          .attr(\"stroke-width\", 0.25)\n          .style(\"pointer-events\", \"none\");\n      }\n\n      pointsData[index].points.forEach((point, i) => {\n        const pointData = Object.entries(point).filter(\n          ([key]) => key !== \"Point_ID\"\n        );\n        const bitVector = pointData\n          .map(([key, coord]) => (coord >= 0 ? 1 : 0))\n          .join(\"\");\n\n        const minRadius = innerRadius;\n        const maxRadius = outerRadius;\n        const randomRadius =\n          minRadius + Math.random() * (maxRadius - minRadius);\n\n        const bitVectorIndex = parseInt(bitVector, 2);\n        const angleStart = startAngles[bitVectorIndex] + rotationOffset;\n        const angleEnd = angleStart + sectorAngles[bitVectorIndex];\n        const centerAngle = (angleStart + angleEnd) / 2;\n\n        const totalPoints = pointsData[index].points.length;\n        const clusterFactor = 0.86;\n        const overlapRadius =\n          innerRadius +\n          (clusterFactor * (outerRadius - innerRadius) * (i % totalPoints)) /\n          totalPoints;\n\n        const x = overlapRadius * Math.cos(centerAngle);\n        const y = overlapRadius * Math.sin(centerAngle);\n        point.Point_ID.forEach((id) => {\n          if (!pointPositions[id]) {\n            pointPositions[id] = [];\n          }\n          pointPositions[id].push({ x, y, point, subspaceId: key });\n        });\n\n        g.append(\"circle\")\n          .attr(\"cx\", x)\n          .attr(\"cy\", y)\n          .attr(\"r\", 3)\n          .attr(\"fill\", \"black\")\n          .attr(\"stroke\", \"white\")\n          .attr(\"stroke-width\", 0.5)\n          .style(\"pointer-events\", \"visible\")\n          .on(\"mouseover\", (event) => {\n            const pointIds = point.Point_ID.join(\", \");\n            let associatedLabels = [];\n            if (labelsData && labelsData.labels) {\n              Object.entries(labelsData.labels).forEach(([label, pointList]) => {\n                if (point.Point_ID.some(id => pointList.includes(Number(id)))) {\n                  associatedLabels.push(label);\n                }\n              });\n            }\n            const labelText = associatedLabels.length > 0 ? associatedLabels.join(\", \") : \"No Label\";\n\n            tooltip\n              .style(\"visibility\", \"visible\")\n              .html(\n                `Point_IDs: ${pointIds}<br>Coordinates: (${x.toFixed(2)}, ${y.toFixed(2)})<br>Subspace: ${key}<br>Label: ${labelText}`\n              );\n            setHoveredCoordinates({ ...point, label: labelText });\n          })\n          .on(\"mousemove\", (event) => {\n            tooltip\n              .style(\"top\", event.pageY + 10 + \"px\")\n              .style(\"left\", event.pageX + 10 + \"px\");\n          })\n          .on(\"mouseout\", () => {\n            tooltip.style(\"visibility\", \"hidden\");\n            setHoveredCoordinates(null);\n          });\n      });\n    });\n\n    Object.entries(pointPositions).forEach(([pointId, positions]) => {\n      if (positions.length > 1) {\n        for (let i = 0; i < positions.length - 1; i++) {\n          const line = g.append(\"line\")\n            .attr(\"x1\", positions[i].x)\n            .attr(\"y1\", positions[i].y)\n            .attr(\"x2\", positions[i + 1].x)\n            .attr(\"y2\", positions[i + 1].y)\n            .attr(\"stroke\", getLabelColor(pointId))\n            .attr(\"stroke-width\", 0.3)\n            .style(\"cursor\", \"pointer\")\n            .on(\"mouseover\", (event) => {\n              tooltip\n                .style(\"visibility\", \"visible\")\n                .html(`Connection: Point_ID ${pointId}`);\n            })\n            .on(\"mousemove\", (event) => {\n              tooltip\n                .style(\"top\", event.pageY + 10 + \"px\")\n                .style(\"left\", event.pageX + 10 + \"px\");\n            })\n            .on(\"mouseout\", () => {\n              tooltip.style(\"visibility\", \"hidden\");\n            })\n            .on(\"click\", (event) => {\n              clearHighlights();\n\n              const originalColor = getLabelColor(pointId);\n              line.attr(\"stroke-width\", 2).attr(\"stroke\", \"yellow\");\n\n              const circles = g.selectAll(\"circle\")\n                .filter(d => {\n                  const circleX = parseFloat(this.getAttribute(\"cx\"));\n                  const circleY = parseFloat(this.getAttribute(\"cy\"));\n                  return (\n                    (Math.abs(circleX - positions[i].x) < 0.1 && Math.abs(circleY - positions[i].y) < 0.1) ||\n                    (Math.abs(circleX - positions[i + 1].x) < 0.1 && Math.abs(circleY - positions[i + 1].y) < 0.1)\n                  )\n                })\n                .attr(\"r\", 6)\n                .attr(\"fill\", \"yellow\");\n\n              highlightedElements = { line, circles, originalColor };\n\n              const point1 = positions[i].point;\n              const point2 = positions[i + 1].point;\n\n              const coords1 = Object.entries(point1)\n                .filter(([key]) => key !== \"Point_ID\")\n                .map(([key, value]) => `${key}: ${value}`)\n                .join(\", \");\n              const coords2 = Object.entries(point2)\n                .filter(([key]) => key !== \"Point_ID\")\n                .map(([key, value]) => `${key}: ${value}`)\n                .join(\", \");\n\n              const label1 = Object.entries(labelsData?.labels || {})\n                .find(([_, ids]) => ids.includes(Number(pointId)))?.[0] || \"No Label\";\n            });\n        }\n      }\n    });\n\n    const zoom = d3.zoom().on(\"zoom\", (event) => {\n      g.attr(\"transform\", event.transform);\n    });\n    svg.call(zoom);\n    return () => {\n      tooltip.remove();\n      svg.select(\".zoom-view\").remove();\n    };\n\n  }, [jsonData, labelsData, ringVisibility, setHoveredCoordinates, isProportionalView]);\n\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <button onClick={() => setIsProportionalView(!isProportionalView)}>\n        {isProportionalView ? \"Normal View\" : \"Proportional View\"}\n      </button>\n      <svg ref={graphRef} style={{ width: \"100%\", height: \"800px\" }}></svg>\n    </div>\n  );\n};\n\nexport default HierarchicalGraph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}