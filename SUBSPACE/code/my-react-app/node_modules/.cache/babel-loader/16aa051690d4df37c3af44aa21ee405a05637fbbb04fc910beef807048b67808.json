{"ast":null,"code":"var _jsxFileName = \"/home/bipasha/Desktop/research/Data_Viz_Beads/Subspace/code/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import HierarchicalGraph from \"./JsonDisplay\";\n\n// const App = () => {\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const [fileName, setFileName] = useState(\"\");\n//   const [jsonData, setJsonData] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [hoveredCoordinates, setHoveredCoordinates] = useState(null);\n//   const [labelsData, setLabelsData] = useState(null);\n//   const [ringVisibility, setRingVisibility] = useState({});\n\n//   const handleFileSelect = (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       setSelectedFile(file);\n//       setFileName(file.name);\n//       setError(null);\n//     }\n//   };\n\n//   const handleUpload = async (e) => {\n//     e.preventDefault();\n//     if (!selectedFile) {\n//       setError(\"Please select a file first\");\n//       return;\n//     }\n\n//     setIsLoading(true);\n//     const formData = new FormData();\n//     formData.append(\"file\", selectedFile);\n\n//     try {\n//       const uploadResponse = await fetch(\"http://127.0.0.1:5000/upload\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n\n//       if (!uploadResponse.ok) {\n//         throw new Error(\"Upload failed\");\n//       }\n\n//       const result = await uploadResponse.json();\n//       console.log(\"Upload successful:\", result);\n\n//       const jsonResponse = await fetch(\n//         `http://127.0.0.1:5000/uploads/${result.json_filename}`\n//       );\n//       const processedData = await jsonResponse.json();\n\n//       const labelsResponse = await fetch(\n//         `http://127.0.0.1:5000/uploads/labels_file.json`\n//       );\n//       const processedLabelsData = await labelsResponse.json();\n\n//       setJsonData(processedData);\n//       setLabelsData(processedLabelsData);\n\n//       // Initialize ring visibility\n//       const subspaces = Object.keys(processedData);\n//       subspaces.sort((a, b) => a.length - b.length);\n//       const initialVisibility = subspaces.reduce((acc, key) => {\n//         acc[key] = true;\n//         return acc;\n//       }, {});\n//       setRingVisibility(initialVisibility);\n//     } catch (err) {\n//       setError(err.message);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const toggleRingVisibility = (key) => {\n//     setRingVisibility((prev) => ({\n//       ...prev,\n//       [key]: !prev[key],\n//     }));\n//   };\n\n//   const toggleAllRingsVisibility = () => {\n//     const subspaces = Object.keys(jsonData || {});\n//     subspaces.sort((a, b) => a.length - b.length);\n\n//     const newVisibility = subspaces.reduce((acc, key, index) => {\n//       acc[key] = index >= subspaces.length - 2 ? true : !ringVisibility[key];\n//       return acc;\n//     }, {});\n//     setRingVisibility(newVisibility);\n//   };\n//   return (\n//     <div className=\"h-screen bg-gray-100 p-4 sm:p-6 flex flex-col sm:flex-row\">\n//       {/* Left Dashboard */}\n//       <div className=\"w-full sm:w-1/4 p-4 bg-white shadow rounded-lg mb-4 sm:mb-0 sm:mr-4\">\n//         <h1 className=\"text-xl font-bold mb-4\">File Upload</h1>\n//         <div className=\"mb-4\">\n//           <input\n//             type=\"file\"\n//             accept=\".csv\"\n//             onChange={handleFileSelect}\n//             className=\"mb-2 w-full\"\n//             disabled={isLoading}\n//           />\n//           {fileName && (\n//             <div className=\"mt-2 p-2 bg-blue-50 rounded\">\n//               Selected file: <span className=\"font-semibold\">{fileName}</span>\n//             </div>\n//           )}\n//         </div>\n//         <button\n//           type=\"button\"\n//           onClick={handleUpload}\n//           disabled={!selectedFile || isLoading}\n//           className=\"bg-blue-500 text-white px-4 py-2 rounded w-full\"\n//         >\n//           {isLoading ? \"Processing...\" : \"Upload\"}\n//         </button>\n//         {error && <div className=\"mt-2 text-red-500\">{error}</div>}\n\n//         <div className=\"mt-6\">\n//           <h2 className=\"text-xl font-bold mb-4\">Subspace Rings</h2>\n//           <button\n//             onClick={toggleAllRingsVisibility}\n//             className=\"bg-blue-500 text-white px-4 py-2 rounded w-full mb-4\"\n//           >\n//             {Object.values(ringVisibility).every((v) => v)\n//               ? \"Collapse All Rings\"\n//               : \"Expand All Rings\"}\n//           </button>\n//           {Object.keys(jsonData || {}).map((key) => (\n//             <div key={key} className=\"mb-2\">\n//               <button\n//                 onClick={() => toggleRingVisibility(key)}\n//                 className=\"w-full p-2 text-left rounded\"\n//                 style={{\n//                   backgroundColor: ringVisibility[key] ? \"#fca5a5\" : \"lightgray\",\n//                   border: \"1px solid #ccc\",\n//                 }}\n//               >\n//                 {ringVisibility[key] ? `- ${key}` : `+ ${key}`}\n//               </button>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n\n//       {/* Visualization Area */}\n//       <div className=\"flex-1 flex flex-col bg-white shadow rounded-lg p-4 mb-4 sm:mb-0 sm:mr-4\">\n//         <h2 className=\"text-2xl font-bold mb-4\">Visualization</h2>\n//         <div className=\"flex-1 flex justify-center items-center\">\n//           {jsonData && (\n//             <HierarchicalGraph\n//               jsonData={jsonData}\n//               labelsData={labelsData}\n//               setHoveredCoordinates={setHoveredCoordinates}\n//               ringVisibility={ringVisibility}\n//             />\n//           )}\n//         </div>\n//       </div>\n\n//       {/* Right Dashboard */}\n//       <div className=\"w-full sm:w-1/4 p-4 bg-white shadow rounded-lg\">\n//         <h2 className=\"text-xl font-bold mb-4\">Point Info</h2>\n//         {hoveredCoordinates && (\n//           <div className=\"p-2 bg-green-50 rounded text-lg\">\n//             <strong>Hovered Node:</strong>\n//             <div>ID: {hoveredCoordinates.Point_IDs}</div>\n//             {Object.keys(hoveredCoordinates)\n//               .filter((key) => key !== \"id\")\n//               .map((key) => (\n//                 <div key={key}>\n//                   <strong>{key}:</strong>{\" \"}\n//                   {hoveredCoordinates[key].toFixed\n//                     ? hoveredCoordinates[key].toFixed(2)\n//                     : hoveredCoordinates[key]}\n//                 </div>\n//               ))}\n//           </div>\n//         )}\n\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\nimport React, { useState, useEffect, useRef } from \"react\";\n// import * as d3 from \"d3\";\nimport HierarchicalGraph from \"./JsonDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileName, setFileName] = useState(\"\");\n  const [jsonData, setJsonData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hoveredCoordinates, setHoveredCoordinates] = useState(null);\n  const [labelsData, setLabelsData] = useState(null);\n  const [ringVisibility, setRingVisibility] = useState({});\n  const legendRef = useRef(null);\n  useEffect(() => {\n    if (labelsData && legendRef.current) {\n      const labelEntries = Object.keys(labelsData.labels || {});\n      const colorScale = d3.scaleOrdinal(d3.schemeCategory10).domain(labelEntries);\n      const legend = d3.select(legendRef.current).append(\"svg\").attr(\"width\", 200).attr(\"height\", labelEntries.length * 25 + 20);\n      legend.selectAll(\"rect\").data(labelEntries).enter().append(\"rect\").attr(\"x\", 0).attr(\"y\", (d, i) => i * 25).attr(\"width\", 20).attr(\"height\", 20).attr(\"fill\", d => colorScale(d));\n      legend.selectAll(\"text\").data(labelEntries).enter().append(\"text\").attr(\"x\", 30).attr(\"y\", (d, i) => i * 25 + 15).text(d => d).attr(\"font-size\", \"12px\").attr(\"alignment-baseline\", \"middle\");\n    }\n  }, [labelsData]);\n\n  // ... rest of your code ...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen bg-gray-100 p-4 sm:p-6 flex flex-col sm:flex-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full sm:w-1/4 p-4 bg-white shadow rounded-lg mb-4 sm:mb-0 sm:mr-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col bg-white shadow rounded-lg p-4 mb-4 sm:mb-0 sm:mr-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex justify-center items-center\",\n        children: jsonData && /*#__PURE__*/_jsxDEV(HierarchicalGraph, {\n          jsonData: jsonData,\n          labelsData: labelsData,\n          setHoveredCoordinates: setHoveredCoordinates,\n          ringVisibility: ringVisibility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full sm:w-1/4 p-4 bg-white shadow rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Point Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), hoveredCoordinates && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-2 bg-green-50 rounded text-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hovered Node:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"ID: \", hoveredCoordinates.Point_IDs]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), Object.keys(hoveredCoordinates).filter(key => key !== \"id\").map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [key, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 19\n          }, this), \" \", hoveredCoordinates[key].toFixed ? hoveredCoordinates[key].toFixed(2) : hoveredCoordinates[key]]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: legendRef,\n        className: \"mt-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mBaH5ZExFRfzOwBF0+1xDdD+jSI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","HierarchicalGraph","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","fileName","setFileName","jsonData","setJsonData","error","setError","isLoading","setIsLoading","hoveredCoordinates","setHoveredCoordinates","labelsData","setLabelsData","ringVisibility","setRingVisibility","legendRef","current","labelEntries","Object","keys","labels","colorScale","d3","scaleOrdinal","schemeCategory10","domain","legend","select","append","attr","length","selectAll","data","enter","d","i","text","className","children","_jsxFileName","lineNumber","columnNumber","Point_IDs","filter","key","map","toFixed","ref","_c","$RefreshReg$"],"sources":["/home/bipasha/Desktop/research/Data_Viz_Beads/Subspace/code/my-react-app/src/App.js"],"sourcesContent":["\n// import React, { useState } from \"react\";\n// import HierarchicalGraph from \"./JsonDisplay\";\n\n// const App = () => {\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const [fileName, setFileName] = useState(\"\");\n//   const [jsonData, setJsonData] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [hoveredCoordinates, setHoveredCoordinates] = useState(null);\n//   const [labelsData, setLabelsData] = useState(null);\n//   const [ringVisibility, setRingVisibility] = useState({});\n\n//   const handleFileSelect = (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       setSelectedFile(file);\n//       setFileName(file.name);\n//       setError(null);\n//     }\n//   };\n\n//   const handleUpload = async (e) => {\n//     e.preventDefault();\n//     if (!selectedFile) {\n//       setError(\"Please select a file first\");\n//       return;\n//     }\n\n//     setIsLoading(true);\n//     const formData = new FormData();\n//     formData.append(\"file\", selectedFile);\n\n//     try {\n//       const uploadResponse = await fetch(\"http://127.0.0.1:5000/upload\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n\n//       if (!uploadResponse.ok) {\n//         throw new Error(\"Upload failed\");\n//       }\n\n//       const result = await uploadResponse.json();\n//       console.log(\"Upload successful:\", result);\n\n//       const jsonResponse = await fetch(\n//         `http://127.0.0.1:5000/uploads/${result.json_filename}`\n//       );\n//       const processedData = await jsonResponse.json();\n\n//       const labelsResponse = await fetch(\n//         `http://127.0.0.1:5000/uploads/labels_file.json`\n//       );\n//       const processedLabelsData = await labelsResponse.json();\n\n//       setJsonData(processedData);\n//       setLabelsData(processedLabelsData);\n\n//       // Initialize ring visibility\n//       const subspaces = Object.keys(processedData);\n//       subspaces.sort((a, b) => a.length - b.length);\n//       const initialVisibility = subspaces.reduce((acc, key) => {\n//         acc[key] = true;\n//         return acc;\n//       }, {});\n//       setRingVisibility(initialVisibility);\n//     } catch (err) {\n//       setError(err.message);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const toggleRingVisibility = (key) => {\n//     setRingVisibility((prev) => ({\n//       ...prev,\n//       [key]: !prev[key],\n//     }));\n//   };\n\n//   const toggleAllRingsVisibility = () => {\n//     const subspaces = Object.keys(jsonData || {});\n//     subspaces.sort((a, b) => a.length - b.length);\n\n//     const newVisibility = subspaces.reduce((acc, key, index) => {\n//       acc[key] = index >= subspaces.length - 2 ? true : !ringVisibility[key];\n//       return acc;\n//     }, {});\n//     setRingVisibility(newVisibility);\n//   };\n//   return (\n//     <div className=\"h-screen bg-gray-100 p-4 sm:p-6 flex flex-col sm:flex-row\">\n//       {/* Left Dashboard */}\n//       <div className=\"w-full sm:w-1/4 p-4 bg-white shadow rounded-lg mb-4 sm:mb-0 sm:mr-4\">\n//         <h1 className=\"text-xl font-bold mb-4\">File Upload</h1>\n//         <div className=\"mb-4\">\n//           <input\n//             type=\"file\"\n//             accept=\".csv\"\n//             onChange={handleFileSelect}\n//             className=\"mb-2 w-full\"\n//             disabled={isLoading}\n//           />\n//           {fileName && (\n//             <div className=\"mt-2 p-2 bg-blue-50 rounded\">\n//               Selected file: <span className=\"font-semibold\">{fileName}</span>\n//             </div>\n//           )}\n//         </div>\n//         <button\n//           type=\"button\"\n//           onClick={handleUpload}\n//           disabled={!selectedFile || isLoading}\n//           className=\"bg-blue-500 text-white px-4 py-2 rounded w-full\"\n//         >\n//           {isLoading ? \"Processing...\" : \"Upload\"}\n//         </button>\n//         {error && <div className=\"mt-2 text-red-500\">{error}</div>}\n\n//         <div className=\"mt-6\">\n//           <h2 className=\"text-xl font-bold mb-4\">Subspace Rings</h2>\n//           <button\n//             onClick={toggleAllRingsVisibility}\n//             className=\"bg-blue-500 text-white px-4 py-2 rounded w-full mb-4\"\n//           >\n//             {Object.values(ringVisibility).every((v) => v)\n//               ? \"Collapse All Rings\"\n//               : \"Expand All Rings\"}\n//           </button>\n//           {Object.keys(jsonData || {}).map((key) => (\n//             <div key={key} className=\"mb-2\">\n//               <button\n//                 onClick={() => toggleRingVisibility(key)}\n//                 className=\"w-full p-2 text-left rounded\"\n//                 style={{\n//                   backgroundColor: ringVisibility[key] ? \"#fca5a5\" : \"lightgray\",\n//                   border: \"1px solid #ccc\",\n//                 }}\n//               >\n//                 {ringVisibility[key] ? `- ${key}` : `+ ${key}`}\n//               </button>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n\n//       {/* Visualization Area */}\n//       <div className=\"flex-1 flex flex-col bg-white shadow rounded-lg p-4 mb-4 sm:mb-0 sm:mr-4\">\n//         <h2 className=\"text-2xl font-bold mb-4\">Visualization</h2>\n//         <div className=\"flex-1 flex justify-center items-center\">\n//           {jsonData && (\n//             <HierarchicalGraph\n//               jsonData={jsonData}\n//               labelsData={labelsData}\n//               setHoveredCoordinates={setHoveredCoordinates}\n//               ringVisibility={ringVisibility}\n//             />\n//           )}\n//         </div>\n//       </div>\n\n//       {/* Right Dashboard */}\n//       <div className=\"w-full sm:w-1/4 p-4 bg-white shadow rounded-lg\">\n//         <h2 className=\"text-xl font-bold mb-4\">Point Info</h2>\n//         {hoveredCoordinates && (\n//           <div className=\"p-2 bg-green-50 rounded text-lg\">\n//             <strong>Hovered Node:</strong>\n//             <div>ID: {hoveredCoordinates.Point_IDs}</div>\n//             {Object.keys(hoveredCoordinates)\n//               .filter((key) => key !== \"id\")\n//               .map((key) => (\n//                 <div key={key}>\n//                   <strong>{key}:</strong>{\" \"}\n//                   {hoveredCoordinates[key].toFixed\n//                     ? hoveredCoordinates[key].toFixed(2)\n//                     : hoveredCoordinates[key]}\n//                 </div>\n//               ))}\n//           </div>\n//         )}\n\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\nimport React, { useState, useEffect, useRef } from \"react\";\n// import * as d3 from \"d3\";\nimport HierarchicalGraph from \"./JsonDisplay\";\n\nconst App = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileName, setFileName] = useState(\"\");\n  const [jsonData, setJsonData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hoveredCoordinates, setHoveredCoordinates] = useState(null);\n  const [labelsData, setLabelsData] = useState(null);\n  const [ringVisibility, setRingVisibility] = useState({});\n  const legendRef = useRef(null);\n\n  useEffect(() => {\n    if (labelsData && legendRef.current) {\n      const labelEntries = Object.keys(labelsData.labels || {});\n      const colorScale = d3.scaleOrdinal(d3.schemeCategory10).domain(labelEntries);\n\n      const legend = d3.select(legendRef.current)\n        .append(\"svg\")\n        .attr(\"width\", 200)\n        .attr(\"height\", labelEntries.length * 25 + 20);\n\n      legend.selectAll(\"rect\")\n        .data(labelEntries)\n        .enter()\n        .append(\"rect\")\n        .attr(\"x\", 0)\n        .attr(\"y\", (d, i) => i * 25)\n        .attr(\"width\", 20)\n        .attr(\"height\", 20)\n        .attr(\"fill\", d => colorScale(d));\n\n      legend.selectAll(\"text\")\n        .data(labelEntries)\n        .enter()\n        .append(\"text\")\n        .attr(\"x\", 30)\n        .attr(\"y\", (d, i) => i * 25 + 15)\n        .text(d => d)\n        .attr(\"font-size\", \"12px\")\n        .attr(\"alignment-baseline\", \"middle\");\n    }\n  }, [labelsData]);\n\n  // ... rest of your code ...\n\n  return (\n    <div className=\"h-screen bg-gray-100 p-4 sm:p-6 flex flex-col sm:flex-row\">\n      {/* Left Dashboard */}\n      <div className=\"w-full sm:w-1/4 p-4 bg-white shadow rounded-lg mb-4 sm:mb-0 sm:mr-4\">\n        {/* ... left dashboard content ... */}\n      </div>\n\n      {/* Visualization Area */}\n      <div className=\"flex-1 flex flex-col bg-white shadow rounded-lg p-4 mb-4 sm:mb-0 sm:mr-4\">\n        <h2 className=\"text-2xl font-bold mb-4\">Visualization</h2>\n        <div className=\"flex-1 flex justify-center items-center\">\n          {jsonData && (\n            <HierarchicalGraph\n              jsonData={jsonData}\n              labelsData={labelsData}\n              setHoveredCoordinates={setHoveredCoordinates}\n              ringVisibility={ringVisibility}\n            />\n          )}\n        </div>\n      </div>\n\n      {/* Right Dashboard */}\n      <div className=\"w-full sm:w-1/4 p-4 bg-white shadow rounded-lg\">\n        <h2 className=\"text-xl font-bold mb-4\">Point Info</h2>\n        {hoveredCoordinates && (\n          <div className=\"p-2 bg-green-50 rounded text-lg\">\n            <strong>Hovered Node:</strong>\n            <div>ID: {hoveredCoordinates.Point_IDs}</div>\n            {Object.keys(hoveredCoordinates)\n              .filter((key) => key !== \"id\")\n              .map((key) => (\n                <div key={key}>\n                  <strong>{key}:</strong>{\" \"}\n                  {hoveredCoordinates[key].toFixed\n                    ? hoveredCoordinates[key].toFixed(2)\n                    : hoveredCoordinates[key]}\n                </div>\n              ))}\n          </div>\n        )}\n\n        {/* Labels Legend */}\n        <div ref={legendRef} className=\"mt-4\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}