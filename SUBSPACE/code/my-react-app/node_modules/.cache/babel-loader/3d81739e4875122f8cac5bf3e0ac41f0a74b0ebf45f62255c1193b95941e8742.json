{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n\n// const JsonDisplay = ({ jsonFilename }) => {\n//   const [jsonData, setJsonData] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchJson = async () => {\n//       try {\n//         // Adjust the fetch URL depending on where the JSON file is located\n//         const response = await fetch(`/public/${jsonFilename}`);\n//         if (!response.ok) {\n//           throw new Error(`Failed to fetch ${jsonFilename}`);\n//         }\n//         const data = await response.json();\n//         setJsonData(data);\n//       } catch (err) {\n//         console.error(\"Error fetching JSON:\", err);\n//         setError(err.message);\n//       }\n//     };\n\n//     fetchJson();\n//   }, [jsonFilename]);\n\n//   return (\n//     <div className=\"bg-white shadow-lg rounded-lg p-6 mt-4 w-full max-w-3xl\">\n//       <h2 className=\"text-2xl font-bold mb-4 text-blue-800 text-center\">\n//         Processed JSON File\n//       </h2>\n//       {error ? (\n//         <p className=\"text-red-500\">{error}</p>\n//       ) : jsonData ? (\n//         <pre className=\"bg-gray-100 p-4 rounded-lg overflow-auto text-sm\">\n//           {JSON.stringify(jsonData, null, 2)}\n//         </pre>\n//       ) : (\n//         <p className=\"text-gray-500 text-sm\">Loading...</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default JsonDisplay;\n\nimport React, { useEffect, useState } from \"react\";\nuseEffect(() => {\n  const fetchJson = async () => {\n    if (!jsonFilename) {\n      setError(\"No JSON filename provided\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/public/${jsonFilename}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch ${jsonFilename}`);\n      }\n      const data = await response.json();\n      setJsonData(data);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error fetching JSON:\", err);\n      setError(err.message);\n    }\n  };\n  fetchJson();\n}, [jsonFilename]);\nexport default JsonDisplay;","map":{"version":3,"names":["React","useEffect","useState","fetchJson","jsonFilename","setError","response","fetch","ok","Error","data","json","setJsonData","err","console","error","message","JsonDisplay"],"sources":["/home/divyansh/misc/GRAPH/code/my-react-app/src/JsonDisplay.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n\n// const JsonDisplay = ({ jsonFilename }) => {\n//   const [jsonData, setJsonData] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchJson = async () => {\n//       try {\n//         // Adjust the fetch URL depending on where the JSON file is located\n//         const response = await fetch(`/public/${jsonFilename}`);\n//         if (!response.ok) {\n//           throw new Error(`Failed to fetch ${jsonFilename}`);\n//         }\n//         const data = await response.json();\n//         setJsonData(data);\n//       } catch (err) {\n//         console.error(\"Error fetching JSON:\", err);\n//         setError(err.message);\n//       }\n//     };\n\n//     fetchJson();\n//   }, [jsonFilename]);\n\n//   return (\n//     <div className=\"bg-white shadow-lg rounded-lg p-6 mt-4 w-full max-w-3xl\">\n//       <h2 className=\"text-2xl font-bold mb-4 text-blue-800 text-center\">\n//         Processed JSON File\n//       </h2>\n//       {error ? (\n//         <p className=\"text-red-500\">{error}</p>\n//       ) : jsonData ? (\n//         <pre className=\"bg-gray-100 p-4 rounded-lg overflow-auto text-sm\">\n//           {JSON.stringify(jsonData, null, 2)}\n//         </pre>\n//       ) : (\n//         <p className=\"text-gray-500 text-sm\">Loading...</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default JsonDisplay;\n\nimport React, { useEffect, useState } from \"react\";\n\nuseEffect(() => {\n  const fetchJson = async () => {\n    if (!jsonFilename) {\n      setError(\"No JSON filename provided\");\n      return;\n    }\n\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/public/${jsonFilename}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch ${jsonFilename}`);\n      }\n      const data = await response.json();\n      setJsonData(data);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error fetching JSON:\", err);\n      setError(err.message);\n    }\n  };\n\n  fetchJson();\n}, [jsonFilename]);\n\n\nexport default JsonDisplay;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElDD,SAAS,CAAC,MAAM;EACd,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAACC,YAAY,EAAE;MACjBC,QAAQ,CAAC,2BAA2B,CAAC;MACrC;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgCH,YAAY,EAAE,CAAC;MAC5E,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,mBAAmBL,YAAY,EAAE,CAAC;MACpD;MACA,MAAMM,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCC,WAAW,CAACF,IAAI,CAAC;MACjBL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;MAC1CR,QAAQ,CAACQ,GAAG,CAACG,OAAO,CAAC;IACvB;EACF,CAAC;EAEDb,SAAS,CAAC,CAAC;AACb,CAAC,EAAE,CAACC,YAAY,CAAC,CAAC;AAGlB,eAAea,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}