{"ast":null,"code":"var _jsxFileName = \"/home/bipasha/Desktop/research/Data_Viz_Beads/Subspace/code/my-react-app/src/GraphBase.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport { renderNormalView } from \"./NormalView\";\nimport { renderProportionalView } from \"./ProportionalView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HierarchicalGraph = ({\n  jsonData,\n  labelsData,\n  setHoveredCoordinates,\n  ringVisibility\n}) => {\n  _s();\n  const graphRef = useRef(null);\n  const [viewMode, setViewMode] = useState(\"normal\");\n  useEffect(() => {\n    if (!jsonData || typeof jsonData !== \"object\" || Object.keys(jsonData).length === 0) {\n      console.error(\"Invalid or empty jsonData:\", jsonData);\n      return;\n    }\n    if (!labelsData || typeof labelsData !== \"object\") {\n      console.error(\"Invalid labelsData:\", labelsData);\n      return;\n    }\n    const svg = d3.select(graphRef.current);\n    svg.selectAll(\"*\").remove();\n    const width = 800;\n    const height = 800;\n    const margin = 20;\n    const maxRadius = Math.min(width, height) / 2 - margin;\n    const g = svg.attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"position\", \"absolute\").style(\"visibility\", \"hidden\").style(\"background-color\", \"rgba(0, 0, 0, 0.7)\").style(\"color\", \"white\").style(\"padding\", \"5px\").style(\"border-radius\", \"4px\").style(\"font-size\", \"12px\");\n    const getLabelColor = pointId => {\n      if (!labelsData || !labelsData.labels) return \"gray\";\n      for (const label of Object.keys(labelsData.labels)) {\n        const pointList = labelsData.labels[label];\n        if (Array.isArray(pointList) && pointList.includes(Number(pointId))) {\n          return d3.scaleOrdinal(d3.schemeCategory10)(label);\n        }\n      }\n      return \"gray\";\n    };\n    const getRingColor = index => {\n      const totalRings = Object.keys(jsonData).length;\n      const colorScaleInd = d3.scaleSequential(d3.interpolatePlasma).domain([totalRings, 0]);\n      return d3.color(colorScaleInd(index));\n    };\n    const getSectorColor = (index, sectorIndex) => {\n      const baseColor = d3.hsl(getRingColor(index));\n      const isPositive = sectorIndex % 2 === 0;\n      return d3.hsl(baseColor.h, baseColor.s, isPositive ? 0.75 : 0.35).toString();\n    };\n    const subspaces = Object.keys(jsonData).sort((a, b) => a.length - b.length);\n    const pointsData = subspaces.map(key => ({\n      key,\n      points: jsonData[key] || [],\n      dimensions: key.length,\n      subspaceId: key\n    }));\n    const ringLabels = subspaces.map((_, i) => String.fromCharCode(65 + i));\n    const pointPositions = {};\n    const renderPoints = (index, innerRadius, outerRadius, anglesOrSectors) => {\n      const isProportional = viewMode === \"proportional\";\n      const sectors = isProportional ? anglesOrSectors.length : anglesOrSectors;\n      const angles = isProportional ? anglesOrSectors : Array(sectors).fill(2 * Math.PI / sectors);\n      let currentAngle = Math.PI / 2;\n      pointsData[index].points.forEach((point, i) => {\n        const pointData = Object.entries(point).filter(([key]) => key !== \"Point_ID\");\n        const bitVector = pointData.map(([_, coord]) => coord >= 0 ? 1 : 0).join(\"\");\n        const bitVectorIndex = Math.min(parseInt(bitVector, 2), sectors - 1);\n        const startAngle = isProportional ? currentAngle + angles.slice(0, bitVectorIndex).reduce((a, b) => a + b, 0) : 2 * Math.PI * bitVectorIndex / sectors;\n        const angleWidth = isProportional ? angles[bitVectorIndex] : 2 * Math.PI / sectors;\n        const centerAngle = startAngle + angleWidth / 2;\n        const overlapRadius = innerRadius + 0.9 * (outerRadius - innerRadius) * (i % pointsData[index].points.length) / pointsData[index].points.length;\n        const x = overlapRadius * Math.cos(centerAngle);\n        const y = overlapRadius * Math.sin(centerAngle);\n        point.Point_ID.forEach(id => {\n          if (!pointPositions[id]) pointPositions[id] = [];\n          pointPositions[id].push({\n            x,\n            y,\n            point,\n            subspaceId: pointsData[index].key\n          });\n        });\n        g.append(\"circle\").attr(\"cx\", x).attr(\"cy\", y).attr(\"r\", 3).attr(\"fill\", \"black\").attr(\"stroke\", \"white\").attr(\"stroke-width\", 0.5).style(\"pointer-events\", \"visible\").on(\"mouseover\", event => {\n          const pointIds = point.Point_ID.join(\", \");\n          const associatedLabels = Object.entries(labelsData.labels || {}).filter(([_, pointList]) => point.Point_ID.some(id => pointList.includes(Number(id)))).map(([label]) => label);\n          const labelText = associatedLabels.length > 0 ? associatedLabels.join(\", \") : \"No Label\";\n          tooltip.style(\"visibility\", \"visible\").html(`Point_IDs: ${pointIds}<br>Coordinates: (${x.toFixed(2)}, ${y.toFixed(2)})<br>Subspace: ${pointsData[index].key}<br>Label: ${labelText}`);\n          setHoveredCoordinates({\n            ...point,\n            label: labelText\n          });\n        }).on(\"mousemove\", event => {\n          tooltip.style(\"top\", event.pageY + 10 + \"px\").style(\"left\", event.pageX + 10 + \"px\");\n        }).on(\"mouseout\", () => {\n          tooltip.style(\"visibility\", \"hidden\");\n          setHoveredCoordinates(null);\n        });\n      });\n    };\n    if (viewMode === \"normal\") {\n      renderNormalView({\n        g,\n        subspaces,\n        ringVisibility,\n        maxRadius,\n        ringLabels,\n        pointsData,\n        getSectorColor,\n        renderPoints\n      });\n    } else {\n      renderProportionalView({\n        g,\n        subspaces,\n        ringVisibility,\n        maxRadius,\n        ringLabels,\n        pointsData,\n        getSectorColor,\n        renderPoints\n      });\n    }\n    Object.entries(pointPositions).forEach(([pointId, positions]) => {\n      if (positions.length > 1) {\n        for (let i = 0; i < positions.length - 1; i++) {\n          g.append(\"line\").attr(\"x1\", positions[i].x).attr(\"y1\", positions[i].y).attr(\"x2\", positions[i + 1].x).attr(\"y2\", positions[i + 1].y).attr(\"stroke\", getLabelColor(pointId)).attr(\"stroke-width\", 1.5).attr(\"stroke-opacity\", 0.9).style(\"cursor\", \"pointer\").on(\"mouseover\", () => tooltip.style(\"visibility\", \"visible\").html(`Connection: Point_ID ${pointId}`)).on(\"mousemove\", event => tooltip.style(\"top\", event.pageY + 10 + \"px\").style(\"left\", event.pageX + 10 + \"px\")).on(\"mouseout\", () => tooltip.style(\"visibility\", \"hidden\"));\n        }\n      }\n    });\n    const zoom = d3.zoom().on(\"zoom\", event => g.attr(\"transform\", event.transform));\n    svg.call(zoom);\n    return () => tooltip.remove();\n  }, [jsonData, labelsData, ringVisibility, setHoveredCoordinates, viewMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setViewMode(\"normal\"),\n        style: {\n          marginRight: \"10px\",\n          padding: \"5px 10px\",\n          backgroundColor: viewMode === \"normal\" ? \"#4CAF50\" : \"#f0f0f0\",\n          color: viewMode === \"normal\" ? \"white\" : \"black\"\n        },\n        children: \"Normal View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setViewMode(\"proportional\"),\n        style: {\n          padding: \"5px 10px\",\n          backgroundColor: viewMode === \"proportional\" ? \"#4CAF50\" : \"#f0f0f0\",\n          color: viewMode === \"proportional\" ? \"white\" : \"black\"\n        },\n        children: \"Proportional View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: graphRef,\n      style: {\n        width: \"100%\",\n        height: \"800px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 9\n  }, this);\n};\n_s(HierarchicalGraph, \"CVuPsSNXbeMAdW5BbQwuQu7RE7g=\");\n_c = HierarchicalGraph;\nexport default HierarchicalGraph;\nvar _c;\n$RefreshReg$(_c, \"HierarchicalGraph\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","renderNormalView","renderProportionalView","jsxDEV","_jsxDEV","HierarchicalGraph","jsonData","labelsData","setHoveredCoordinates","ringVisibility","_s","graphRef","viewMode","setViewMode","Object","keys","length","console","error","svg","select","current","selectAll","remove","width","height","margin","maxRadius","Math","min","g","attr","append","tooltip","style","getLabelColor","pointId","labels","label","pointList","Array","isArray","includes","Number","scaleOrdinal","schemeCategory10","getRingColor","index","totalRings","colorScaleInd","scaleSequential","interpolatePlasma","domain","color","getSectorColor","sectorIndex","baseColor","hsl","isPositive","h","s","toString","subspaces","sort","a","b","pointsData","map","key","points","dimensions","subspaceId","ringLabels","_","i","String","fromCharCode","pointPositions","renderPoints","innerRadius","outerRadius","anglesOrSectors","isProportional","sectors","angles","fill","PI","currentAngle","forEach","point","pointData","entries","filter","bitVector","coord","join","bitVectorIndex","parseInt","startAngle","slice","reduce","angleWidth","centerAngle","overlapRadius","x","cos","y","sin","Point_ID","id","push","on","event","pointIds","associatedLabels","some","labelText","html","toFixed","pageY","pageX","positions","zoom","transform","call","children","marginBottom","onClick","marginRight","padding","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/home/bipasha/Desktop/research/Data_Viz_Beads/Subspace/code/my-react-app/src/GraphBase.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport { renderNormalView } from \"./NormalView\";\nimport { renderProportionalView } from \"./ProportionalView\";\n\nconst HierarchicalGraph = ({ jsonData, labelsData, setHoveredCoordinates, ringVisibility }) => {\n    const graphRef = useRef(null);\n    const [viewMode, setViewMode] = useState(\"normal\");\n\n    useEffect(() => {\n        if (!jsonData || typeof jsonData !== \"object\" || Object.keys(jsonData).length === 0) {\n            console.error(\"Invalid or empty jsonData:\", jsonData);\n            return;\n        }\n        if (!labelsData || typeof labelsData !== \"object\") {\n            console.error(\"Invalid labelsData:\", labelsData);\n            return;\n        }\n\n        const svg = d3.select(graphRef.current);\n        svg.selectAll(\"*\").remove();\n\n        const width = 800;\n        const height = 800;\n        const margin = 20;\n        const maxRadius = Math.min(width, height) / 2 - margin;\n\n        const g = svg\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .append(\"g\")\n            .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n\n        const tooltip = d3\n            .select(\"body\")\n            .append(\"div\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"position\", \"absolute\")\n            .style(\"visibility\", \"hidden\")\n            .style(\"background-color\", \"rgba(0, 0, 0, 0.7)\")\n            .style(\"color\", \"white\")\n            .style(\"padding\", \"5px\")\n            .style(\"border-radius\", \"4px\")\n            .style(\"font-size\", \"12px\");\n\n        const getLabelColor = (pointId) => {\n            if (!labelsData || !labelsData.labels) return \"gray\";\n            for (const label of Object.keys(labelsData.labels)) {\n                const pointList = labelsData.labels[label];\n                if (Array.isArray(pointList) && pointList.includes(Number(pointId))) {\n                    return d3.scaleOrdinal(d3.schemeCategory10)(label);\n                }\n            }\n            return \"gray\";\n        };\n\n        const getRingColor = (index) => {\n            const totalRings = Object.keys(jsonData).length;\n            const colorScaleInd = d3.scaleSequential(d3.interpolatePlasma).domain([totalRings, 0]);\n            return d3.color(colorScaleInd(index));\n        };\n\n        const getSectorColor = (index, sectorIndex) => {\n            const baseColor = d3.hsl(getRingColor(index));\n            const isPositive = sectorIndex % 2 === 0;\n            return d3.hsl(baseColor.h, baseColor.s, isPositive ? 0.75 : 0.35).toString();\n        };\n\n        const subspaces = Object.keys(jsonData).sort((a, b) => a.length - b.length);\n        const pointsData = subspaces.map((key) => ({\n            key,\n            points: jsonData[key] || [],\n            dimensions: key.length,\n            subspaceId: key,\n        }));\n        const ringLabels = subspaces.map((_, i) => String.fromCharCode(65 + i));\n        const pointPositions = {};\n\n        const renderPoints = (index, innerRadius, outerRadius, anglesOrSectors) => {\n            const isProportional = viewMode === \"proportional\";\n            const sectors = isProportional ? anglesOrSectors.length : anglesOrSectors;\n            const angles = isProportional ? anglesOrSectors : Array(sectors).fill(2 * Math.PI / sectors);\n            let currentAngle = Math.PI / 2;\n\n            pointsData[index].points.forEach((point, i) => {\n                const pointData = Object.entries(point).filter(([key]) => key !== \"Point_ID\");\n                const bitVector = pointData.map(([_, coord]) => (coord >= 0 ? 1 : 0)).join(\"\");\n                const bitVectorIndex = Math.min(parseInt(bitVector, 2), sectors - 1);\n\n                const startAngle = isProportional\n                    ? currentAngle + angles.slice(0, bitVectorIndex).reduce((a, b) => a + b, 0)\n                    : (2 * Math.PI * bitVectorIndex) / sectors;\n                const angleWidth = isProportional ? angles[bitVectorIndex] : (2 * Math.PI / sectors);\n                const centerAngle = startAngle + angleWidth / 2;\n\n                const overlapRadius =\n                    innerRadius +\n                    (0.9 * (outerRadius - innerRadius) * (i % pointsData[index].points.length)) /\n                    pointsData[index].points.length;\n                const x = overlapRadius * Math.cos(centerAngle);\n                const y = overlapRadius * Math.sin(centerAngle);\n\n                point.Point_ID.forEach((id) => {\n                    if (!pointPositions[id]) pointPositions[id] = [];\n                    pointPositions[id].push({ x, y, point, subspaceId: pointsData[index].key });\n                });\n\n                g.append(\"circle\")\n                    .attr(\"cx\", x)\n                    .attr(\"cy\", y)\n                    .attr(\"r\", 3)\n                    .attr(\"fill\", \"black\")\n                    .attr(\"stroke\", \"white\")\n                    .attr(\"stroke-width\", 0.5)\n                    .style(\"pointer-events\", \"visible\")\n                    .on(\"mouseover\", (event) => {\n                        const pointIds = point.Point_ID.join(\", \");\n                        const associatedLabels = Object.entries(labelsData.labels || {})\n                            .filter(([_, pointList]) => point.Point_ID.some((id) => pointList.includes(Number(id))))\n                            .map(([label]) => label);\n                        const labelText = associatedLabels.length > 0 ? associatedLabels.join(\", \") : \"No Label\";\n\n                        tooltip\n                            .style(\"visibility\", \"visible\")\n                            .html(\n                                `Point_IDs: ${pointIds}<br>Coordinates: (${x.toFixed(2)}, ${y.toFixed(2)})<br>Subspace: ${pointsData[index].key}<br>Label: ${labelText}`\n                            );\n                        setHoveredCoordinates({ ...point, label: labelText });\n                    })\n                    .on(\"mousemove\", (event) => {\n                        tooltip.style(\"top\", event.pageY + 10 + \"px\").style(\"left\", event.pageX + 10 + \"px\");\n                    })\n                    .on(\"mouseout\", () => {\n                        tooltip.style(\"visibility\", \"hidden\");\n                        setHoveredCoordinates(null);\n                    });\n            });\n        };\n\n        if (viewMode === \"normal\") {\n            renderNormalView({\n                g,\n                subspaces,\n                ringVisibility,\n                maxRadius,\n                ringLabels,\n                pointsData,\n                getSectorColor,\n                renderPoints,\n            });\n        } else {\n            renderProportionalView({\n                g,\n                subspaces,\n                ringVisibility,\n                maxRadius,\n                ringLabels,\n                pointsData,\n                getSectorColor,\n                renderPoints,\n            });\n        }\n\n        Object.entries(pointPositions).forEach(([pointId, positions]) => {\n            if (positions.length > 1) {\n                for (let i = 0; i < positions.length - 1; i++) {\n                    g.append(\"line\")\n                        .attr(\"x1\", positions[i].x)\n                        .attr(\"y1\", positions[i].y)\n                        .attr(\"x2\", positions[i + 1].x)\n                        .attr(\"y2\", positions[i + 1].y)\n                        .attr(\"stroke\", getLabelColor(pointId))\n                        .attr(\"stroke-width\", 1.5)\n                        .attr(\"stroke-opacity\", 0.9)\n                        .style(\"cursor\", \"pointer\")\n                        .on(\"mouseover\", () => tooltip.style(\"visibility\", \"visible\").html(`Connection: Point_ID ${pointId}`))\n                        .on(\"mousemove\", (event) => tooltip.style(\"top\", event.pageY + 10 + \"px\").style(\"left\", event.pageX + 10 + \"px\"))\n                        .on(\"mouseout\", () => tooltip.style(\"visibility\", \"hidden\"));\n                }\n            }\n        });\n\n        const zoom = d3.zoom().on(\"zoom\", (event) => g.attr(\"transform\", event.transform));\n        svg.call(zoom);\n\n        return () => tooltip.remove();\n    }, [jsonData, labelsData, ringVisibility, setHoveredCoordinates, viewMode]);\n\n    return (\n        <div style={{ width: \"100%\", height: \"100%\" }}>\n            <div style={{ marginBottom: \"10px\" }}>\n                <button\n                    onClick={() => setViewMode(\"normal\")}\n                    style={{\n                        marginRight: \"10px\",\n                        padding: \"5px 10px\",\n                        backgroundColor: viewMode === \"normal\" ? \"#4CAF50\" : \"#f0f0f0\",\n                        color: viewMode === \"normal\" ? \"white\" : \"black\",\n                    }}\n                >\n                    Normal View\n                </button>\n                <button\n                    onClick={() => setViewMode(\"proportional\")}\n                    style={{\n                        padding: \"5px 10px\",\n                        backgroundColor: viewMode === \"proportional\" ? \"#4CAF50\" : \"#f0f0f0\",\n                        color: viewMode === \"proportional\" ? \"white\" : \"black\",\n                    }}\n                >\n                    Proportional View\n                </button>\n            </div>\n            <svg ref={graphRef} style={{ width: \"100%\", height: \"800px\" }}></svg>\n        </div>\n    );\n};\n\nexport default HierarchicalGraph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}