{"ast":null,"code":"var _jsxFileName = \"/home/bipasha/Desktop/research/Data_Viz_Beads/Subspace/code/my-react-app/src/ScatterPlot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScatterPlotMatrix = ({\n  data\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  useEffect(() => {\n    if (!data || !data.points || !Array.isArray(data.points) || data.points.length === 0) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    // Get all feature names\n    const features = Object.keys(data.points[0].features);\n    const n = features.length;\n    const size = 150; // Size of each scatter plot\n    const padding = 20;\n    const totalSize = n * (size + padding);\n    svg.attr(\"width\", totalSize + padding).attr(\"height\", totalSize + padding);\n    const colorScale = d3.scaleOrdinal(d3.schemeCategory10).domain([...new Set(data.points.map(d => d.actual_label))]);\n\n    // Create scales for each feature\n    const scales = features.map(feat => {\n      return d3.scaleLinear().domain(d3.extent(data.points, d => d.features[feat])).range([padding, size]);\n    });\n\n    // Create the matrix of scatter plots\n    features.forEach((featX, i) => {\n      features.forEach((featY, j) => {\n        const g = svg.append(\"g\").attr(\"transform\", `translate(${i * (size + padding)}, ${j * (size + padding)})`);\n\n        // Add axes\n        if (j === n - 1) {\n          g.append(\"g\").attr(\"transform\", `translate(0, ${size})`).call(d3.axisBottom(scales[i]).ticks(3));\n        }\n        if (i === 0) {\n          g.append(\"g\").call(d3.axisLeft(scales[j]).ticks(3));\n        }\n\n        // Add labels\n        if (j === 0) {\n          g.append(\"text\").attr(\"x\", size / 2).attr(\"y\", -5).attr(\"text-anchor\", \"middle\").text(featX);\n        }\n        if (i === 0) {\n          g.append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"x\", -size / 2).attr(\"y\", -padding + 5).attr(\"text-anchor\", \"middle\").text(featY);\n        }\n\n        // Add points (skip if same feature unless on diagonal)\n        if (i === j) {\n          // On diagonal, show histogram or feature name\n          g.append(\"text\").attr(\"x\", size / 2).attr(\"y\", size / 2).attr(\"text-anchor\", \"middle\").attr(\"dominant-baseline\", \"middle\").text(featX);\n        } else {\n          g.selectAll(\"circle\").data(data.points).enter().append(\"circle\").attr(\"cx\", d => scales[i](d.features[featX])).attr(\"cy\", d => scales[j](d.features[featY])).attr(\"r\", 3).attr(\"fill\", d => colorScale(d.actual_label)).attr(\"opacity\", 0.7).append(\"title\").text(d => `ID: ${d.Point_ID}\\nActual: ${d.actual_label}\\nPredicted: ${d.predicted_label}`);\n        }\n      });\n    });\n\n    // Add legend\n    const legend = svg.append(\"g\").attr(\"transform\", `translate(${totalSize - 100}, ${padding})`);\n    const uniqueLabels = [...new Set(data.points.map(d => d.actual_label))];\n    uniqueLabels.forEach((label, i) => {\n      const legendRow = legend.append(\"g\").attr(\"transform\", `translate(0, ${i * 20})`);\n      legendRow.append(\"rect\").attr(\"width\", 10).attr(\"height\", 10).attr(\"fill\", colorScale(label));\n      legendRow.append(\"text\").attr(\"x\", 15).attr(\"y\", 10).attr(\"fill\", \"black\").text(label);\n    });\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      overflow: \"auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n_s(ScatterPlotMatrix, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = ScatterPlotMatrix;\nexport default ScatterPlotMatrix;\nvar _c;\n$RefreshReg$(_c, \"ScatterPlotMatrix\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","ScatterPlotMatrix","data","_s","svgRef","points","Array","isArray","length","svg","select","current","selectAll","remove","features","Object","keys","n","size","padding","totalSize","attr","colorScale","scaleOrdinal","schemeCategory10","domain","Set","map","d","actual_label","scales","feat","scaleLinear","extent","range","forEach","featX","i","featY","j","g","append","call","axisBottom","ticks","axisLeft","text","enter","Point_ID","predicted_label","legend","uniqueLabels","label","legendRow","style","width","overflow","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bipasha/Desktop/research/Data_Viz_Beads/Subspace/code/my-react-app/src/ScatterPlot.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\n\nconst ScatterPlotMatrix = ({ data }) => {\n    const svgRef = useRef(null);\n\n    useEffect(() => {\n        if (!data || !data.points || !Array.isArray(data.points) || data.points.length === 0) return;\n\n        const svg = d3.select(svgRef.current);\n        svg.selectAll(\"*\").remove();\n\n        // Get all feature names\n        const features = Object.keys(data.points[0].features);\n        const n = features.length;\n\n        const size = 150; // Size of each scatter plot\n        const padding = 20;\n        const totalSize = n * (size + padding);\n\n        svg.attr(\"width\", totalSize + padding)\n            .attr(\"height\", totalSize + padding);\n\n        const colorScale = d3\n            .scaleOrdinal(d3.schemeCategory10)\n            .domain([...new Set(data.points.map(d => d.actual_label))]);\n\n        // Create scales for each feature\n        const scales = features.map(feat => {\n            return d3.scaleLinear()\n                .domain(d3.extent(data.points, d => d.features[feat]))\n                .range([padding, size]);\n        });\n\n        // Create the matrix of scatter plots\n        features.forEach((featX, i) => {\n            features.forEach((featY, j) => {\n                const g = svg.append(\"g\")\n                    .attr(\"transform\", `translate(${i * (size + padding)}, ${j * (size + padding)})`);\n\n                // Add axes\n                if (j === n - 1) {\n                    g.append(\"g\")\n                        .attr(\"transform\", `translate(0, ${size})`)\n                        .call(d3.axisBottom(scales[i]).ticks(3));\n                }\n                if (i === 0) {\n                    g.append(\"g\")\n                        .call(d3.axisLeft(scales[j]).ticks(3));\n                }\n\n                // Add labels\n                if (j === 0) {\n                    g.append(\"text\")\n                        .attr(\"x\", size / 2)\n                        .attr(\"y\", -5)\n                        .attr(\"text-anchor\", \"middle\")\n                        .text(featX);\n                }\n                if (i === 0) {\n                    g.append(\"text\")\n                        .attr(\"transform\", \"rotate(-90)\")\n                        .attr(\"x\", -size / 2)\n                        .attr(\"y\", -padding + 5)\n                        .attr(\"text-anchor\", \"middle\")\n                        .text(featY);\n                }\n\n                // Add points (skip if same feature unless on diagonal)\n                if (i === j) {\n                    // On diagonal, show histogram or feature name\n                    g.append(\"text\")\n                        .attr(\"x\", size / 2)\n                        .attr(\"y\", size / 2)\n                        .attr(\"text-anchor\", \"middle\")\n                        .attr(\"dominant-baseline\", \"middle\")\n                        .text(featX);\n                } else {\n                    g.selectAll(\"circle\")\n                        .data(data.points)\n                        .enter()\n                        .append(\"circle\")\n                        .attr(\"cx\", d => scales[i](d.features[featX]))\n                        .attr(\"cy\", d => scales[j](d.features[featY]))\n                        .attr(\"r\", 3)\n                        .attr(\"fill\", d => colorScale(d.actual_label))\n                        .attr(\"opacity\", 0.7)\n                        .append(\"title\")\n                        .text(d => `ID: ${d.Point_ID}\\nActual: ${d.actual_label}\\nPredicted: ${d.predicted_label}`);\n                }\n            });\n        });\n\n        // Add legend\n        const legend = svg.append(\"g\")\n            .attr(\"transform\", `translate(${totalSize - 100}, ${padding})`);\n\n        const uniqueLabels = [...new Set(data.points.map(d => d.actual_label))];\n        uniqueLabels.forEach((label, i) => {\n            const legendRow = legend.append(\"g\")\n                .attr(\"transform\", `translate(0, ${i * 20})`);\n\n            legendRow.append(\"rect\")\n                .attr(\"width\", 10)\n                .attr(\"height\", 10)\n                .attr(\"fill\", colorScale(label));\n\n            legendRow.append(\"text\")\n                .attr(\"x\", 15)\n                .attr(\"y\", 10)\n                .attr(\"fill\", \"black\")\n                .text(label);\n        });\n\n    }, [data]);\n\n    return (\n        <div style={{ width: \"100%\", overflow: \"auto\" }}>\n            <svg ref={svgRef}></svg>\n        </div>\n    );\n};\n\nexport default ScatterPlotMatrix;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}