{"ast":null,"code":"var _jsxFileName = \"/home/bipasha/Desktop/research/Data_Viz_Beads/Subspace/code/my-react-app/src/JsonDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction distributePointsMax(angleStart, angleEnd, maxDistance) {\n  // Handle wraparound if angleEnd < angleStart\n  if (angleEnd < angleStart) {\n    angleEnd += 360;\n  }\n\n  // Calculate the angular span of the sector\n  const angleSpan = angleEnd - angleStart;\n\n  // Calculate how many points fit in the sector\n  const numPoints = Math.floor(angleSpan / maxDistance);\n\n  // Array to hold the points\n  const points = [];\n  for (let i = 0; i < numPoints; i++) {\n    // Calculate the angle for each point, starting from angleStart\n    let angle = angleStart + i * maxDistance;\n\n    // Handle wrapping around 360°\n    if (angle >= 360) {\n      angle -= 360;\n    }\n    points.push(angle);\n  }\n  return points;\n}\nconst HierarchicalGraph = ({\n  jsonData,\n  setHoveredCoordinates\n}) => {\n  _s();\n  const graphRef = useRef(null);\n  useEffect(() => {\n    if (!jsonData || Object.keys(jsonData).length === 0) return;\n    const subspaces = Object.keys(jsonData);\n    subspaces.sort((a, b) => a.length - b.length);\n    const pointsData = subspaces.map(key => ({\n      key,\n      points: jsonData[key],\n      dimensions: key.length,\n      subspaceId: key\n    }));\n    const svg = d3.select(graphRef.current);\n    const width = 800;\n    const height = 800;\n    const margin = 20;\n    svg.selectAll(\"*\").remove();\n    const maxRadius = Math.min(width, height) / 2 - margin;\n    const g = svg.attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n    const pointPositions = {};\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"position\", \"absolute\").style(\"visibility\", \"hidden\").style(\"background-color\", \"rgba(0, 0, 0, 0.7)\").style(\"color\", \"white\").style(\"padding\", \"5px\").style(\"border-radius\", \"4px\").style(\"font-size\", \"12px\");\n    pointsData.forEach((subspace, index) => {\n      const innerRadius = index / subspaces.length * maxRadius;\n      const outerRadius = (index + 1) / subspaces.length * maxRadius;\n      const sectors = 2 ** (index + 1);\n      const colorScale = d3.scaleOrdinal().range([\"#FFD700\", \"#FF69B4\", \"#33B5E5\", \"#32CD32\", \"#FF4500\", \"#8A2BE2\", \"#00CED1\", \"#DC143C\", \"#1E90FF\", \"#FF8C00\", \"#ADFF2F\", \"#C71585\", \"#20B2AA\", \"#8B4513\", \"#7B68EE\"]);\n      const subspaceColor = colorScale((index + 1) % colorScale.range().length);\n      g.append(\"circle\").attr(\"r\", outerRadius).attr(\"stroke\", \"black\").attr(\"fill\", subspaceColor).attr(\"fill-opacity\", 0.2).attr(\"stroke-width\", 0.25).style(\"pointer-events\", \"none\");\n      for (let i = 0; i < sectors; i++) {\n        const angle = 2 * Math.PI * i / sectors;\n        const x1 = outerRadius * Math.cos(angle);\n        const y1 = outerRadius * Math.sin(angle);\n        g.append(\"line\").attr(\"x1\", 0).attr(\"y1\", 0).attr(\"x2\", x1).attr(\"y2\", y1).attr(\"stroke\", \"black\").attr(\"stroke-width\", 0.25).style(\"pointer-events\", \"none\");\n      }\n      subspace.points.forEach((point, i) => {\n        const pointData = Object.entries(point).filter(([key]) => key !== \"Point_ID\");\n        const bitVector = pointData.map(([key, coord]) => coord >= 0 ? 1 : 0).join(\"\");\n        const minRadius = innerRadius;\n        const maxRadius = outerRadius;\n        const randomRadius = minRadius + Math.random() * (maxRadius - minRadius);\n        const bitVectorIndex = parseInt(bitVector, 2);\n        const angleStart = 2 * Math.PI * bitVectorIndex / sectors;\n        const angleEnd = 2 * Math.PI * (bitVectorIndex + 1) / sectors;\n        // const randomAngle =angleStart + Math.random() * (angleEnd - angleStart);\n        // const x = randomRadius * Math.cos(randomAngle);\n        // const y = randomRadius * Math.sin(randomAngle);\n        const centerAngle = distributePoints(angleStart, angleEnd, 1);\n        // const centerAngle =angleEnd- ((angleStart + angleEnd) / 2)/i;\n\n        const totalPoints = subspace.points.length;\n        const clusterFactor = 0.86;\n        const overlapRadius = innerRadius + clusterFactor * (outerRadius - innerRadius) * (i % totalPoints) / totalPoints;\n        const x = overlapRadius * Math.cos(centerAngle);\n        const y = overlapRadius * Math.sin(centerAngle);\n        point.Point_ID.forEach(id => {\n          if (!pointPositions[id]) {\n            pointPositions[id] = [];\n          }\n          pointPositions[id].push({\n            x,\n            y,\n            point,\n            subspaceId: subspace.key\n          });\n        });\n        g.append(\"circle\").attr(\"cx\", x).attr(\"cy\", y).attr(\"r\", 3).attr(\"fill\", \"black\").attr(\"stroke\", \"white\").attr(\"stroke-width\", 0.5).style(\"pointer-events\", \"visible\").on(\"mouseover\", event => {\n          const pointIds = point.Point_ID.join(\", \");\n          tooltip.style(\"visibility\", \"visible\").html(`Point_IDs: ${pointIds}<br>Coordinates: (${x.toFixed(2)}, ${y.toFixed(2)})<br>Subspace: ${subspace.key}`);\n          setHoveredCoordinates(point);\n        }).on(\"mousemove\", event => {\n          tooltip.style(\"top\", event.pageY + 10 + \"px\").style(\"left\", event.pageX + 10 + \"px\");\n        }).on(\"mouseout\", () => {\n          tooltip.style(\"visibility\", \"hidden\");\n          setHoveredCoordinates(null);\n        });\n      });\n    });\n    Object.entries(pointPositions).forEach(([pointId, positions]) => {\n      if (positions.length > 1) {\n        for (let i = 0; i < positions.length - 1; i++) {\n          g.append(\"line\").attr(\"x1\", positions[i].x).attr(\"y1\", positions[i].y).attr(\"x2\", positions[i + 1].x).attr(\"y2\", positions[i + 1].y).attr(\"stroke\", \"red\").attr(\"stroke-width\", 0.3).on(\"mouseover\", event => {\n            tooltip.style(\"visibility\", \"visible\").html(`Connection: Point_ID ${pointId}`);\n          }).on(\"mousemove\", event => {\n            tooltip.style(\"top\", event.pageY + 10 + \"px\").style(\"left\", event.pageX + 10 + \"px\");\n          }).on(\"mouseout\", () => {\n            tooltip.style(\"visibility\", \"hidden\");\n          });\n        }\n      }\n    });\n    const zoom = d3.zoom().on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n    });\n    svg.call(zoom);\n  }, [jsonData, setHoveredCoordinates]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: graphRef,\n    style: {\n      width: \"800px\",\n      height: \"800px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 10\n  }, this);\n};\n_s(HierarchicalGraph, \"XNG/roOlNWxTF7ymftfdirhS32A=\");\n_c = HierarchicalGraph;\nexport default HierarchicalGraph;\nvar _c;\n$RefreshReg$(_c, \"HierarchicalGraph\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","distributePointsMax","angleStart","angleEnd","maxDistance","angleSpan","numPoints","Math","floor","points","i","angle","push","HierarchicalGraph","jsonData","setHoveredCoordinates","_s","graphRef","Object","keys","length","subspaces","sort","a","b","pointsData","map","key","dimensions","subspaceId","svg","select","current","width","height","margin","selectAll","remove","maxRadius","min","g","attr","append","pointPositions","tooltip","style","forEach","subspace","index","innerRadius","outerRadius","sectors","colorScale","scaleOrdinal","range","subspaceColor","PI","x1","cos","y1","sin","point","pointData","entries","filter","bitVector","coord","join","minRadius","randomRadius","random","bitVectorIndex","parseInt","centerAngle","distributePoints","totalPoints","clusterFactor","overlapRadius","x","y","Point_ID","id","on","event","pointIds","html","toFixed","pageY","pageX","pointId","positions","zoom","transform","call","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bipasha/Desktop/research/Data_Viz_Beads/Subspace/code/my-react-app/src/JsonDisplay.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\n\n\nfunction distributePointsMax(angleStart, angleEnd, maxDistance) {\n  // Handle wraparound if angleEnd < angleStart\n  if (angleEnd < angleStart) {\n    angleEnd += 360;\n  }\n\n  // Calculate the angular span of the sector\n  const angleSpan = angleEnd - angleStart;\n\n  // Calculate how many points fit in the sector\n  const numPoints = Math.floor(angleSpan / maxDistance);\n\n  // Array to hold the points\n  const points = [];\n\n  for (let i = 0; i < numPoints; i++) {\n    // Calculate the angle for each point, starting from angleStart\n    let angle = angleStart + i * maxDistance;\n\n    // Handle wrapping around 360°\n    if (angle >= 360) {\n      angle -= 360;\n    }\n\n    points.push(angle);\n  }\n\n  return points;\n}\n\nconst HierarchicalGraph = ({ jsonData, setHoveredCoordinates }) => {\n  const graphRef = useRef(null);\n\n  useEffect(() => {\n    if (!jsonData || Object.keys(jsonData).length === 0) return;\n\n    const subspaces = Object.keys(jsonData);\n    subspaces.sort((a, b) => a.length - b.length);\n\n    const pointsData = subspaces.map((key) => ({\n      key,\n      points: jsonData[key],\n      dimensions: key.length,\n      subspaceId: key,\n    }));\n\n    const svg = d3.select(graphRef.current);\n    const width = 800;\n    const height = 800;\n    const margin = 20;\n\n    svg.selectAll(\"*\").remove();\n    const maxRadius = Math.min(width, height) / 2 - margin;\n    const g = svg\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n\n    const pointPositions = {}; \n\n    const tooltip = d3\n      .select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"position\", \"absolute\")\n      .style(\"visibility\", \"hidden\")\n      .style(\"background-color\", \"rgba(0, 0, 0, 0.7)\")\n      .style(\"color\", \"white\")\n      .style(\"padding\", \"5px\")\n      .style(\"border-radius\", \"4px\")\n      .style(\"font-size\", \"12px\");\n\n    pointsData.forEach((subspace, index) => {\n      const innerRadius = (index / subspaces.length) * maxRadius;\n      const outerRadius = ((index + 1) / subspaces.length) * maxRadius;\n      const sectors = 2 ** (index + 1);\n      const colorScale = d3\n        .scaleOrdinal()\n        .range([\"#FFD700\", \n    \"#FF69B4\", \n    \"#33B5E5\", \n    \"#32CD32\", \n    \"#FF4500\", \n    \"#8A2BE2\", \n    \"#00CED1\", \n    \"#DC143C\", \n    \"#1E90FF\", \n    \"#FF8C00\", \n    \"#ADFF2F\", \n    \"#C71585\", \n    \"#20B2AA\", \n    \"#8B4513\", \n    \"#7B68EE\", \n    ]);\n      const subspaceColor = colorScale((index + 1) % colorScale.range().length);\n\n      g.append(\"circle\")\n        .attr(\"r\", outerRadius)\n        .attr(\"stroke\", \"black\")\n        .attr(\"fill\", subspaceColor)\n        .attr(\"fill-opacity\", 0.2)\n        .attr(\"stroke-width\", 0.25)\n        .style(\"pointer-events\", \"none\");\n\n      for (let i = 0; i < sectors; i++) {\n        const angle = (2 * Math.PI * i) / sectors;\n        const x1 = outerRadius * Math.cos(angle);\n        const y1 = outerRadius * Math.sin(angle);\n        g.append(\"line\")\n          .attr(\"x1\", 0)\n          .attr(\"y1\", 0)\n          .attr(\"x2\", x1)\n          .attr(\"y2\", y1)\n          .attr(\"stroke\", \"black\")\n          .attr(\"stroke-width\", 0.25)\n          .style(\"pointer-events\", \"none\");\n      }\n\n      subspace.points.forEach((point,i) => {\n        const pointData = Object.entries(point).filter(\n          ([key]) => key !== \"Point_ID\"\n        );\n        const bitVector = pointData\n          .map(([key, coord]) => (coord >= 0 ? 1 : 0))\n          .join(\"\");\n\n        const minRadius = innerRadius;\n        const maxRadius = outerRadius;\n        const randomRadius =minRadius + Math.random() * (maxRadius - minRadius);\n\n        const bitVectorIndex = parseInt(bitVector, 2);\n        const angleStart = (2 * Math.PI * bitVectorIndex) / sectors;\n        const angleEnd = (2 * Math.PI * (bitVectorIndex + 1)) / sectors;\n        // const randomAngle =angleStart + Math.random() * (angleEnd - angleStart);\n        // const x = randomRadius * Math.cos(randomAngle);\n        // const y = randomRadius * Math.sin(randomAngle);\n        const centerAngle = distributePoints(angleStart, angleEnd, 1);\n        // const centerAngle =angleEnd- ((angleStart + angleEnd) / 2)/i;\n\n        const totalPoints = subspace.points.length;\n        const clusterFactor = 0.86;\n        const overlapRadius =innerRadius + (clusterFactor * (outerRadius - innerRadius) * (i % totalPoints)) / totalPoints;\n\n        const x = overlapRadius * Math.cos(centerAngle);\n        const y = overlapRadius * Math.sin(centerAngle);\n        point.Point_ID.forEach((id) => {\n          if (!pointPositions[id]) {\n            pointPositions[id] = [];\n          }\n          pointPositions[id].push({ x, y, point, subspaceId: subspace.key });\n        });\n\n        g.append(\"circle\")\n          .attr(\"cx\", x)\n          .attr(\"cy\", y)\n          .attr(\"r\", 3)\n          .attr(\"fill\", \"black\")\n          .attr(\"stroke\", \"white\")\n          .attr(\"stroke-width\", 0.5)\n          .style(\"pointer-events\", \"visible\")\n          .on(\"mouseover\", (event) => {\n            const pointIds = point.Point_ID.join(\", \");\n            tooltip\n              .style(\"visibility\", \"visible\")\n              .html(\n                `Point_IDs: ${pointIds}<br>Coordinates: (${x.toFixed(\n                  2\n                )}, ${y.toFixed(2)})<br>Subspace: ${subspace.key}`\n              );\n            setHoveredCoordinates(point);\n          })\n          .on(\"mousemove\", (event) => {\n            tooltip\n              .style(\"top\", event.pageY + 10 + \"px\")\n              .style(\"left\", event.pageX + 10 + \"px\");\n          })\n          .on(\"mouseout\", () => {\n            tooltip.style(\"visibility\", \"hidden\");\n            setHoveredCoordinates(null);\n          });\n      });\n    });\n\n    Object.entries(pointPositions).forEach(([pointId, positions]) => {\n      if (positions.length > 1) {\n        for (let i = 0; i < positions.length - 1; i++) {\n          g.append(\"line\")\n            .attr(\"x1\", positions[i].x)\n            .attr(\"y1\", positions[i].y)\n            .attr(\"x2\", positions[i + 1].x)\n            .attr(\"y2\", positions[i + 1].y)\n            .attr(\"stroke\", \"red\")\n            .attr(\"stroke-width\", 0.3)\n            .on(\"mouseover\", (event) => {\n              tooltip\n                .style(\"visibility\", \"visible\")\n                .html(`Connection: Point_ID ${pointId}`);\n            })\n            .on(\"mousemove\", (event) => {\n              tooltip\n                .style(\"top\", event.pageY + 10 + \"px\")\n                .style(\"left\", event.pageX + 10 + \"px\");\n            })\n            .on(\"mouseout\", () => {\n              tooltip.style(\"visibility\", \"hidden\");\n            });\n        }\n      }\n    });\n\n    \n    const zoom = d3.zoom().on(\"zoom\", (event) => {\n      g.attr(\"transform\", event.transform);\n    });\n\n    svg.call(zoom);\n  }, [jsonData, setHoveredCoordinates]);\n\n  return <svg ref={graphRef} style={{ width: \"800px\", height: \"800px\" }}></svg>;\n};\n\nexport default HierarchicalGraph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}