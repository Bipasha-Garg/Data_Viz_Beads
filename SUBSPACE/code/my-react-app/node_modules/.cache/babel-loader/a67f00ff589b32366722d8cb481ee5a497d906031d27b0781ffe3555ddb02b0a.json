{"ast":null,"code":"var _jsxFileName = \"/home/bipasha/Desktop/research/Data_Viz_Beads/Subspace/code/my-react-app/src/GraphBase.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport { renderNormalView } from \"./NormalView\";\nimport { renderProportionalView } from \"./ProportionalView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HierarchicalGraph = ({\n  jsonData,\n  labelsData,\n  setHoveredCoordinates,\n  ringVisibility\n}) => {\n  _s();\n  const graphRef = useRef(null);\n  const [viewMode, setViewMode] = useState(\"normal\");\n  useEffect(() => {\n    if (!jsonData || typeof jsonData !== \"object\" || Object.keys(jsonData).length === 0) {\n      console.error(\"Invalid or empty jsonData:\", jsonData);\n      return;\n    }\n    if (!labelsData || typeof labelsData !== \"object\") {\n      console.error(\"Invalid labelsData:\", labelsData);\n      return;\n    }\n    const svg = d3.select(graphRef.current);\n    svg.selectAll(\"*\").remove();\n    const width = 800;\n    const height = 800;\n    const margin = 20;\n    const maxRadius = Math.min(width, height) / 2 - margin;\n    const g = svg.attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"position\", \"absolute\").style(\"visibility\", \"hidden\").style(\"background-color\", \"rgba(0, 0, 0, 0.7)\").style(\"color\", \"white\").style(\"padding\", \"5px\").style(\"border-radius\", \"4px\").style(\"font-size\", \"12px\");\n    const colorScale = d3.scaleOrdinal(d3.schemeCategory10).domain(Object.keys(labelsData.labels || {}));\n    const getLabelColor = pointId => {\n      if (!labelsData || !labelsData.labels) return \"gray\";\n      for (const label of Object.keys(labelsData.labels)) {\n        const pointList = labelsData.labels[label];\n        if (Array.isArray(pointList) && pointList.includes(Number(pointId))) {\n          return colorScale(label);\n        }\n      }\n      return \"gray\";\n    };\n    const getRingColor = index => {\n      const totalRings = Object.keys(jsonData).length;\n      const colorScaleInd = d3.scaleSequential(d3.interpolatePlasma).domain([totalRings, 0]);\n      return d3.color(colorScaleInd(index));\n    };\n    const getSectorColor = (index, sectorIndex) => {\n      const baseColor = d3.hsl(getRingColor(index));\n      const isPositive = sectorIndex % 2 === 0;\n      return d3.hsl(baseColor.h, baseColor.s, isPositive ? 0.75 : 0.35).toString();\n    };\n    const subspaces = Object.keys(jsonData).sort((a, b) => a.length - b.length);\n    const pointsData = subspaces.map(key => ({\n      key,\n      points: jsonData[key] || [],\n      dimensions: key.length,\n      subspaceId: key\n    }));\n    const ringLabels = subspaces.map((_, i) => String.fromCharCode(65 + i));\n    const pointPositions = {};\n    const renderPoints = (index, innerRadius, outerRadius, anglesOrSectors) => {\n      const isProportional = viewMode === \"proportional\";\n      const sectors = isProportional && anglesOrSectors ? anglesOrSectors.length : anglesOrSectors || 1; // Fallback to 1 if undefined\n      const angles = isProportional && anglesOrSectors ? anglesOrSectors : Array(sectors).fill(2 * Math.PI / sectors);\n      let currentAngle = Math.PI / 2;\n      if (!pointsData[index] || !pointsData[index].points) {\n        console.warn(`No points data for index ${index}, skipping rendering`);\n        return;\n      }\n      pointsData[index].points.forEach((point, i) => {\n        const pointData = Object.entries(point).filter(([key]) => key !== \"Point_ID\");\n        const bitVector = pointData.map(([_, coord]) => coord >= 0 ? 1 : 0).join(\"\");\n        const bitVectorIndex = Math.min(parseInt(bitVector, 2), sectors - 1);\n        const startAngle = isProportional ? currentAngle + angles.slice(0, bitVectorIndex).reduce((a, b) => a + b, 0) : 2 * Math.PI * bitVectorIndex / sectors;\n        const angleWidth = isProportional ? angles[bitVectorIndex] : 2 * Math.PI / sectors;\n        const centerAngle = startAngle + angleWidth / 2;\n        const overlapRadius = innerRadius + 0.9 * (outerRadius - innerRadius) * (i % pointsData[index].points.length) / pointsData[index].points.length;\n        const x = overlapRadius * Math.cos(centerAngle);\n        const y = overlapRadius * Math.sin(centerAngle);\n        point.Point_ID.forEach(id => {\n          if (!pointPositions[id]) pointPositions[id] = [];\n          pointPositions[id].push({\n            x,\n            y,\n            point,\n            subspaceId: pointsData[index].key\n          });\n        });\n        g.append(\"circle\").attr(\"cx\", x).attr(\"cy\", y).attr(\"r\", 3).attr(\"fill\", \"black\").attr(\"stroke\", \"white\").attr(\"stroke-width\", 0.5).style(\"pointer-events\", \"visible\").on(\"mouseover\", event => {\n          const pointIds = point.Point_ID.join(\", \");\n          const associatedLabels = Object.entries(labelsData.labels || {}).filter(([_, pointList]) => point.Point_ID.some(id => pointList.includes(Number(id)))).map(([label]) => label);\n          const labelText = associatedLabels.length > 0 ? associatedLabels.join(\", \") : \"No Label\";\n          tooltip.style(\"visibility\", \"visible\").html(`Point_IDs: ${pointIds}<br>Coordinates: (${x.toFixed(2)}, ${y.toFixed(2)})<br>Subspace: ${pointsData[index].key}<br>Label: ${labelText}`);\n          setHoveredCoordinates({\n            ...point,\n            label: labelText\n          });\n        }).on(\"mousemove\", event => {\n          tooltip.style(\"top\", event.pageY + 10 + \"px\").style(\"left\", event.pageX + 10 + \"px\");\n        }).on(\"mouseout\", () => {\n          tooltip.style(\"visibility\", \"hidden\");\n          setHoveredCoordinates(null);\n        });\n      });\n    };\n    if (viewMode === \"normal\") {\n      renderNormalView({\n        g,\n        subspaces,\n        ringVisibility,\n        maxRadius,\n        ringLabels,\n        pointsData,\n        getSectorColor,\n        renderPoints\n      });\n    } else {\n      renderProportionalView({\n        g,\n        subspaces,\n        ringVisibility,\n        maxRadius,\n        ringLabels,\n        pointsData,\n        getSectorColor,\n        renderPoints\n      });\n    }\n    Object.entries(pointPositions).forEach(([pointId, positions]) => {\n      if (positions.length > 1) {\n        for (let i = 0; i < positions.length - 1; i++) {\n          g.append(\"line\").attr(\"x1\", positions[i].x).attr(\"y1\", positions[i].y).attr(\"x2\", positions[i + 1].x).attr(\"y2\", positions[i + 1].y).attr(\"stroke\", getLabelColor(pointId)).attr(\"stroke-width\", 1.5).attr(\"stroke-opacity\", 0.9).style(\"cursor\", \"pointer\").on(\"mouseover\", () => tooltip.style(\"visibility\", \"visible\").html(`Connection: Point_ID ${pointId}`)).on(\"mousemove\", event => tooltip.style(\"top\", event.pageY + 10 + \"px\").style(\"left\", event.pageX + 10 + \"px\")).on(\"mouseout\", () => tooltip.style(\"visibility\", \"hidden\"));\n        }\n      }\n    });\n    const zoom = d3.zoom().on(\"zoom\", event => g.attr(\"transform\", event.transform));\n    svg.call(zoom);\n    return () => tooltip.remove();\n  }, [jsonData, labelsData, ringVisibility, setHoveredCoordinates, viewMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setViewMode(\"normal\"),\n        style: {\n          marginRight: \"10px\",\n          padding: \"5px 10px\",\n          backgroundColor: viewMode === \"normal\" ? \"#4CAF50\" : \"#f0f0f0\",\n          color: viewMode === \"normal\" ? \"white\" : \"black\"\n        },\n        children: \"Normal View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setViewMode(\"proportional\"),\n        style: {\n          padding: \"5px 10px\",\n          backgroundColor: viewMode === \"proportional\" ? \"#4CAF50\" : \"#f0f0f0\",\n          color: viewMode === \"proportional\" ? \"white\" : \"black\"\n        },\n        children: \"Proportional View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: graphRef,\n      style: {\n        width: \"100%\",\n        height: \"800px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 9\n  }, this);\n};\n_s(HierarchicalGraph, \"CVuPsSNXbeMAdW5BbQwuQu7RE7g=\");\n_c = HierarchicalGraph;\nexport default HierarchicalGraph;\nvar _c;\n$RefreshReg$(_c, \"HierarchicalGraph\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","renderNormalView","renderProportionalView","jsxDEV","_jsxDEV","HierarchicalGraph","jsonData","labelsData","setHoveredCoordinates","ringVisibility","_s","graphRef","viewMode","setViewMode","Object","keys","length","console","error","svg","select","current","selectAll","remove","width","height","margin","maxRadius","Math","min","g","attr","append","tooltip","style","colorScale","scaleOrdinal","schemeCategory10","domain","labels","getLabelColor","pointId","label","pointList","Array","isArray","includes","Number","getRingColor","index","totalRings","colorScaleInd","scaleSequential","interpolatePlasma","color","getSectorColor","sectorIndex","baseColor","hsl","isPositive","h","s","toString","subspaces","sort","a","b","pointsData","map","key","points","dimensions","subspaceId","ringLabels","_","i","String","fromCharCode","pointPositions","renderPoints","innerRadius","outerRadius","anglesOrSectors","isProportional","sectors","angles","fill","PI","currentAngle","warn","forEach","point","pointData","entries","filter","bitVector","coord","join","bitVectorIndex","parseInt","startAngle","slice","reduce","angleWidth","centerAngle","overlapRadius","x","cos","y","sin","Point_ID","id","push","on","event","pointIds","associatedLabels","some","labelText","html","toFixed","pageY","pageX","positions","zoom","transform","call","children","marginBottom","onClick","marginRight","padding","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/home/bipasha/Desktop/research/Data_Viz_Beads/Subspace/code/my-react-app/src/GraphBase.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport { renderNormalView } from \"./NormalView\";\nimport { renderProportionalView } from \"./ProportionalView\";\n\nconst HierarchicalGraph = ({ jsonData, labelsData, setHoveredCoordinates, ringVisibility }) => {\n    const graphRef = useRef(null);\n    const [viewMode, setViewMode] = useState(\"normal\");\n\n    useEffect(() => {\n        if (!jsonData || typeof jsonData !== \"object\" || Object.keys(jsonData).length === 0) {\n            console.error(\"Invalid or empty jsonData:\", jsonData);\n            return;\n        }\n        if (!labelsData || typeof labelsData !== \"object\") {\n            console.error(\"Invalid labelsData:\", labelsData);\n            return;\n        }\n\n        const svg = d3.select(graphRef.current);\n        svg.selectAll(\"*\").remove();\n\n        const width = 800;\n        const height = 800;\n        const margin = 20;\n        const maxRadius = Math.min(width, height) / 2 - margin;\n\n        const g = svg\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .append(\"g\")\n            .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n\n        const tooltip = d3\n            .select(\"body\")\n            .append(\"div\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"position\", \"absolute\")\n            .style(\"visibility\", \"hidden\")\n            .style(\"background-color\", \"rgba(0, 0, 0, 0.7)\")\n            .style(\"color\", \"white\")\n            .style(\"padding\", \"5px\")\n            .style(\"border-radius\", \"4px\")\n            .style(\"font-size\", \"12px\");\n\n\n        const colorScale = d3.scaleOrdinal(d3.schemeCategory10).domain(Object.keys(labelsData.labels || {}));\n        const getLabelColor = (pointId) => {\n            if (!labelsData || !labelsData.labels) return \"gray\";\n            for (const label of Object.keys(labelsData.labels)) {\n                const pointList = labelsData.labels[label];\n                if (Array.isArray(pointList) && pointList.includes(Number(pointId))) {\n                    return colorScale(label);\n                }\n            }\n            return \"gray\";\n        };\n\n        const getRingColor = (index) => {\n            const totalRings = Object.keys(jsonData).length;\n            const colorScaleInd = d3.scaleSequential(d3.interpolatePlasma).domain([totalRings, 0]);\n            return d3.color(colorScaleInd(index));\n        };\n\n        const getSectorColor = (index, sectorIndex) => {\n            const baseColor = d3.hsl(getRingColor(index));\n            const isPositive = sectorIndex % 2 === 0;\n            return d3.hsl(baseColor.h, baseColor.s, isPositive ? 0.75 : 0.35).toString();\n        };\n\n        const subspaces = Object.keys(jsonData).sort((a, b) => a.length - b.length);\n        const pointsData = subspaces.map((key) => ({\n            key,\n            points: jsonData[key] || [],\n            dimensions: key.length,\n            subspaceId: key,\n        }));\n        const ringLabels = subspaces.map((_, i) => String.fromCharCode(65 + i));\n        const pointPositions = {};\n        const renderPoints = (index, innerRadius, outerRadius, anglesOrSectors) => {\n            const isProportional = viewMode === \"proportional\";\n            const sectors = isProportional && anglesOrSectors ? anglesOrSectors.length : anglesOrSectors || 1; // Fallback to 1 if undefined\n            const angles = isProportional && anglesOrSectors ? anglesOrSectors : Array(sectors).fill(2 * Math.PI / sectors);\n            let currentAngle = Math.PI / 2;\n\n            if (!pointsData[index] || !pointsData[index].points) {\n                console.warn(`No points data for index ${index}, skipping rendering`);\n                return;\n            }\n\n            pointsData[index].points.forEach((point, i) => {\n                const pointData = Object.entries(point).filter(([key]) => key !== \"Point_ID\");\n                const bitVector = pointData.map(([_, coord]) => (coord >= 0 ? 1 : 0)).join(\"\");\n                const bitVectorIndex = Math.min(parseInt(bitVector, 2), sectors - 1);\n\n                const startAngle = isProportional\n                    ? currentAngle + angles.slice(0, bitVectorIndex).reduce((a, b) => a + b, 0)\n                    : (2 * Math.PI * bitVectorIndex) / sectors;\n                const angleWidth = isProportional ? angles[bitVectorIndex] : (2 * Math.PI / sectors);\n                const centerAngle = startAngle + angleWidth / 2;\n\n                const overlapRadius =\n                    innerRadius +\n                    (0.9 * (outerRadius - innerRadius) * (i % pointsData[index].points.length)) /\n                    pointsData[index].points.length;\n                const x = overlapRadius * Math.cos(centerAngle);\n                const y = overlapRadius * Math.sin(centerAngle);\n\n                point.Point_ID.forEach((id) => {\n                    if (!pointPositions[id]) pointPositions[id] = [];\n                    pointPositions[id].push({ x, y, point, subspaceId: pointsData[index].key });\n                });\n\n                g.append(\"circle\")\n                    .attr(\"cx\", x)\n                    .attr(\"cy\", y)\n                    .attr(\"r\", 3)\n                    .attr(\"fill\", \"black\")\n                    .attr(\"stroke\", \"white\")\n                    .attr(\"stroke-width\", 0.5)\n                    .style(\"pointer-events\", \"visible\")\n                    .on(\"mouseover\", (event) => {\n                        const pointIds = point.Point_ID.join(\", \");\n                        const associatedLabels = Object.entries(labelsData.labels || {})\n                            .filter(([_, pointList]) => point.Point_ID.some((id) => pointList.includes(Number(id))))\n                            .map(([label]) => label);\n                        const labelText = associatedLabels.length > 0 ? associatedLabels.join(\", \") : \"No Label\";\n\n                        tooltip\n                            .style(\"visibility\", \"visible\")\n                            .html(\n                                `Point_IDs: ${pointIds}<br>Coordinates: (${x.toFixed(2)}, ${y.toFixed(2)})<br>Subspace: ${pointsData[index].key}<br>Label: ${labelText}`\n                            );\n                        setHoveredCoordinates({ ...point, label: labelText });\n                    })\n                    .on(\"mousemove\", (event) => {\n                        tooltip.style(\"top\", event.pageY + 10 + \"px\").style(\"left\", event.pageX + 10 + \"px\");\n                    })\n                    .on(\"mouseout\", () => {\n                        tooltip.style(\"visibility\", \"hidden\");\n                        setHoveredCoordinates(null);\n                    });\n            });\n        };\n        if (viewMode === \"normal\") {\n            renderNormalView({\n                g,\n                subspaces,\n                ringVisibility,\n                maxRadius,\n                ringLabels,\n                pointsData,\n                getSectorColor,\n                renderPoints,\n            });\n        } else {\n            renderProportionalView({\n                g,\n                subspaces,\n                ringVisibility,\n                maxRadius,\n                ringLabels,\n                pointsData,\n                getSectorColor,\n                renderPoints,\n            });\n        }\n\n        Object.entries(pointPositions).forEach(([pointId, positions]) => {\n            if (positions.length > 1) {\n                for (let i = 0; i < positions.length - 1; i++) {\n                    g.append(\"line\")\n                        .attr(\"x1\", positions[i].x)\n                        .attr(\"y1\", positions[i].y)\n                        .attr(\"x2\", positions[i + 1].x)\n                        .attr(\"y2\", positions[i + 1].y)\n                        .attr(\"stroke\", getLabelColor(pointId))\n                        .attr(\"stroke-width\", 1.5)\n                        .attr(\"stroke-opacity\", 0.9)\n                        .style(\"cursor\", \"pointer\")\n                        .on(\"mouseover\", () => tooltip.style(\"visibility\", \"visible\").html(`Connection: Point_ID ${pointId}`))\n                        .on(\"mousemove\", (event) => tooltip.style(\"top\", event.pageY + 10 + \"px\").style(\"left\", event.pageX + 10 + \"px\"))\n                        .on(\"mouseout\", () => tooltip.style(\"visibility\", \"hidden\"));\n                }\n            }\n        });\n\n        const zoom = d3.zoom().on(\"zoom\", (event) => g.attr(\"transform\", event.transform));\n        svg.call(zoom);\n\n        return () => tooltip.remove();\n    }, [jsonData, labelsData, ringVisibility, setHoveredCoordinates, viewMode]);\n\n    return (\n        <div style={{ width: \"100%\", height: \"100%\" }}>\n            <div style={{ marginBottom: \"10px\" }}>\n                <button\n                    onClick={() => setViewMode(\"normal\")}\n                    style={{\n                        marginRight: \"10px\",\n                        padding: \"5px 10px\",\n                        backgroundColor: viewMode === \"normal\" ? \"#4CAF50\" : \"#f0f0f0\",\n                        color: viewMode === \"normal\" ? \"white\" : \"black\",\n                    }}\n                >\n                    Normal View\n                </button>\n                <button\n                    onClick={() => setViewMode(\"proportional\")}\n                    style={{\n                        padding: \"5px 10px\",\n                        backgroundColor: viewMode === \"proportional\" ? \"#4CAF50\" : \"#f0f0f0\",\n                        color: viewMode === \"proportional\" ? \"white\" : \"black\",\n                    }}\n                >\n                    Proportional View\n                </button>\n            </div>\n            <svg ref={graphRef} style={{ width: \"100%\", height: \"800px\" }}></svg>\n        </div>\n    );\n};\n\nexport default HierarchicalGraph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}