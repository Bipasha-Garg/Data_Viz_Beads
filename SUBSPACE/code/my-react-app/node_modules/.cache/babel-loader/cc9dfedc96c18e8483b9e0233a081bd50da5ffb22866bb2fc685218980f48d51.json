{"ast":null,"code":"var _jsxFileName = \"/home/bipasha/Desktop/research/Data_Viz_Beads/Subspace/code/my-react-app/src/ParallelCoordinates.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParallelCoordinates = ({\n  data\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  useEffect(() => {\n    if (!data || !data.data || !Array.isArray(data.data) || !data.dimensions) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    const width = 600; // Increased width for better visibility\n    const height = 400;\n    const margin = {\n      top: 40,\n      right: 40,\n      bottom: 20,\n      left: 40\n    };\n    const dimensions = data.dimensions;\n\n    // Create y-scales for each dimension\n    const yScales = {};\n    dimensions.forEach(dim => {\n      yScales[dim] = d3.scaleLinear().domain(d3.extent(data.data, d => d.values[dim])).range([height - margin.top - margin.bottom, 0]).nice();\n    });\n\n    // Create x-scale for dimensions\n    const xScale = d3.scalePoint().domain(dimensions).range([0, width - margin.left - margin.right]).padding(0.1);\n\n    // Color scale based on actual labels\n    const colorScale = d3.scaleOrdinal(d3.schemeCategory10).domain([...new Set(data.data.map(d => d.label))]);\n    const g = svg.attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n    // Axes\n    const axes = g.selectAll(\".axis\").data(dimensions).enter().append(\"g\").attr(\"class\", \"axis\").attr(\"transform\", d => `translate(${xScale(d)}, 0)`);\n    axes.each(function (d) {\n      d3.select(this).call(d3.axisLeft(yScales[d]).ticks(5).tickFormat(d3.format(\".2f\")));\n    });\n\n    // Axis labels\n    axes.append(\"text\").attr(\"y\", -15).attr(\"text-anchor\", \"middle\").attr(\"fill\", \"black\").style(\"font-size\", \"12px\").text(d => d);\n\n    // Lines\n    const line = d3.line();\n    g.selectAll(\".line\").data(data.data).enter().append(\"path\").attr(\"class\", \"line\").attr(\"d\", d => line(dimensions.map(dim => [xScale(dim), yScales[dim](d.values[dim])]))).attr(\"stroke\", d => colorScale(d.label)).attr(\"stroke-width\", 1).attr(\"fill\", \"none\").attr(\"opacity\", 0.5).append(\"title\").text(d => `ID: ${d.Point_ID}\\nActual: ${d.label}\\nPredicted: ${d.prediction}`);\n\n    // Add legend\n    const legend = g.append(\"g\").attr(\"transform\", `translate(${width - margin.left - margin.right - 100}, 0)`);\n    const uniqueLabels = [...new Set(data.data.map(d => d.label))];\n    uniqueLabels.forEach((label, i) => {\n      const legendRow = legend.append(\"g\").attr(\"transform\", `translate(0, ${i * 20})`);\n      legendRow.append(\"rect\").attr(\"width\", 12).attr(\"height\", 12).attr(\"fill\", colorScale(label));\n      legendRow.append(\"text\").attr(\"x\", 18).attr(\"y\", 10).attr(\"fill\", \"black\").style(\"font-size\", \"12px\").text(label);\n    });\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"400px\",\n      overflow: \"auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n_s(ParallelCoordinates, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = ParallelCoordinates;\nexport default ParallelCoordinates;\nvar _c;\n$RefreshReg$(_c, \"ParallelCoordinates\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","ParallelCoordinates","data","_s","svgRef","Array","isArray","dimensions","svg","select","current","selectAll","remove","width","height","margin","top","right","bottom","left","yScales","forEach","dim","scaleLinear","domain","extent","d","values","range","nice","xScale","scalePoint","padding","colorScale","scaleOrdinal","schemeCategory10","Set","map","label","g","attr","append","axes","enter","each","call","axisLeft","ticks","tickFormat","format","style","text","line","Point_ID","prediction","legend","uniqueLabels","i","legendRow","overflow","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bipasha/Desktop/research/Data_Viz_Beads/Subspace/code/my-react-app/src/ParallelCoordinates.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\n\nconst ParallelCoordinates = ({ data }) => {\n    const svgRef = useRef(null);\n\n    useEffect(() => {\n        if (!data || !data.data || !Array.isArray(data.data) || !data.dimensions) return;\n\n        const svg = d3.select(svgRef.current);\n        svg.selectAll(\"*\").remove();\n\n        const width = 600;  // Increased width for better visibility\n        const height = 400;\n        const margin = { top: 40, right: 40, bottom: 20, left: 40 };\n\n        const dimensions = data.dimensions;\n\n        // Create y-scales for each dimension\n        const yScales = {};\n        dimensions.forEach(dim => {\n            yScales[dim] = d3\n                .scaleLinear()\n                .domain(d3.extent(data.data, d => d.values[dim]))\n                .range([height - margin.top - margin.bottom, 0])\n                .nice();\n        });\n\n        // Create x-scale for dimensions\n        const xScale = d3\n            .scalePoint()\n            .domain(dimensions)\n            .range([0, width - margin.left - margin.right])\n            .padding(0.1);\n\n        // Color scale based on actual labels\n        const colorScale = d3\n            .scaleOrdinal(d3.schemeCategory10)\n            .domain([...new Set(data.data.map(d => d.label))]);\n\n        const g = svg\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .append(\"g\")\n            .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n        // Axes\n        const axes = g.selectAll(\".axis\")\n            .data(dimensions)\n            .enter()\n            .append(\"g\")\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", d => `translate(${xScale(d)}, 0)`);\n\n        axes.each(function (d) {\n            d3.select(this)\n                .call(d3.axisLeft(yScales[d])\n                    .ticks(5)\n                    .tickFormat(d3.format(\".2f\")));\n        });\n\n        // Axis labels\n        axes.append(\"text\")\n            .attr(\"y\", -15)\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"fill\", \"black\")\n            .style(\"font-size\", \"12px\")\n            .text(d => d);\n\n        // Lines\n        const line = d3.line();\n        g.selectAll(\".line\")\n            .data(data.data)\n            .enter()\n            .append(\"path\")\n            .attr(\"class\", \"line\")\n            .attr(\"d\", d =>\n                line(dimensions.map(dim => [xScale(dim), yScales[dim](d.values[dim])]))\n            )\n            .attr(\"stroke\", d => colorScale(d.label))\n            .attr(\"stroke-width\", 1)\n            .attr(\"fill\", \"none\")\n            .attr(\"opacity\", 0.5)\n            .append(\"title\")\n            .text(d => `ID: ${d.Point_ID}\\nActual: ${d.label}\\nPredicted: ${d.prediction}`);\n\n        // Add legend\n        const legend = g.append(\"g\")\n            .attr(\"transform\", `translate(${width - margin.left - margin.right - 100}, 0)`);\n\n        const uniqueLabels = [...new Set(data.data.map(d => d.label))];\n        uniqueLabels.forEach((label, i) => {\n            const legendRow = legend.append(\"g\")\n                .attr(\"transform\", `translate(0, ${i * 20})`);\n\n            legendRow.append(\"rect\")\n                .attr(\"width\", 12)\n                .attr(\"height\", 12)\n                .attr(\"fill\", colorScale(label));\n\n            legendRow.append(\"text\")\n                .attr(\"x\", 18)\n                .attr(\"y\", 10)\n                .attr(\"fill\", \"black\")\n                .style(\"font-size\", \"12px\")\n                .text(label);\n        });\n\n    }, [data]);\n\n    return (\n        <div style={{ width: \"100%\", height: \"400px\", overflow: \"auto\" }}>\n            <svg ref={svgRef}></svg>\n        </div>\n    );\n};\n\nexport default ParallelCoordinates;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}