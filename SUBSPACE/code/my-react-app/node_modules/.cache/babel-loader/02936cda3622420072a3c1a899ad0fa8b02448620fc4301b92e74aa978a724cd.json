{"ast":null,"code":"var _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import HierarchicalGraph from \"./JsonDisplay\";\n\n// const App = () => {\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const [fileName, setFileName] = useState(\"\");\n//   const [jsonData, setJsonData] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [hoveredCoordinates, setHoveredCoordinates] = useState(null);\n//   const [labelsData, setLabelsData] = useState(null);\n\n//   const handleFileSelect = (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       setSelectedFile(file);\n//       setFileName(file.name);\n//       setError(null);\n//     }\n//   };\n\n//   const handleUpload = async (e) => {\n//     e.preventDefault(); \n\n//     if (!selectedFile) {\n//       setError(\"Please select a file first\");\n//       return;\n//     }\n\n//     setIsLoading(true);\n//     const formData = new FormData();\n//     formData.append(\"file\", selectedFile);\n\n//     try {\n//       const uploadResponse = await fetch(\"http://127.0.0.1:5000/upload\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n\n//       if (!uploadResponse.ok) {\n//         throw new Error(\"Upload failed\");\n//       }\n\n//       const result = await uploadResponse.json();\n//       console.log(\"Upload successful:\", result);\n\n//       const jsonResponse = await fetch(\n//         `http://127.0.0.1:5000/uploads/${result.json_filename}`\n//       );\n//       const processedData = await jsonResponse.json();\n\n//       console.log(\"hogya\");\n//       const labelsResponse = await fetch(\n//         `http://127.0.0.1:5000/uploads/labels_file.json`\n//       );\n\n//       console.log(\"fir hogya\");\n//       const processedLabelsData = await labelsResponse.json();\n//       console.log(\"chal toh rha hai toh fir dikkt kahan hai bc \");\n\n//       console.log(processedLabelsData);\n//       setJsonData(processedData);\n//       if (\n//         processedLabelsData &&\n//         typeof processedLabelsData.label === \"string\"\n//       ) {\n//         setLabelsData({ label: [processedLabelsData.label] }); \n//       } else {\n//         setLabelsData(processedLabelsData);\n//       }\n//     } catch (err) {\n//       setError(err.message);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"h-screen bg-gray-100 p-6 flex\">\n\n//       <div className=\"w-1/4 p-4 bg-white shadow rounded-lg\">\n//         <h1 className=\"text-xl font-bold mb-4\">File Upload</h1>\n\n//         <div className=\"mb-4\">\n//           <input\n//             type=\"file\"\n//             accept=\".csv\"\n//             onChange={handleFileSelect}\n//             className=\"mb-2 w-full\"\n//             disabled={isLoading}\n//           />\n\n//           {fileName && (\n//             <div className=\"mt-2 p-2 bg-blue-50 rounded\">\n//               Selected file: <span className=\"font-semibold\">{fileName}</span>\n//             </div>\n//           )}\n//         </div>\n\n//         <button\n//           type=\"button\"\n//           onClick={handleUpload}\n//           disabled={!selectedFile || isLoading}\n//           className=\"bg-blue-500 text-white px-4 py-2 rounded \n//                    disabled:bg-blue-300 disabled:cursor-not-allowed w-full\"\n//         >\n//           {isLoading ? \"Processing...\" : \"Upload\"}\n//         </button>\n\n//         {error && <div className=\"mt-2 text-red-500\">{error}</div>}\n\n//         {isLoading && (\n//           <div className=\"mt-2 text-blue-500\">Processing your file...</div>\n//         )}\n//         <div className=\"my-12\">\n//           {hoveredCoordinates && (\n//             <div className=\"mb-4 p-2 bg-green-50 rounded text-2xl text-wrap\">\n//               <strong>Hovered Node:</strong>\n//               <div>ID: {hoveredCoordinates.Point_IDs}</div>\n//               {/* Dynamically render the coordinates */}\n//               {Object.keys(hoveredCoordinates)\n//                 .filter((key) => key !== \"id\") \n//                 .map((key) => (\n//                   <div key={key}>\n//                     <strong>{key}:</strong>{\" \"}\n//                     {hoveredCoordinates[key].toFixed\n//                       ? hoveredCoordinates[key].toFixed(2)\n//                       : hoveredCoordinates[key]}\n//                   </div>\n//                 ))}\n//             </div>\n//           )}\n//         </div>\n//       </div>\n\n//       <div className=\"h-full flex-1 flex flex-col items-center justify-center\">\n//         <h2 className=\"text-2xl font-bold mb-4\">JSON Data</h2>\n//         <div\n//           className=\"flex justify-center items-center bg-white shadow rounded-lg p-4\"\n//           style={{ width: \"1400px\", height: \"1000px\" }}\n//         >\n//           {jsonData && (\n//             <HierarchicalGraph\n//               jsonData={jsonData}\n//               labelsData={labelsData}\n//               setHoveredCoordinates={setHoveredCoordinates}\n//             />\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default App;\n\nimport React, { useState } from \"react\";\nimport HierarchicalGraph from \"./JsonDisplay\";\nconst App = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileName, setFileName] = useState(\"\");\n  const [jsonData, setJsonData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hoveredCoordinates, setHoveredCoordinates] = useState(null);\n  const [labelsData, setLabelsData] = useState(null);\n  const [ringVisibility, setRingVisibility] = useState({});\n  const handleFileSelect = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setFileName(file.name);\n      setError(null);\n    }\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!selectedFile) {\n      setError(\"Please select a file first\");\n      return;\n    }\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    try {\n      const uploadResponse = await fetch(\"http://127.0.0.1:5000/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!uploadResponse.ok) {\n        throw new Error(\"Upload failed\");\n      }\n      const result = await uploadResponse.json();\n      console.log(\"Upload successful:\", result);\n      const jsonResponse = await fetch(`http://127.0.0.1:5000/uploads/${result.json_filename}`);\n      const processedData = await jsonResponse.json();\n      const labelsResponse = await fetch(`http://127.0.0.1:5000/uploads/labels_file.json`);\n      const processedLabelsData = await labelsResponse.json();\n      setJsonData(processedData);\n      setLabelsData(processedLabelsData);\n\n      // Initialize ring visibility\n      const subspaces = Object.keys(processedData);\n      subspaces.sort((a, b) => a.length - b.length);\n      const initialVisibility = subspaces.reduce((acc, key) => {\n        acc[key] = true;\n        return acc;\n      }, {});\n      setRingVisibility(initialVisibility);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const toggleRingVisibility = key => {\n    setRingVisibility(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n  };\n  const toggleAllRingsVisibility = () => {\n    const subspaces = Object.keys(jsonData || {});\n    subspaces.sort((a, b) => a.length - b.length);\n    const newVisibility = subspaces.reduce((acc, key, index) => {\n      acc[key] = index >= subspaces.length - 2 ? true : !ringVisibility[key];\n      return acc;\n    }, {});\n    setRingVisibility(newVisibility);\n  };\n\n  // return (\n  //   <div className=\"h-screen bg-gray-100 p-6 flex\">\n  //     <div className=\"w-1/4 p-4 bg-white shadow rounded-lg\">\n  //       <h1 className=\"text-xl font-bold mb-4\">File Upload</h1>\n  //       <div className=\"mb-4\">\n  //         <input\n  //           type=\"file\"\n  //           accept=\".csv\"\n  //           onChange={handleFileSelect}\n  //           className=\"mb-2 w-full\"\n  //           disabled={isLoading}\n  //         />\n  //         {fileName && (\n  //           <div className=\"mt-2 p-2 bg-blue-50 rounded\">\n  //             Selected file: <span className=\"font-semibold\">{fileName}</span>\n  //           </div>\n  //         )}\n  //       </div>\n  //       <button\n  //         type=\"button\"\n  //         onClick={handleUpload}\n  //         disabled={!selectedFile || isLoading}\n  //         className=\"bg-blue-500 text-white px-4 py-2 rounded w-full\"\n  //       >\n  //         {isLoading ? \"Processing...\" : \"Upload\"}\n  //       </button>\n  //       {error && <div className=\"mt-2 text-red-500\">{error}</div>}\n\n  //       <div className=\"mt-6\">\n  //         <h2 className=\"text-xl font-bold mb-4\">Subspace Rings</h2>\n  //         <button\n  //           onClick={toggleAllRingsVisibility}\n  //           className=\"bg-blue-500 text-white px-4 py-2 rounded w-full mb-4\"\n  //         >\n  //           {Object.values(ringVisibility).every((v) => v)\n  //             ? \"Collapse All\"\n  //             : \"Expand All\"}\n  //         </button>\n  //         {Object.keys(jsonData || {}).map((key) => (\n  //           <div key={key} className=\"mb-2\">\n  //             <button\n  //               onClick={() => toggleRingVisibility(key)}\n  //               className=\"w-full p-2 text-left rounded\"\n  //               style={{\n  //                 backgroundColor: ringVisibility[key] ? \"lightblue\" : \"lightgray\",\n  //                 border: \"1px solid #ccc\",\n  //               }}\n  //             >\n  //               {ringVisibility[key] ? `- ${key}` : `+ ${key}`}\n  //             </button>\n  //           </div>\n  //         ))}\n  //       </div>\n  //     </div>\n\n  //     <div className=\"h-full flex-1 flex flex-col items-center justify-center\">\n  //       <h2 className=\"text-2xl font-bold mb-4\">Visualization</h2>\n  //       <div className=\"flex justify-center items-center bg-white shadow rounded-lg p-4 w-full h-full\">\n  //         {jsonData && (\n  //           <HierarchicalGraph\n  //             jsonData={jsonData}\n  //             labelsData={labelsData}\n  //             setHoveredCoordinates={setHoveredCoordinates}\n  //             ringVisibility={ringVisibility}\n  //           />\n  //         )}\n  //       </div>\n  //     </div>\n\n  //     <div className=\"w-1/4 p-4 bg-white shadow rounded-lg\">\n  //       <h2 className=\"text-xl font-bold mb-4\">Point Info</h2>\n  //       {hoveredCoordinates && (\n  //         <div className=\"p-2 bg-green-50 rounded text-lg\">\n  //           <strong>Hovered Node:</strong>\n  //           <div>ID: {hoveredCoordinates.Point_IDs}</div>\n  //           {Object.keys(hoveredCoordinates)\n  //             .filter((key) => key !== \"id\")\n  //             .map((key) => (\n  //               <div key={key}>\n  //                 <strong>{key}:</strong> {hoveredCoordinates[key].toFixed ? hoveredCoordinates[key].toFixed(2) : hoveredCoordinates[key]}\n  //               </div>\n  //             ))}\n  //         </div>\n  //       )}\n  //     </div>\n  //   </div>\n  // );\n};\n_s(App, \"PuJz+i6KhXFtQIp+Rk+RcwVA9gY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","HierarchicalGraph","App","_s","selectedFile","setSelectedFile","fileName","setFileName","jsonData","setJsonData","error","setError","isLoading","setIsLoading","hoveredCoordinates","setHoveredCoordinates","labelsData","setLabelsData","ringVisibility","setRingVisibility","handleFileSelect","e","file","target","files","name","handleUpload","preventDefault","formData","FormData","append","uploadResponse","fetch","method","body","ok","Error","result","json","console","log","jsonResponse","json_filename","processedData","labelsResponse","processedLabelsData","subspaces","Object","keys","sort","a","b","length","initialVisibility","reduce","acc","key","err","message","toggleRingVisibility","prev","toggleAllRingsVisibility","newVisibility","index","_c","$RefreshReg$"],"sources":["/home/bipasha/Desktop/research/Data_Viz_Beads/Subspace/code/my-react-app/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import HierarchicalGraph from \"./JsonDisplay\";\n\n// const App = () => {\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const [fileName, setFileName] = useState(\"\");\n//   const [jsonData, setJsonData] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [hoveredCoordinates, setHoveredCoordinates] = useState(null);\n//   const [labelsData, setLabelsData] = useState(null);\n  \n//   const handleFileSelect = (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       setSelectedFile(file);\n//       setFileName(file.name);\n//       setError(null);\n//     }\n//   };\n\n  \n//   const handleUpload = async (e) => {\n//     e.preventDefault(); \n\n//     if (!selectedFile) {\n//       setError(\"Please select a file first\");\n//       return;\n//     }\n\n//     setIsLoading(true);\n//     const formData = new FormData();\n//     formData.append(\"file\", selectedFile);\n\n//     try {\n//       const uploadResponse = await fetch(\"http://127.0.0.1:5000/upload\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n\n//       if (!uploadResponse.ok) {\n//         throw new Error(\"Upload failed\");\n//       }\n\n//       const result = await uploadResponse.json();\n//       console.log(\"Upload successful:\", result);\n\n      \n//       const jsonResponse = await fetch(\n//         `http://127.0.0.1:5000/uploads/${result.json_filename}`\n//       );\n//       const processedData = await jsonResponse.json();\n      \n//       console.log(\"hogya\");\n//       const labelsResponse = await fetch(\n//         `http://127.0.0.1:5000/uploads/labels_file.json`\n//       );\n      \n      \n      \n\n//       console.log(\"fir hogya\");\n//       const processedLabelsData = await labelsResponse.json();\n//       console.log(\"chal toh rha hai toh fir dikkt kahan hai bc \");\n\n//       console.log(processedLabelsData);\n//       setJsonData(processedData);\n//       if (\n//         processedLabelsData &&\n//         typeof processedLabelsData.label === \"string\"\n//       ) {\n//         setLabelsData({ label: [processedLabelsData.label] }); \n//       } else {\n//         setLabelsData(processedLabelsData);\n//       }\n//     } catch (err) {\n//       setError(err.message);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"h-screen bg-gray-100 p-6 flex\">\n\n//       <div className=\"w-1/4 p-4 bg-white shadow rounded-lg\">\n//         <h1 className=\"text-xl font-bold mb-4\">File Upload</h1>\n\n//         <div className=\"mb-4\">\n//           <input\n//             type=\"file\"\n//             accept=\".csv\"\n//             onChange={handleFileSelect}\n//             className=\"mb-2 w-full\"\n//             disabled={isLoading}\n//           />\n\n//           {fileName && (\n//             <div className=\"mt-2 p-2 bg-blue-50 rounded\">\n//               Selected file: <span className=\"font-semibold\">{fileName}</span>\n//             </div>\n//           )}\n//         </div>\n\n//         <button\n//           type=\"button\"\n//           onClick={handleUpload}\n//           disabled={!selectedFile || isLoading}\n//           className=\"bg-blue-500 text-white px-4 py-2 rounded \n//                    disabled:bg-blue-300 disabled:cursor-not-allowed w-full\"\n//         >\n//           {isLoading ? \"Processing...\" : \"Upload\"}\n//         </button>\n\n//         {error && <div className=\"mt-2 text-red-500\">{error}</div>}\n\n//         {isLoading && (\n//           <div className=\"mt-2 text-blue-500\">Processing your file...</div>\n//         )}\n//         <div className=\"my-12\">\n//           {hoveredCoordinates && (\n//             <div className=\"mb-4 p-2 bg-green-50 rounded text-2xl text-wrap\">\n//               <strong>Hovered Node:</strong>\n//               <div>ID: {hoveredCoordinates.Point_IDs}</div>\n//               {/* Dynamically render the coordinates */}\n//               {Object.keys(hoveredCoordinates)\n//                 .filter((key) => key !== \"id\") \n//                 .map((key) => (\n//                   <div key={key}>\n//                     <strong>{key}:</strong>{\" \"}\n//                     {hoveredCoordinates[key].toFixed\n//                       ? hoveredCoordinates[key].toFixed(2)\n//                       : hoveredCoordinates[key]}\n//                   </div>\n//                 ))}\n//             </div>\n//           )}\n//         </div>\n//       </div>\n\n//       <div className=\"h-full flex-1 flex flex-col items-center justify-center\">\n//         <h2 className=\"text-2xl font-bold mb-4\">JSON Data</h2>\n//         <div\n//           className=\"flex justify-center items-center bg-white shadow rounded-lg p-4\"\n//           style={{ width: \"1400px\", height: \"1000px\" }}\n//         >\n//           {jsonData && (\n//             <HierarchicalGraph\n//               jsonData={jsonData}\n//               labelsData={labelsData}\n//               setHoveredCoordinates={setHoveredCoordinates}\n//             />\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default App;\n\n\nimport React, { useState } from \"react\";\nimport HierarchicalGraph from \"./JsonDisplay\";\n\nconst App = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileName, setFileName] = useState(\"\");\n  const [jsonData, setJsonData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hoveredCoordinates, setHoveredCoordinates] = useState(null);\n  const [labelsData, setLabelsData] = useState(null);\n  const [ringVisibility, setRingVisibility] = useState({});\n\n  const handleFileSelect = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setFileName(file.name);\n      setError(null);\n    }\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    if (!selectedFile) {\n      setError(\"Please select a file first\");\n      return;\n    }\n\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n\n    try {\n      const uploadResponse = await fetch(\"http://127.0.0.1:5000/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!uploadResponse.ok) {\n        throw new Error(\"Upload failed\");\n      }\n\n      const result = await uploadResponse.json();\n      console.log(\"Upload successful:\", result);\n\n      const jsonResponse = await fetch(\n        `http://127.0.0.1:5000/uploads/${result.json_filename}`\n      );\n      const processedData = await jsonResponse.json();\n\n      const labelsResponse = await fetch(\n        `http://127.0.0.1:5000/uploads/labels_file.json`\n      );\n      const processedLabelsData = await labelsResponse.json();\n\n      setJsonData(processedData);\n      setLabelsData(processedLabelsData);\n\n      // Initialize ring visibility\n      const subspaces = Object.keys(processedData);\n      subspaces.sort((a, b) => a.length - b.length);\n      const initialVisibility = subspaces.reduce((acc, key) => {\n        acc[key] = true;\n        return acc;\n      }, {});\n      setRingVisibility(initialVisibility);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const toggleRingVisibility = (key) => {\n    setRingVisibility((prev) => ({\n      ...prev,\n      [key]: !prev[key],\n    }));\n  };\n\n  const toggleAllRingsVisibility = () => {\n    const subspaces = Object.keys(jsonData || {});\n    subspaces.sort((a, b) => a.length - b.length);\n\n    const newVisibility = subspaces.reduce((acc, key, index) => {\n      acc[key] = index >= subspaces.length - 2 ? true : !ringVisibility[key];\n      return acc;\n    }, {});\n    setRingVisibility(newVisibility);\n  };\n\n  // return (\n  //   <div className=\"h-screen bg-gray-100 p-6 flex\">\n  //     <div className=\"w-1/4 p-4 bg-white shadow rounded-lg\">\n  //       <h1 className=\"text-xl font-bold mb-4\">File Upload</h1>\n  //       <div className=\"mb-4\">\n  //         <input\n  //           type=\"file\"\n  //           accept=\".csv\"\n  //           onChange={handleFileSelect}\n  //           className=\"mb-2 w-full\"\n  //           disabled={isLoading}\n  //         />\n  //         {fileName && (\n  //           <div className=\"mt-2 p-2 bg-blue-50 rounded\">\n  //             Selected file: <span className=\"font-semibold\">{fileName}</span>\n  //           </div>\n  //         )}\n  //       </div>\n  //       <button\n  //         type=\"button\"\n  //         onClick={handleUpload}\n  //         disabled={!selectedFile || isLoading}\n  //         className=\"bg-blue-500 text-white px-4 py-2 rounded w-full\"\n  //       >\n  //         {isLoading ? \"Processing...\" : \"Upload\"}\n  //       </button>\n  //       {error && <div className=\"mt-2 text-red-500\">{error}</div>}\n\n  //       <div className=\"mt-6\">\n  //         <h2 className=\"text-xl font-bold mb-4\">Subspace Rings</h2>\n  //         <button\n  //           onClick={toggleAllRingsVisibility}\n  //           className=\"bg-blue-500 text-white px-4 py-2 rounded w-full mb-4\"\n  //         >\n  //           {Object.values(ringVisibility).every((v) => v)\n  //             ? \"Collapse All\"\n  //             : \"Expand All\"}\n  //         </button>\n  //         {Object.keys(jsonData || {}).map((key) => (\n  //           <div key={key} className=\"mb-2\">\n  //             <button\n  //               onClick={() => toggleRingVisibility(key)}\n  //               className=\"w-full p-2 text-left rounded\"\n  //               style={{\n  //                 backgroundColor: ringVisibility[key] ? \"lightblue\" : \"lightgray\",\n  //                 border: \"1px solid #ccc\",\n  //               }}\n  //             >\n  //               {ringVisibility[key] ? `- ${key}` : `+ ${key}`}\n  //             </button>\n  //           </div>\n  //         ))}\n  //       </div>\n  //     </div>\n\n  //     <div className=\"h-full flex-1 flex flex-col items-center justify-center\">\n  //       <h2 className=\"text-2xl font-bold mb-4\">Visualization</h2>\n  //       <div className=\"flex justify-center items-center bg-white shadow rounded-lg p-4 w-full h-full\">\n  //         {jsonData && (\n  //           <HierarchicalGraph\n  //             jsonData={jsonData}\n  //             labelsData={labelsData}\n  //             setHoveredCoordinates={setHoveredCoordinates}\n  //             ringVisibility={ringVisibility}\n  //           />\n  //         )}\n  //       </div>\n  //     </div>\n\n  //     <div className=\"w-1/4 p-4 bg-white shadow rounded-lg\">\n  //       <h2 className=\"text-xl font-bold mb-4\">Point Info</h2>\n  //       {hoveredCoordinates && (\n  //         <div className=\"p-2 bg-green-50 rounded text-lg\">\n  //           <strong>Hovered Node:</strong>\n  //           <div>ID: {hoveredCoordinates.Point_IDs}</div>\n  //           {Object.keys(hoveredCoordinates)\n  //             .filter((key) => key !== \"id\")\n  //             .map((key) => (\n  //               <div key={key}>\n  //                 <strong>{key}:</strong> {hoveredCoordinates[key].toFixed ? hoveredCoordinates[key].toFixed(2) : hoveredCoordinates[key]}\n  //               </div>\n  //             ))}\n  //         </div>\n  //       )}\n  //     </div>\n  //   </div>\n  // );\n  \n};\n\nexport default App;"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,iBAAiB,MAAM,eAAe;AAE7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}